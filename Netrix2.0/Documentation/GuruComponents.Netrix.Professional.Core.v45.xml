<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GuruComponents.Netrix.Professional.Core.v45</name>
    </assembly>
    <members>
        <member name="T:GuruComponents.Netrix.Alignment">
            <summary>
            Controls the alignment of text within a block element.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Alignment.Left">
            <summary>
            Align text to the left (default).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Alignment.Center">
            <summary>
            Center text within the container.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Alignment.Right">
            <summary>
            Align text to the right.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Alignment.Full">
            <summary>
            Justify text if justification is supported by the container.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Alignment.None">
            <summary>
            Remove the alignment attribute.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.BlockDefaultType">
            <summary>
            Type of paragraphs (block) insertion.
            </summary>
            <remarks>
            To use this enumaration the property <see cref="P:GuruComponents.Netrix.IHtmlEditor.BlockDefault">BlockDefault</see>
            must be set before the document is loaded. The purpose of this definition is to change the
            behavior of the ENTER key. The behavior of the various paragraph insertion methods will not change.
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.BlockDefault"/>
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.BlockDefaultType.DIV">
            <summary>
            Hitting enter will insert DIV. To insert a break type Shft-Enter.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.BlockDefaultType.P">
            <summary>
            Hitting enter will insert P. To insert a break type Shft-Enter.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.ComStream">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.#ctor(System.IO.Stream)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.Commit(System.Int32)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.LockRegion(System.Int64,System.Int64,System.Int32)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.Read(System.Byte[],System.Int32,System.IntPtr)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.Revert">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.System#Runtime#InteropServices#ComTypes#IStream#Seek(System.Int64,System.Int32,System.IntPtr)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.SetSize(System.Int64)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ComStream.Write(System.Byte[],System.Int32,System.IntPtr)">
            <exclude />            
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.ConnectionPointCookie">
            <summary>
            Connect events helper class.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ConnectionPointCookie.#ctor(System.Object,System.Object,System.Type)">
            <summary>
            Creates a connection point to of the given interface type,
            which will call on a managed code sink that implements that interface.
            </summary>
            <param name='source'>
            The object that exposes the events.  This object must implement IConnectionPointContainer or an InvalidCastException will be thrown.
            </param>
            <param name='sink'>
            The object to sink the events.  This object must implement the interface eventInterface, or an InvalidCastException is thrown.
            </param>
            <param name='eventInterface'>
            The event interface to sink.  The sink object must support this interface and the source object must expose it through it's ConnectionPointContainer.
            </param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ConnectionPointCookie.#ctor(System.Object,System.Object,System.Type,System.Boolean)">
            <summary>
            Creates a connection point to of the given interface type,
            which will call on a managed code sink that implements that interface.
            </summary>
            <param name='source'>
            The object that exposes the events.  This object must implement IConnectionPointContainer or an InvalidCastException will be thrown.
            </param>
            <param name='sink'>
            The object to sink the events.  This object must implement the interface eventInterface, or an InvalidCastException is thrown.
            </param>
            <param name='eventInterface'>
            The event interface to sink.  The sink object must support this interface and the source object must expose it through it's ConnectionPointContainer.
            </param>
            <param name="throwException"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ConnectionPointCookie.#ctor(System.Object,System.Object,System.Guid,System.Boolean)">
            <summary>
            Creates a connection point to of the given interface type,
            which will call on a managed code sink that implements that interface.
            </summary>
            <param name='source'>
            The object that exposes the events. This object must implement IConnectionPointContainer or an InvalidCastException will be thrown.
            </param>
            <param name='sink'>
            The object to sink the events. This object must implement the interface eventInterface, or an InvalidCastException is thrown.
            </param>
            <param name='iid'>
            The GUID of the event interface to sink. The sink object must support this interface and the source object must expose it through it's ConnectionPointContainer.
            </param>
            <param name='throwException'>
            If true, exceptions described will be thrown, otherwise object will silently fail to connect.
            </param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ConnectionPointCookie.Disconnect">
            <summary>
            Disconnect the current connection point.  If the object is not connected,
            this method will do nothing.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.ConnectionPointCookie.Dispose">
            <summary>
            Force disconnect before disposing.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.DispId">
            <exclude/>  
            <summary>
            DispID's for common usage and interface definitions.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop">
            <exclude/>
            <summary>
            This class is a wrapper to MSHTML.
            </summary>
            <remarks>
            This class contains all COM related definitions, like interfaces, enumerations,
            Win32 API calls, structures and classes to help the interfaces to get implemented
            and all GUIDs to find the right entry points in the MSHTML.DLL.
            <para>
            The interface definitions does not contain the whole MSHTML but the ones we need
            to use the NetRix functions.
            </para>
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IDM">
            <summary>
            IDM Commands used internally 
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.MB">
            <summary>
            Messagebox style constants, used to re-create suppressed Messageboxes.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_MODE">
            <summary>
            Provides a layout behavior with information about the current state of the layout engine.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_MODE.BEHAVIORLAYOUTMODE_NATURAL">
            <summary>
            The layout engine is requesting the natural size of the element. Both width and height must be returned.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_MODE.BEHAVIORLAYOUTMODE_MINWIDTH">
            <summary>
            The layout engine is requesting the element's minimum width requirement.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_MODE.BEHAVIORLAYOUTMODE_MAXWIDTH">
            <summary>
            The layout engine is requesting the element's maximum width requirement.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_MODE.BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION">
            <summary>
            The layout engine is requesting the element's media resolution.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_MODE.BEHAVIORLAYOUTMODE_FINAL_PERCENT">
            <summary>
            This value is used when the layout engine is running through a final pass to layout percent-sized parent elements. This pass happens when a sized-to-content element is forced to change size and has percent-sized child elements that may need to resize themselves to adjust.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_INFO">
            <summary>
            Specifies the type of layout control the layout behavior exhibits.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_INFO.BEHAVIORLAYOUTINFO_FULLDELEGATION">
            <summary>
            The layout behavior completely controls sizing.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_INFO.BEHAVIORLAYOUTINFO_MODIFYNATURAL">
            <summary>
            The layout behavior modifies the natural content size.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.BEHAVIOR_LAYOUT_INFO.BEHAVIORLAYOUTINFO_MAPSIZE">
            <summary>
            The layout behavior maps the content size.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.DIALOG">
            <summary>
            MSHTML does not enable selection of the text in the form.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.DISABLE_HELP_MENU">
            <summary>
            Not supported in NetRix
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.NO3DBORDER">
            <summary>
            MSHTML does not use 3-D borders on any frames or framesets. To turn the border off on only the outer frameset use DOCHOSTUIFLAG_NO3DOUTERBORDER
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.SCROLL_NO">
            <summary>
            MSHTML does not have scroll bars. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.DISABLE_SCRIPT_INACTIVE">
            <summary>
            MSHTML does not execute any script until fully activated.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.OPENNEWWIN">
            <summary>
            Not supported in NetRix
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.DISABLE_OFFSCREEN">
            <summary>
            Not supported in NetRix
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.FLAT_SCROLLBAR">
            <summary>
            Uses flat scroll bars for any UI it displays.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.DIV_BLOCKDEFAULT">
            <summary>
            Inserts the div tag if a return is entered in edit mode. Without this flag, MSHTML will use the p tag. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.ACTIVATE_CLIENTHIT_ONLY">
            <summary>
            Becomes UI active if the mouse is clicked in the client area of the window. It does not become UI active if the mouse is clicked on a non-client area, such as a scroll bar.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.USE_WINDOWLESS_SELECTCONTROL">
            <summary>
            Causes MSHTML to use the Document Object Model (DOM) to create native "windowless" select controls that can be visually layered under other elements.
            </summary>
            <remarks>This is ON by default and cannot be changed in Netrix' object model.</remarks>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.USE_WINDOWED_SELECTCONTROL">
            <summary>
            Causes MSHTML to create standard Microsoft Win32 "windowed" select and drop-down controls. 
            </summary>
            <remarks>This is OFF by default and cannot be changed in Netrix' object model.</remarks>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIFLAG.DPI_AWARE">
            <summary>
            Causes layout engine to calculate document pixels as 96 dots per inch (dpi). Normally, a document pixel is the same size as a screen pixel. This flag is equivalent to setting the FEATURE_96DPI_PIXEL feature control key on a per-host basis. 
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.COMMSG">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.COMMSG.hwnd">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.COMMSG.message">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.COMMSG.wParam">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.COMMSG.lParam">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.COMMSG.time">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.COMMSG.pt_x">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.COMMSG.pt_y">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.DISPPARAMS">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DISPPARAMS.rgvarg">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DISPPARAMS.rgdispidNamedArgs">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DISPPARAMS.cArgs">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DISPPARAMS.cNamedArgs">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.wCode">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.wReserved">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.bstrSource">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.bstrDescription">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.bstrHelpFile">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.dwHelpContext">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.dwReserved">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.dwFillIn">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.EXCEPINFO.scode">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIINFO">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIINFO.cbSize">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIINFO.dwFlags">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIINFO.dwDoubleClick">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIINFO.dwReserved1">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DOCHOSTUIINFO.dwReserved2">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.DVASPECT">
            <summary>
            Specifies the desired data or view aspect of the object when drawing or getting data.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DVASPECT.DVASPECT_CONTENT">
            <summary>
                A representation of an object that lets that object be displayed as an embedded
               object inside a container. This value is typically specified for compound
                document objects. The presentation can be provided for the screen or printer.
                </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DVASPECT.DVASPECT_THUMBNAIL">
            <summary>
                 A thumbnail representation of an object that lets that object be displayed
                 in a browsing tool. The thumbnail is approximately a 120 by 120 pixel, 16-color
                 (recommended), device-independent bitmap potentially wrapped in a metafile.
                 </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DVASPECT.DVASPECT_ICON">
            <summary>
                 An iconic representation of an object.
                 </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.DVASPECT.DVASPECT_DOCPRINT">
            <summary>
                 A representation of an object on the screen as though it were printed to
                 a printer using the Print command from the File menu. The described data
                 may represent a sequence of pages.
                 </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.TYMED">
            <summary>
            Provides the managed definition of the TYMED structure.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_TEXT">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_BITMAP">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_METAFILEPICT">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_SYLK">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_DIF">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_TIFF">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_OEMTEXT">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_DIB">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_PALETTE">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_PENDATA">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_RIFF">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_WAVE">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_UNICODETEXT">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_ENHMETAFILE">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_HDROP">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_LOCALE">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.CLIPFORMAT.CF_DIBV5">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.FORMATETC">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.FORMATETC.cfFormat">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.FORMATETC.ptd">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.FORMATETC.dwAspect">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.FORMATETC.lindex">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.FORMATETC.tymed">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.HTML_PAINTER_INFO">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.HTML_PAINTER_INFO.lFlags">
            <exclude />            
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.HTML_PAINTER_INFO.lZOrder">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.HTML_PAINTER_INFO.iidDrawObject">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.HTML_PAINTER_INFO.rcBounds">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.NMHDR">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMHDR.hwndFrom">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMHDR.idFrom">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMHDR.code">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.NMCUSTOMDRAW">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMCUSTOMDRAW.nmcd">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMCUSTOMDRAW.dwDrawStage">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMCUSTOMDRAW.hdc">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMCUSTOMDRAW.rc">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMCUSTOMDRAW.dwItemSpec">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMCUSTOMDRAW.uItemState">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.NMCUSTOMDRAW.lItemlParam">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.POINT">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.POINT.x">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.POINT.y">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.POINTL">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.POINTL.x">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.POINTL.y">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.RECT">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.RECT.left">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.RECT.top">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.RECT.right">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.RECT.bottom">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.RECT.#ctor">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.RECT.FromXYWH(System.Int32,System.Int32,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.STATDATA">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATDATA.advf">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATDATA.dwConnection">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.STGMEDIUM">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STGMEDIUM.tymed">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STGMEDIUM.data">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STGMEDIUM.pUnkForRelease">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.STATSTG">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.pwcsName">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.type">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.cbSize">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.mtime">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.ctime">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.atime">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.grfMode">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.grfLocksSupported">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_data1">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_data2">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_data3">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_b0">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_b1">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_b2">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_b3">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_b4">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_b5">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_b6">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.clsid_b7">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.grfStateBits">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.STATSTG.reserved">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.tagSIZE">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.tagSIZE.cx">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.tagSIZE.cy">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.tagSIZEL">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.tagSIZEL.cx">
            <exclude />
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.Interop.tagSIZEL.cy">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IAdviseSink">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IBindCtx">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IEnumOleUndoUnits">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLTxtRange.SetText(System.String)">
            <summary>
            Sets the text contained within the range. 
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLTxtRange.GetText">
            <summary>
            Retrieves the text contained within the range. 
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.javaEnabled">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.taintEnabled">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.toString">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.systemLanguage">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.cpuClass">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.userProfile">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.onLine">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.connectionSpeed">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.appName">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.appMinorVersion">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.userLanguage">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.opsProfile">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.mimeTypes">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.appVersion">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.appCodeName">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.platform">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.browserLanguage">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.userAgent">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.cookieEnabled">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmNavigator.plugins">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLWindow4">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLWindow4.createPopup(System.Object)">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLWindow4.frameElement">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElementFactory">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElementFactory.create(System.Object,System.Object,System.Object,System.Object)">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IOmHistory">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IOmHistory.back(System.Object)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IOmHistory.forward(System.Object)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IOmHistory.go(System.Object)">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IOmHistory.length">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLImageElementFactory">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLImageElementFactory.create(System.Object,System.Object)">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.onabort">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.lowsrc">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.useMap">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.alt">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.readyState">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.complete">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.name">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.fileUpdatedDate">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.width">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.start">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.nameProp">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.src">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.fileModifiedDate">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.loop">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.vspace">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.fileSize">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.align">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.dynsrc">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.fileCreatedDate">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.onerror">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.isMap">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.onload">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.height">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.protocol">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.href">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.mimeType">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.hspace">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLImgElement.border">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElement">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElement.text">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElement.value">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElement.form">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElement.defaultSelected">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElement.index">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLOptionElement.selected">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLMimeTypesCollection">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLMimeTypesCollection.length">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.addRequest(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.clearRequest">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.doRequest(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.getAttribute(System.String)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.setAttribute(System.String,System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.commitChanges">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.addReadRequest(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.doReadRequest(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLOpsProfile.doWriteRequest">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLPluginsCollection">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLPluginsCollection.refresh(System.Boolean)">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLPluginsCollection.length">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen.updateInterval">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen.width">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen.bufferDepth">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen.colorDepth">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen.fontSmoothingEnabled">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen.availWidth">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen.availHeight">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLScreen.height">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLDataTransfer">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLDataTransfer.setData(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLDataTransfer.getData(System.String)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IHTMLDataTransfer.clearData(System.String)">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLDataTransfer.dropEffect">
            <exclude />
        </member>
        <member name="P:GuruComponents.Netrix.ComInterop.Interop.IHTMLDataTransfer.effectAllowed">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IInternetBindInfo">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IInternetBindInfo.GetBindInfo(System.UInt32@,GuruComponents.Netrix.ComInterop.Interop.BINDINFO@)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Interop.IInternetBindInfo.GetBindString(System.UInt32,System.String@,System.UInt32,System.UInt32@)">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IInternetProtocol">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IInternetProtocolInfo">
            <exclude />
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLCaret">
            <exclude/>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Interop.IMarkupContainer2">
            <exclude/>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker">
            <summary>
            IMoniker-Implementation for loading html into a document while having the ability to set the base url.
            </summary>
            <remarks>
            Borrowed from https://www.codeproject.com/Articles/18935/The-most-complete-C-Webbrowser-wrapper-control. 
            All the credits to mehrcpp!
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.InitLoader(System.String,System.String)">
            <summary>
            Initializes the internal IStream-instance and stores the base url.
            </summary>
            <param name="content"></param>
            <param name="baseUrl"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.GetClassID(System.Guid@)">
            <summary>
            IMoniker.GetClassID is not implemented.
            </summary>
            <param name="pClassID"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.IsDirty">
            <summary>
            IMoniker.IsDirty is not implemented.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            IMoniker.Load is not implemented.
            </summary>
            <param name="pStm"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
            <summary>
            IMoniker.Save is not implemented.
            </summary>
            <param name="pStm"></param>
            <param name="fClearDirty"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.GetSizeMax(System.Int64@)">
            <summary>
            IMoniker.GetSizeMax is not implemented.
            </summary>
            <param name="pcbSize"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
            <summary>
            IMoniker.BindToObject is not implemented.
            </summary>
            <param name="pbc"></param>
            <param name="pmkToLeft"></param>
            <param name="riidResult"></param>
            <param name="ppvResult"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
            <summary>
            Implements IMoniker.BindToStorage. Passes a ref to the internal stream that holds the page data to load.
            </summary>
            <param name="pbc"></param>
            <param name="pmkToLeft"></param>
            <param name="riid"></param>
            <param name="ppvObj"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>
            IMoniker.Reduce is not implemented.
            </summary>
            <param name="pbc"></param>
            <param name="dwReduceHowFar"></param>
            <param name="ppmkToLeft"></param>
            <param name="ppmkReduced"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>
            IMoniker.ComposeWith is not implemented.
            </summary>
            <param name="pmkRight"></param>
            <param name="fOnlyIfNotGeneric"></param>
            <param name="ppmkComposite"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
            <summary>
            IMoniker.Enum is not implemented.
            </summary>
            <param name="fForward"></param>
            <param name="ppenumMoniker"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>
            IMoniker.IsEqual is not implemented.
            </summary>
            <param name="pmkOtherMoniker"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.Hash(System.Int32@)">
            <summary>
            IMoniker.Hash is not implemented.
            </summary>
            <param name="pdwHash"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>
            IMoniker.IsRunning is not implemented.
            </summary>
            <param name="pbc"></param>
            <param name="pmkToLeft"></param>
            <param name="pmkNewlyRunning"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
            <summary>
            IMoniker.GetTimeOfLastChange is not implemented.
            </summary>
            <param name="pbc"></param>
            <param name="pmkToLeft"></param>
            <param name="pFileTime"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>
            IMoniker.Inverse is not implemented.
            </summary>
            <param name="ppmk"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>
            IMoniker.CommonPrefixWith is not implemented.
            </summary>
            <param name="pmkOther"></param>
            <param name="ppmkPrefix"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>
            IMoniker.RelativePathTo is not implemented.
            </summary>
            <param name="pmkOther"></param>
            <param name="ppmkRelPath"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)">
            <summary>
            Implements IMoniker.GetDisplayName to return the base url.
            </summary>
            <param name="pbc"></param>
            <param name="pmkToLeft"></param>
            <param name="ppszDisplayName"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>
            IMoniker.ParseDisplayName is not implemented.
            </summary>
            <param name="pbc"></param>
            <param name="pmkToLeft"></param>
            <param name="pszDisplayName"></param>
            <param name="pchEaten"></param>
            <param name="ppmkOut"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.LoadHtmlMoniker.IsSystemMoniker(System.Int32@)">
            <summary>
            IMoniker.IsSystemMoniker is not implemented.
            </summary>
            <param name="pdwMksys"></param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.IActiveScript">
            <summary>
            Interface IActiveScript.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/d8acee11-7f0d-4999-b97a-66774af16f71.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.SetScriptSite(GuruComponents.Netrix.ComInterop.IActiveScriptSite)">
            <summary>
            Sets the script site.
            </summary>
            <param name="site">The site.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/47d94c32-09f8-4539-ac56-0236026f627b.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.GetScriptSite(System.Guid@,System.IntPtr@)">
            <summary>
            Gets the script site.
            </summary>
            <param name="riid">The riid.</param>
            <param name="ppvObject">The PPV object.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/83a2a89d-93d0-4cbd-9244-91a730cb406b.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.SetScriptState(GuruComponents.Netrix.ComInterop.SCRIPTSTATE)">
            <summary>
            Sets the state of the script.
            </summary>
            <param name="ss">The ss.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/f2b2700c-0c8d-40db-ad84-dc751c5d9bc2.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.GetScriptState(GuruComponents.Netrix.ComInterop.SCRIPTSTATE@)">
            <summary>
            Gets the state of the script.
            </summary>
            <param name="ss">The ss.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/59837f7c-755d-45c4-8194-bd57638fe2e1.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.Close">
            <summary>
            Closes this instance.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/cc7dd63b-1d7e-410a-857b-09ea3aade275.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.AddNamedItem(System.String,System.UInt32)">
            <summary>
            Adds the named item.
            </summary>
            <param name="name">The name.</param>
            <param name="flags">The flags.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/a7c6317d-948f-4bb3-b169-1bbe5b7c7cc5.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.AddTypeLib(System.Guid@,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Adds the type lib.
            </summary>
            <param name="rguidTypeLib">The rguid type lib.</param>
            <param name="major">The major.</param>
            <param name="minor">The minor.</param>
            <param name="flags">The flags.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/8e507ea8-c80a-471c-b482-ae753c6e8595.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.GetScriptDispatch(System.String,System.Object@)">
            <summary>
            Gets the script dispatch.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="ppdisp">The ppdisp.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/2092ccd4-1f4c-493a-b5b7-077a70ce95ca.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.GetCurrentScriptThreadiD(System.UInt32@)">
            <summary>
            Gets the current script threadi D.
            </summary>
            <param name="id">The ID.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/b09e8b48-4209-480e-8b71-e99ee9ae2e17.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.GetScriptThreadID(System.UInt32,System.UInt32@)">
            <summary>
            Gets the script thread ID.
            </summary>
            <param name="threadID">The thread ID.</param>
            <param name="id">The ID.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/2595d76e-30b5-429f-88b4-1d026645dd9b.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.GetScriptThreadState(System.UInt32,GuruComponents.Netrix.ComInterop.SCRIPTTHREADSTATE@)">
            <summary>
            Gets the state of the script thread.
            </summary>
            <param name="id">The ID.</param>
            <param name="state">The state.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/7cac94d0-436e-4c29-895b-0c4afa0b3ccc.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.InterruptScriptThread(System.UInt32,System.Runtime.InteropServices.ComTypes.EXCEPINFO@,System.UInt32)">
            <summary>
            Interrupts the script thread.
            </summary>
            <param name="id">The ID.</param>
            <param name="info">The info.</param>
            <param name="flags">The flags.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/2304d035-6d39-4811-acd3-8a9640fdbef6.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScript.Clone(GuruComponents.Netrix.ComInterop.IActiveScript@)">
            <summary>
            Clones the specified item.
            </summary>
            <param name="item">The item.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/aa000b2a-7085-448d-a422-f7adac7851cb.asp"/>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.IActiveScriptParse">
            <summary>
            Interface IActiveScriptParse.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/8c967d70-f582-4f64-9e79-49f40c4dcb7c.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptParse.InitNew">
            <summary>
            Inits the new.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/3a582bd6-fc0d-43a5-812f-5ea55a8517a1.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptParse.AddScriptlet(System.String,System.String,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.String@,System.Runtime.InteropServices.ComTypes.EXCEPINFO@)">
            <summary>
            Adds the scriptlet.
            </summary>
            <param name="defaultName">Name of the default.</param>
            <param name="code">The code.</param>
            <param name="itemName">Name of the item.</param>
            <param name="subItemName">Name of the sub item.</param>
            <param name="eventName">Name of the event.</param>
            <param name="delimiter">The delimiter.</param>
            <param name="sourceContextCookie">The source context cookie.</param>
            <param name="startingLineNumber">The starting line number.</param>
            <param name="flags">The flags.</param>
            <param name="name">The name.</param>
            <param name="info">The info.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/824929f4-4dd3-473a-92d9-0b96acea2f14.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptParse.ParseScriptText(System.String,System.String,System.IntPtr,System.String,System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.Runtime.InteropServices.ComTypes.EXCEPINFO@)">
            <summary>
            Parses the script text.
            </summary>
            <param name="code">LPCOLESTR pstrCode, address of scriptlet text.</param>
            <param name="itemName">LPCOLESTR pstrItemName, address of item name.</param>
            <param name="context">IUnknown *punkContext, address of debugging context.</param>
            <param name="delimiter">LPCOLESTR pstrDelimiter, address of end-of-scriptlet delimiter.</param>
            <param name="sourceContextCookie">DWORD_PTR dwSourceContextCookie, application-defined value for debugging.</param>
            <param name="startingLineNumber">ULONG ulStartingLineNumber, starting line number of the script.</param>
            <param name="flags">int dwFlags, scriptlet flags.</param>
            <param name="result">VARIANT *pvarResult, address of buffer for results.</param>
            <param name="info">EXCEPINFO *pexcepinfo, address of buffer for error data.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/2d237d6c-cc65-415b-8808-72791304a136.asp"/>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.IActiveScriptSite">
            <summary>
            Interface IActiveScriptSite.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/4d604a11-5365-46cf-ab71-39b3dbbe9f22.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptSite.GetLCID(System.UInt32@)">
            <summary>
            Gets the LCID.
            </summary>
            <param name="id">The ID.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/7b4a2dc1-bcf6-4bbf-884e-97b305a28eb7.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptSite.GetItemInfo(System.String,System.UInt32,System.Object@,System.IntPtr)">
            <summary>
            Gets the item info.
            </summary>
            <param name="name">The name.</param>
            <param name="returnMask">The return mask.</param>
            <param name="item">The item.</param>
            <param name="ppti">The ppti.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/f859ed3b-02c1-4924-99f8-5f5bf1bf8405.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptSite.GetDocVersionString(System.String@)">
            <summary>
            Gets the doc version string.
            </summary>
            <param name="v">The v.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/ab3f892d-06d3-4cb5-9ea5-20c4a1e518cd.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptSite.OnScriptTerminate(System.Object@,System.Runtime.InteropServices.ComTypes.EXCEPINFO@)">
            <summary>
            Called when [script terminate].
            </summary>
            <param name="result">The result.</param>
            <param name="info">The info.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/3301ddf4-5929-404c-81d3-1a720e589008.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptSite.OnStateChange(GuruComponents.Netrix.ComInterop.SCRIPTSTATE)">
            <summary>
            Called when [state change].
            </summary>
            <param name="state">The state.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/3e9c5cbe-ca8e-426a-84fd-04e9c2daac7e.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptSite.OnScriptError(System.Object)">
            <summary>
            Called when [script error].
            </summary>
            <param name="err">This should be casted to IActiveScriptError in the implementation
            of this interface. I had errors when changing the parameter here to the
            IActiveScriptError type.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/5c9c85cc-21ad-4232-be83-a24cc7570108.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptSite.OnEnterScript">
            <summary>
            Called when [enter script].
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/1ed9178c-fe80-41c4-b74d-23b85f9cddbf.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptSite.OnLeaveScript">
            <summary>
            Called when [leave script].
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/79af0e22-fbe3-4fae-8a5f-7af8b857678d.asp"/>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.IActiveScriptError">
            <summary>
            Interface IActiveScriptError.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/4d604a11-5365-46cf-ab71-39b3dbbe9f22.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptError.GetExceptionInfo(System.Runtime.InteropServices.ComTypes.EXCEPINFO@)">
            <summary>
            Gets the exception info.
            </summary>
            <param name="info">The info.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/528416cc-8468-4ad7-a6c2-fa1daf6ecf33.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptError.GetSourcePosition(System.UInt32@,System.UInt32@,System.Int32@)">
            <summary>
            Gets the source position.
            </summary>
            <param name="sourceContext">The source context.</param>
            <param name="lineNumber">The line number.</param>
            <param name="characterPosition">"-1" for unknown.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/64f7f37f-7288-4dbe-b626-a35d90897f36.asp"/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.IActiveScriptError.GetSourceLineText(System.String@)">
            <summary>
            Gets the source line text.
            </summary>
            <param name="sourceLine">The source line.</param>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/ae9b26b1-82a7-4645-9686-3261d8248664.asp"/>
            <remarks>Throws E_FAIL if the line in the source file was not retrieved.</remarks>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.SCRIPTSTATE">
            <summary>
            The script state.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/5f5deb05-c4bb-4964-8077-e624c6b2a14e.asp"/>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTSTATE.SCRIPTSTATE_UNINITIALIZED">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTSTATE.SCRIPTSTATE_INITIALIZED">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTSTATE.SCRIPTSTATE_STARTED">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTSTATE.SCRIPTSTATE_CONNECTED">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTSTATE.SCRIPTSTATE_DISCONNECTED">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTSTATE.SCRIPTSTATE_CLOSED">
            <summary>
            
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.SCRIPTTHREADSTATE">
            <summary>
            The script thread state.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/975ec66b-c095-40ac-8ba9-631adb97b589.asp"/>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTTHREADSTATE.SCRIPTTHREADSTATE_NOTINSCRIPT">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTTHREADSTATE.SCRIPTTHREADSTATE_RUNNING">
            <summary>
            
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.SCRIPTITEMFLAGS">
            <summary>
            The script item flags when adding.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/a7c6317d-948f-4bb3-b169-1bbe5b7c7cc5.asp"/>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTITEMFLAGS.SCRIPTITEM_ISVISIBLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTITEMFLAGS.SCRIPTITEM_ISSOURCE">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTITEMFLAGS.SCRIPTITEM_GLOBALMEMBERS">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTITEMFLAGS.SCRIPTITEM_ISPERSISTENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTITEMFLAGS.SCRIPTITEM_CODEONLY">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTITEMFLAGS.SCRIPTITEM_NOCODE">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTITEMFLAGS.SCRIPTITEM_ALL_FLAGS">
            <summary>
            
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.SCRIPTINFOFLAGS">
            <summary>
            The IActiveScriptSite.GetItemInfo() input flags.
            </summary>
            <see cref="!:http://msdn.microsoft.com/library/en-us/script56/html/f859ed3b-02c1-4924-99f8-5f5bf1bf8405.asp"/>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTINFOFLAGS.SCRIPTINFO_IUNKNOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTINFOFLAGS.SCRIPTINFO_ITYPEINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.ComInterop.SCRIPTINFOFLAGS.SCRIPTINFO_ALL_FLAGS">
            <summary>
            
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Win32">
            <summary>
            This class provides support for Win32 APIs.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.OleDraw(System.Object,System.Int32,System.IntPtr,System.Drawing.Rectangle@)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.CreateStreamOnHGlobal(System.IntPtr,System.Boolean,System.Runtime.InteropServices.ComTypes.IStream@)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetHGlobalFromStream(System.Runtime.InteropServices.ComTypes.IStream,System.IntPtr@)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.CreateBindCtx(System.Int32,GuruComponents.Netrix.ComInterop.Interop.IBindCtx@)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.OleRun(System.Object)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.OleLockRunning(System.Object,System.Boolean,System.Boolean)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.MkParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.String,System.UInt32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.VariantClear(System.Runtime.InteropServices.HandleRef)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.URLDownloadToFileA(GuruComponents.Netrix.ComInterop.Interop.IUnknown,System.String,System.String,System.Int32,GuruComponents.Netrix.ComInterop.Interop.IBindStatusCallback)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.URLDownloadToCacheFile(GuruComponents.Netrix.ComInterop.Interop.IUnknown,System.String,System.String,System.Int32,System.Int32,GuruComponents.Netrix.ComInterop.Interop.IBindStatusCallback)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.CreateURLMoniker(System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.RegisterBindStatusCallback(System.Runtime.InteropServices.ComTypes.IBindCtx,GuruComponents.Netrix.ComInterop.Interop.IBindStatusCallback,GuruComponents.Netrix.ComInterop.Interop.IBindStatusCallback@,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.CoInternetCombineUrl(System.String,System.String,System.Int32,System.IntPtr,System.Int32,System.Int32@,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.CoInternetGetSession(System.Int32,GuruComponents.Netrix.ComInterop.Interop.IInternetSession@,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.FindMimeFromData(System.IntPtr,System.String,System.Byte[],System.Int32,System.String,System.Int32,System.String@,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.SetPixel(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.LineTo(System.IntPtr,System.Int32,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.MoveToEx(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.CreateSolidBrush(System.UInt64)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.CreatePen(System.Int32,System.Int32,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.SelectObject(System.IntPtr,System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.DeleteObject(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.DeleteDC(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.DestroyCursor(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.HideCaret(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.ShowCaret(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.LoadStringA(System.IntPtr,System.Int32,System.Text.StringBuilder,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetClientRect(System.IntPtr,GuruComponents.Netrix.ComInterop.Interop.RECT)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.SetFocus(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetCaretPos(GuruComponents.Netrix.ComInterop.Interop.POINT@)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.SetCaretPos(System.Int32,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetFocus">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetKeyState(System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.MapVirtualKeyEx(System.Int32,System.Int32,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.ToAsciiEx(System.Int32,System.Int32,System.Byte[],System.Int32@,System.Int32,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.VkKeyScanEx(System.Byte,System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetKeyboardState(System.Byte[])">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetKeyboardLayout(System.Int32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetAsciiCharacter(System.Int32)">
            <exclude />
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GlobalLock(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GlobalUnlock(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.LoadLibraryEx(System.String,System.IntPtr,System.UInt32)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.FreeLibrary(System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.EnumResourceNamesWithName(System.IntPtr,System.String,GuruComponents.Netrix.ComInterop.Win32.EnumResNameDelegate,System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.EnumResourceNamesWithID(System.IntPtr,System.UInt32,GuruComponents.Netrix.ComInterop.Win32.EnumResNameDelegate,System.IntPtr)">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.GetThreadLCID">
            <exclude/>
        </member>
        <member name="T:GuruComponents.Netrix.ComInterop.Win32.EnumResNameDelegate">
            <exclude/>
        </member>
        <member name="M:GuruComponents.Netrix.ComInterop.Win32.InternetGetConnectedState(System.Int32@,System.Int32)">
            <exclude/>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.CommandWrapper">
            <summary>
            Zusammenfassung für CommandWrapper.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.CommandWrapper.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
            <summary>
            Ctor
            </summary>
            <param name="handler"></param>
            <param name="id"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.CommandWrapper.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID,System.Boolean,System.Boolean)">
            <summary>
            Ctor
            </summary>
            <param name="handler"></param>
            <param name="id"></param>
            <param name="restoreSelection"></param>
            <param name="needMultiSelection"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.CommandWrapper.TargetEditor">
            <summary>
            Editor reference
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.CommandWrapper.Guid">
            <summary>
            Groups Guid.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.CommandWrapper.ID">
            <summary>
            Comamnd ID
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.CommandWrapper.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.CommandWrapper.RestoreSelection">
            <summary>
            Whether Should keep seletion.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.CommandWrapper.NeedMultiSelection">
            <summary>
            Need multiple selections
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.DirectiveEventArgs">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.DirectiveEventArgs.Directive">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.DirectiveEventArgs.#ctor(GuruComponents.Netrix.Designer.IDirective)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.DirectiveEventHandler">
            <summary>
            TODO: Add Comments.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.EventDisplay">
            <summary>
            Controls the behavior of event tab in PropertyGrid.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Designer.EventDisplay.EventVisible">
            <summary>
            Show only events marked with EventVisible attribute.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Designer.EventDisplay.Scripting">
            <summary>
            Show only Scripting events
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Designer.EventDisplay.Both">
            <summary>
            Show both, using different categories.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Designer.EventDisplay.All">
            <summary>
            Show all, wether or not they have an attribute. This includes <see cref="T:System.Web.UI.Control"/> events, too.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.IDesignSite">
            <summary>
            Basic interface for sited components.
            </summary>
            <remarks>Used to site native element objects to support the designer environment.</remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IDesignSite.SetComponent(System.ComponentModel.IComponent)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IDesignSite.SetElement(System.Web.UI.Control)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IDesignSite.SetName(System.String)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.IDesignTimeBehavior">
            <summary>
            Base interface for externally added design time enhancement modules.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.IDirective">
            <summary>
            Stores information about one page directive.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IDirective.AddAttribute(System.String,System.String)">
            <summary>
            Add an attribute
            </summary>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IDirective.DirectiveName">
            <summary>
            Get the directive name.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IDirective.ToString">
            <summary>
            Design time support
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.INamespaceManager">
            <summary>
            Handle namespaces to allow rendering of XML elements.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.INamespaceManager.Clear">
            <summary>
            Remove registered namespaces.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.INamespaceManager.GetBehaviorOfElement(GuruComponents.Netrix.ComInterop.Interop.IHTMLElement)">
            <summary>
            Return registered behavior.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.INamespaceManager.RegisterNamespace(System.String,System.String,System.Type)">
            <summary>
            Register a namespace.
            </summary>
            <param name="alias"></param>
            <param name="namespaceName"></param>
            <param name="behavior"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.INamespaceManager.RegisterNamespace(System.String,System.String)">
            <summary>
            Register a namespace.
            </summary>
            <param name="alias"></param>
            <param name="namespaceName"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.IReferenceManager">
            <summary>
            Build base interface for reference management.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.IRegisterDirective">
            <summary>
            Stores information about one specific register directive.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirective.AssemblyName">
            <summary>
            TODO: Add comment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirective.DirectiveName">
            <summary>
            TODO: Add comment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirective.IsUserControl">
            <summary>
            TODO: Add comment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirective.NamespaceName">
            <summary>
            TODO: Add comment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirective.SourceFile">
            <summary>
            TODO: Add comment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirective.TagName">
            <summary>
            TODO: Add comment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirective.TagPrefix">
            <summary>
            TODO: Add comment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirective.ObjectType">
            <summary>
            TODO: Add comment
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection">
            <summary>
            Supports the Register directives of ASP.NET pages. Used by AspDotNetDesigner and similar plug-ins.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection.AddRegisterDirective(GuruComponents.Netrix.Designer.IRegisterDirective,System.Boolean)">
            <summary>
            Add a directive
            </summary>
            <param name="directive"></param>
            <param name="raiseEvent"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection.AddRegisterDirective(GuruComponents.Netrix.Designer.IRegisterDirective)">
            <summary>
            Add a directive
            </summary>
            <param name="directive"></param>
        </member>
        <member name="E:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection.DirectiveAdded">
            <summary>
            Fired if a directive is being added.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection.GetObjectType(System.IServiceProvider,System.String,System.String)">
            <summary>
            Get a type from registered tag information.
            </summary>
            <param name="serviceProvider"></param>
            <param name="tagPrefix"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection.GetRegisterDirective(System.String,System.String)">
            <summary>
            Return the original directive.
            </summary>
            <param name="tagPrefix"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection.GetTagName(System.Type)">
            <summary>
            Get the tag name from type.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection.Item(System.String)">
            <summary>
            Get directive from prefix
            </summary>
            <param name="tagPrefix"></param>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IRegisterDirectiveCollection.Item(System.String,System.String)">
            <summary>
            Get directive from prefix and name.
            </summary>
            <param name="tagPrefix"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.ShowErrorDelegate">
            <summary>
            Allows to attach an delegate which is being called when the PropertyGrid is about to show an error message.
            </summary>
            <param name="ex">The exception that causes the error.</param>
            <param name="message">The message (optional).</param>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.ShowMessageDelegate">
            <summary>
            Allows to attach an delegate which is being called when the PropertyGrid is about to show a message.
            </summary>
            <param name="message"></param>
            <param name="caption"></param>
            <param name="buttons"></param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.ShowDialogDelegate">
            <summary>
            Allows to attach an delegate which is being called when the PropertyGrid is about to open an dialog, such as a collection editor.
            </summary>
            <param name="form">The form which the control whishes to open. Could be replaced by another one.</param>
            <returns>The dialog result after calling ShowDialog.</returns>
        </member>
        <member name="T:GuruComponents.Netrix.Designer.IUIService">
            <summary>
            An public access to the common IUIService which provides more control over the PropertyGrid and other
            design time environments.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IUIService.CanShowComponentEditor">
            <summary>
            Whether or not the component editor icon is shown in the PropertyGrid.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Designer.IUIService.GetDialogOwner">
            <summary>
            Request the owner window handle. Not yet supported.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Designer.IUIService.ShowComponentEditor">
            <summary>
            Called when the user clicks the Component Editor icon of the PropertyGrid.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IUIService.ShowDialogDialog">
            <summary>
            Gets or sets the callback delegate for common dialogs.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IUIService.ShowErrorDialog">
            <summary>
            Gets or sets the callback delegate for error messages.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Designer.IUIService.ShowMessageDialog">
            <summary>
            Gets or sets the callback delegate for common messages.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Designer.IUIService.ShowToolWindow">
            <summary>
            Shows tool window. Not yet implemented.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Designer.IUIService.UIDirty">
            <summary>
            Called when the component requests to refresh the UI.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.AfterSnapRectEventArgs">
            <summary>
            Event arguments for event AfterSnapRectEvent.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.AfterSnapRectEventArgs.#ctor(GuruComponents.Netrix.IHtmlEditor,GuruComponents.Netrix.ComInterop.Interop.IHTMLElement,GuruComponents.Netrix.ComInterop.Interop.RECT,GuruComponents.Netrix.ComInterop.Interop.ELEMENT_CORNER)">
            <summary>
            Constructor for event arguments.
            </summary>
            <remarks>
            Used internally to support NetRix infrastructure. There is no need to call this constructor directly.
            </remarks>
            <param name="editor"></param>
            <param name="el"></param>
            <param name="pVar"></param>
            <param name="rect"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.AfterSnapRectEventArgs.Element">
            <summary>
            The element which the event belongs to.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.AfterSnapRectEventArgs.Rectangle">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.AfterSnapRectEventArgs.SnapZone">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.AfterSnapRectEventHandler">
            <summary>
            AfterSnapRectEventHandler delegate.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.BeforeShortcutEventArgs">
            <summary>
            This class defines data for the <see cref="E:GuruComponents.Netrix.IHtmlEditor.BeforeShortcut">BeforeShortcut</see>.
            </summary>
            <remarks>
            This class can be used to catch and cancel a shortcut. A shortcut is in NetRix any key pressed in 
            design or browse mode together with the control (Ctrl) key.
            <para>
            NetRix provides a few hardwired shortcuts. If you don't wish the internal processing you can disable the
            hardwired keys globally by using the <see cref="P:GuruComponents.Netrix.IHtmlEditor.InternalShortcutKeys">InternalShortcutKeys</see> property.
            To cancel onyl specific shortcut keys add a handler for the 
            <see cref="E:GuruComponents.Netrix.IHtmlEditor.BeforeShortcut">BeforeShortcut</see> event and set
            the property <see cref="P:GuruComponents.Netrix.Events.BeforeShortcutEventArgs.Cancel">Cancel</see> property to <c>true</c>.
            Remember, that the handler is called for any control-key combination, even if they has no hardwired function assigned.
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.BeforeShortcutEventArgs.#ctor(System.Windows.Forms.Keys)">
            <summary>
            Constructor for event arguments.
            </summary>
            <remarks>
            Used internally to support NetRix infrastructure. There is no need to call this constructor directly.
            </remarks>
            <param name="key"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.BeforeShortcutEventArgs.Key">
            <summary>
            The key pressed as a shortcut key.
            </summary>
            <remarks>
            This is the base key, which the user has pressed together with the control key. Readonly.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.BeforeShortcutEventArgs.Cancel">
            <summary>
            Gets or sets the current cancel state.
            </summary>
            <remarks>
            To cancel the internal processing of the currently pressed key just set the value to <c>true</c> in the
            event handler.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.BeforeShortcutEventHandler">
            <summary>
            Assigns the handler for the BeforeShortcut event.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.BeforeSnapRectEventArgs">
            <summary>
            Event arguments for event BeforeSnapRectEvent.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.BeforeSnapRectEventArgs.#ctor(GuruComponents.Netrix.IHtmlEditor,GuruComponents.Netrix.ComInterop.Interop.IHTMLElement,GuruComponents.Netrix.ComInterop.Interop.RECT,GuruComponents.Netrix.ComInterop.Interop.ELEMENT_CORNER)">
            <summary>
            Constructor for event arguments.
            </summary>
            <remarks>
            Used internally to support NetRix infrastructure. There is no need to call this constructor directly.
            </remarks>
            <param name="editor"></param>
            <param name="el"></param>
            <param name="pVar"></param>
            <param name="rect"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.BeforeSnapRectEventArgs.Element">
            <summary>
            The element which the event belongs to.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.BeforeSnapRectEventArgs.ScrollPos">
            <summary>
            Returns the current scroll position.
            </summary>
            <remarks>
            You can use this value to determine the position of the element against other absolute positioned objects, that might
            not handle the scroll position on its own.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.BeforeSnapRectEventArgs.Rectangle">
            <summary>
            Area of snaping element.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.BeforeSnapRectEventArgs.SnapZone">
            <summary>
            Zone which has to snap.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.BeforeSnapRectEventHandler">
            <summary>
            Assigns the handler for the BeforeSnap event.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ContentModifiedEventArgs">
            <summary>
            This class is used to set the event arguments for the <see cref="T:GuruComponents.Netrix.Events.ContentModifiedHandler"/>
            event.
            </summary>
            <remarks>
            It returns the element that was modified last.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ContentModifiedEventArgs.lastModifiedElement">
            <summary>
            Stores the last modified element internally.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.ContentModifiedEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            The constructor used to build the event argument internally. This constructor supports
            the NetRix component architecture internally is not intendet to beeing called from 
            host applications.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ContentModifiedEventArgs.LastModifiedElement">
            <summary>
            Gets the element that was last modified. May be null if the element was not recognized.
            It is recommended to check for null to avoid a NullReferenceExpection. This property is
            readonly.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ContentModifiedHandler">
            <summary>
            Fired if the control becomes Dirty the first time.
            </summary>
            <remarks>
            The event is fired if the Dirty flag changes from "not dirty" to "dirty". If the
            dirty flag is reset after this and becomes dirty later the event is fired again.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ScriptExternalEventArgs">
            <summary>
            This class defines data for the ShowError event in HtmlWindow class.
            </summary>
            <remarks>
            This class allows to cancel the navigation by setting the cancel property to <c>true</c>.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode">
            <summary>
            Return codes for external Script method call.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_ABORT">
            <summary>
            Show Abort error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_ACCESSDENIED">
            <summary>
            Show Security error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_FAIL">
            <summary>
            Show Failure error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_HANDLE">
            <summary>
            Show Handle not found error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_INVALIDARG">
            <summary>
            Show Argument error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_POINTER">
            <summary>
            Show Pointer error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_NOTIMPL">
            <summary>
            Show error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_NOINTERFACE">
            <summary>
            Show error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_OUTOFMEMORY">
            <summary>
            Show error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_UNEXPECTED">
            <summary>
            Show error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_PENDING">
            <summary>
            Show error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.E_DEFAULTACTION">
            <summary>
            Show no error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.S_FALSE">
            <summary>
            Show generic error message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalErrorCode.S_OK">
            <summary>
            Show no message at all.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.ScriptExternalEventArgs.#ctor">
            <summary>
            Ctor for event arguments.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ScriptExternalEventArgs.ExternalError">
            <summary>
            Controls how the script engine is handling the call to an external method. This might force an Script error.
            </summary>
            <remarks>
            E_NOTIMPL = fires native error window
            E_DEFAULTACTION = security exception
            E_FAIL = unspecified error
            E_ABORT = suppress an native window
            E_HANDLE = provide valid handle to invoke code
            E_UNEXPECTED = unexpected error
            E_POINTER = pointer expected
            E_NOINTERFACE = null or not object
            E_ACCESSDENIED = security error
            E_OUTOFMEMORY = out of mem error
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ScriptExternalHandler">
            <summary>
            Delegate for the show error event. Fired if running script invokes an error.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventDisplayEventArgs">
            <summary>
            This class defines event arguments.
            </summary>
            <remarks>
            This class allows to cancel the navigation by setting the cancel property to <c>true</c>.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventDisplayEventArgs.ResetEventFilterList">
            <summary>
            If set to true the EventFilterList will refresh on next request.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventDisplayEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Elements.IElement,System.ComponentModel.EventDescriptorCollection)">
            <summary>
            Internally used constructor for event arguments.
            </summary>
            <remarks>
            This constructor supports the NetRix infrastructure it has not being called from user code.
            </remarks>
            <param name="element">The element that delivers the properties.</param>
            <param name="pdc">Property descriptor collection.</param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventDisplayEventArgs.Element">
            <summary>
            Returns the element the PropertyGrid currently shows.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventDisplayEventArgs.DescriptorCollection">
            <summary>
            Gets or sets he current value.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventDisplayHandler">
            <summary>
            Event used to handle the displaying of event information within the PropertyGrid or similar environments.
            </summary>
            <seealso cref="T:GuruComponents.Netrix.Events.PropertyDisplayEventArgs"/>
            <param name="sender">Snder of data, ususally an element object, derived from <see cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement"/>.</param>
            <param name="e">Display event arguments object.</param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventFilterEventArgs">
            <summary>
            This class handles event arguments for PropertyFilter event.
            </summary>
            <remarks>
            This class allows to cancel the properties shown in the PropertyGrid.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventFilterEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Elements.IElement,System.ComponentModel.EventDescriptor)">
            <summary>
            Internally used constructor for event arguments.
            </summary>
            <remarks>
            This constructor supports the NetRix infrastructure it has not being called from user code.
            </remarks>
            <param name="element"></param>
            <param name="pd"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventFilterEventArgs.Element">
            <summary>
            Returns the element the PropertyGrid currently shows.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventFilterEventArgs.Event">
            <summary>
            Gets or sets the Descriptor of the property.
            </summary>
            <remarks>
            The host application can create its own PropertyDescriptor to change the behavior
            of the property in PropertyGrid.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventFilterEventArgs.PropertyName">
            <summary>
            Gets the Name of Event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventFilterEventArgs.Category">
            <summary>
            Gets the Category the property appears in.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventFilterEventArgs.DisplayName">
            <summary>
            Gets the Localized (full) name.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventFilterEventArgs.Description">
            <summary>
            Gets the Description that appears in lower help section of propertygrid.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventFilterHandler">
            <summary>
            Used for event which is called to filter the event list.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.DocumentEventType">
            <summary>
            DHTML events fired by document in design mode. This list applies on document level, however, events might fire on element level and appear on document level if not handled elsewhere.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.LoseCapture">
            <summary>
            The element lost the capture (focus) after beeing selected.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.Click">
            <summary>
            A single mouse click.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.DblClick">
            <summary>
            A double mouse click.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.DragStart">
            <summary>
            The element beguns to start dragging.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.KeyDown">
            <summary>
            A key was pressed. This happens before the key handler has processed the key.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.KeyPress">
            <summary>
            The key was pressed and the key handler has processed the message.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.KeyUp">
            <summary>
            The key was pressed and released.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MouseDown">
            <summary>
            The mouse key comes down and has not yet been released.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.ResizeStart">
            <summary>
            The element starts resizing. This happens if the user move the handles around the
            elements rectangle area with the mouse.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.ResizeEnd">
            <summary>
            The element was resized. This happens if the user stops resizing by releasing the mouse
            button.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MouseEnter">
            <summary>
            The mouse enters the elements boundaries during a mouse move operation.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MouseLeave">
            <summary>
            The mouse leaves the elements boundaries during a mouse move operation.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MouseMove">
            <summary>
            The mosue moves over that element. This is fired multiple times and the handler
            should be aware about performance reducing operations. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MouseOut">
            <summary>
            The mouse has left the elements boundaries during a mouse move operation.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MouseOver">
            <summary>
            The mouse has entered the elements boundaries during a mouse move operation.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MouseUp">
            <summary>
            The mouse button has been released
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.SelectStart">
            <summary>
            The element was selected either by mouse or key operation. This normally follows
            a click operation on a selectable element (image, link, ...).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.Scroll">
            <summary>
            A scroll event occured, either user has pulled scrollbar or element scrolled by program action.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.Move">
            <summary>
            Any other operation currently not recognized from within the NetRix environment.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MoveStart">
            <summary>
            Start moving...
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.MoveEnd">
            <summary>
            End moving...
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.Resize">
            <summary>
            Resize
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.ControlSelect">
            <summary>
            Control being selected...
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.Drop">
            <summary>
            Drop
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.SelectionChange">
            <summary>
            Fired if the selection of a text portion changes.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.DocumentEventType.Unknown">
            <summary>
            Any other
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.DocumentEventHandler">
            <summary>
            Used to attach DHTML events to external event handlers.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.DocumentEventArgs">
            <summary>
            This class provides event arguments for DHTML events.
            </summary>
            <remarks>
            These events are fired when an .NET event handler is attached to a DHTML event during design time.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.DocumentEventArgs.#ctor(GuruComponents.Netrix.ComInterop.Interop.IHTMLEventObj,GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Internally used ctor.
            </summary>
            <param name="e"></param>
            <param name="sourceElement"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Events.DocumentEventArgs.SetCancelBubble(System.Boolean)">
            <summary>
            Set the event bubble chain cancel.
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Events.DocumentEventArgs.SetReturnValue(System.Boolean)">
            <summary>
            Set or overwrite the return value.
            </summary>
            <param name="val"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.PropertyName">
            <summary>
            The property which was changed.
            </summary>
            <remarks>
            This property applies only when OnPropertyChange event has been fired.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.Cancel">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.MouseButton">
            <summary>
            Mousebutton was clicked during event. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.SrcElement">
            <summary>
            The element causes the event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.ClientXY">
            <summary>
            The position of mouse pointer in client area.
            </summary>
            <remarks>
            Retrieves the coordinates of the mouse pointer's position relative to the client area of the window, excluding window decorations and scroll bars.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.ScreenXY">
            <summary>
            The position of mouse pointer in screen coordinates.
            </summary>
            <remarks>
            Retrieves the coordinates of the mouse pointer's position relative to the user's screen.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.ShiftKey">
            <summary>
            The state of the shift key during mouse events.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.AltKey">
            <summary>
            The state of the alt key during mouse events.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.LeftAltKey">
            <summary>
            Retrieves a value that indicates the state of the left ALT key.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.LeftShftKey">
            <summary>
            Retrieves a value that indicates the state of the left SHIFT key.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.WheelButton">
            <summary>
            Retrieves the distance and direction the wheel button has rolled.
            </summary>
            <remarks>
            This property indicates the distance that the wheel has rotated, expressed in multiples of 120. A positive value indicates 
            that the wheel has rotated away from the user. A negative value indicates that the wheel has rotated toward the user.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.ControlKey">
            <summary>
            The state of the control key during mouse events.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.LeftCtrlKey">
            <summary>
            The state of the left CTRL key.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.KeyCode">
            <summary>
            The keycode if a key causes the event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.EventType">
            <summary>
            The event type fired the event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.ClipboardData">
            <summary>
            Retrieves a data object that contains information about dragged or copied data.
            </summary>
            <remarks>
            This data object can be used to change or retrieve the data being involved in the current
            drag or copy operation which causes the event this object is attached to. 
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.DocumentEventArgs.DataTransfer">
            <summary>
            This class provides access to predefined clipboard formats for use in data transfer operations.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.DocumentEventArgs.DataTransfer.setData(System.String,System.Object)">
            <summary>
            Assigns data in a specified format to the dataTransfer or clipboardData object.
            </summary>
            <param name="format"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.Events.DocumentEventArgs.DataTransfer.getData(System.String)">
            <summary>
            Retrieves the data in the specified format from the clipboard through the dataTransfer or clipboardData objects.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.Events.DocumentEventArgs.DataTransfer.clearData(System.String)">
            <summary>
            Removes one or more data formats from the clipboard through dataTransfer or clipboardData object.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.DataTransfer.dropEffect">
            <summary>
            Sets or retrieves the type of drag-and-drop operation and the type of cursor to display.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.DocumentEventArgs.DataTransfer.effectAllowed">
            <summary>
            Sets or retrieves, on the source element, which data transfer operations are allowed for the object.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ShowCodeRequestHandler">
            <summary>
            Used to inform the host that the PropertyGrid wants to show code.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventValueHandler">
            <summary>
            Used to inform that the PropertyGrid is up to set, get or reset an entry.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.CreateUniqueNameRequestHandler">
            <summary>
            Used if the PropertyGrid requests a unique event handler name.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.GetCompatibleMethodsRequestHandler">
            <summary>
            Used if the PropertyGrid shows a dropdown list with all compatible methods.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventBindingEventArgs">
            <summary>
            Contains information about events exposed by several binding methods.
            </summary>
            <remarks>
            Depending on the current event this arguments are used with some or all of the properties may return <c>null</c> (<c>Nothing</c> in 
            Visual Basic).
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventBindingEventArgs.#ctor(System.ComponentModel.EventDescriptor,System.ComponentModel.IComponent)">
            <summary>
            Ctor
            </summary>
            <param name="desc"></param>
            <param name="component"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventBindingEventArgs.Descriptor">
            <summary>
            Descriptor
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventBindingEventArgs.Component">
            <summary>
            Component, usually of type IElement or Control.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.GetCompatibleMethodsRequestEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.GetCompatibleMethodsRequestEventArgs.#ctor(System.ComponentModel.EventDescriptor,System.ComponentModel.IComponent)">
            <summary>
            Ctor
            </summary>
            <param name="desc"></param>
            <param name="component"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.GetCompatibleMethodsRequestEventArgs.CompatibleMethods">
            <summary>
            The host should set an array of string objects to show a list of compatible handler methods.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.CreateUniqueNameRequestEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.CreateUniqueNameRequestEventArgs.#ctor(System.ComponentModel.EventDescriptor,System.ComponentModel.IComponent)">
            <summary>
            Ctor
            </summary>
            <param name="desc"></param>
            <param name="component"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.CreateUniqueNameRequestEventArgs.UniqueName">
            <summary>
            The new unique name the code editor has created as name for the requested event handler.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventManager">
            <summary>
            Enables or disables event on element level types globally.
            </summary>
            <remarks>
            The purpose of this class is the global management of events. Disabling events globally
            in situations where the events are not is use can drastically improve the performance,
            because the internal event processing is being stopped at a very early stage.
            <para>
            By default all events are switched on and available.
            </para>
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventManager.State">
            <summary>
            Particular State of an Event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventManager.State.EventState">
            <summary>
            We pack the state into an object to save our enumerators.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventManager.State.#ctor(System.Boolean)">
            <summary>
            State
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventManager.#ctor">
            <summary>
            private Ctor, set all events active.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventManager.AllEventsEnabled">
            <summary>
            switches the event handling globally on or off.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventManager.SetEnabled(GuruComponents.Netrix.Events.EventType,System.Boolean)">
            <summary>
            Enables or disables the specified event.
            </summary>
            <param name="type">Type of event.</param>
            <param name="enabled">State</param>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventManager.GetEnabled(GuruComponents.Netrix.Events.EventType)">
            <summary>
            Retrieves the state of a specified event.
            </summary>
            <param name="type">Type of event.</param>
            <returns>Current State.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventManager.SetEnabled(GuruComponents.Netrix.Events.EventGroup,System.Boolean)">
            <summary>
            Set element events to specified state.
            </summary>
            <param name="group"></param>
            <param name="enabled"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventGroup">
            <summary>
            Switch events on or off for the specified group.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Control">
            <summary>
            All control event, fired by base control. Not implemented.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Element">
            <summary>
            All element events, fired on element level.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.ControlMouse">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Mouse">
            <summary>
            All mouse events.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.ControlKey">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Key">
            <summary>
            All Key events.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Move">
            <summary>
            Move events, such as Move, MoveStart, MoveEnd.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Drag">
            <summary>
            All drag events, such as DragDrop, DragStart etc.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Select">
            <summary>
            All select events.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Change">
            <summary>
            Events like Change, SelectionChange.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Focus">
            <summary>
            Focus events, such as FocusIn, FocusOut, Blur.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Data">
            <summary>
            Data binding related events, not currently used.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Resize">
            <summary>
            Resize events, such as Resize, ResizeStart, ResizeEnd.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.Edit">
            <summary>
            Edit events, such as Copy, BeforeCopy, Paste, BeforePaste, Cut, BeforeCut.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventGroup.All">
            <summary>
            All events
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventType">
            <summary>
            Available events the event manager can turn on or off.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.None">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Help">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Click">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DblClick">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.KeyPress">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.KeyDown">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.KeyUp">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MouseOut">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MouseOver">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MouseMove">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MouseDown">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MouseUp">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.SelectStart">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.FilterChange">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DragStart">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforeUpdate">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.AfterUpdate">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.ErrorUpdate">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Rowexit">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Rowenter">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DataSetChanged">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DataAvailable">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DatasetComplete">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.LoseCapture">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.PropertyChange">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Scroll">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Focus">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Blur">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Resize">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Drag">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DragEnd">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DragEnter">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DragOver">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.DragLeave">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Drop">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforeCut">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Cut">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforeCopy">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Copy">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforePaste">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Paste">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.ContextMenu">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.RowsDelete">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Rowsinserted">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Cellchange">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.ReadyStateChange">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforeEditFocus">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.LayoutComplete">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Page">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforeDeactivate">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforeActivate">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Move">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.ControlSelect">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MoveStart">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MoveEnd">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.ResizeStart">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.ResizeEnd">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MouseEnter">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MouseLeave">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.MouseWheel">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Activate">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Deactivate">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Focusin">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Focusout">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Load">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Error">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Change">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Abort">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Select">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.SelectionChange">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Stop">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Reset">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.Submit">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforeUnLoad">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforeLoad">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.BeforePrint">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.EventType.AfterPrint">
            <summary>
            Use this to set the event manager to a specific state for this event.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.EventObject">
            <summary>
            This class provides access to the legacy IHTMLEventObj class.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.EventObject.#ctor(GuruComponents.Netrix.ComInterop.Interop.IHTMLEventObj)">
            <summary>
            Internally used public ctor.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventObject.altKey">
            <summary>
            State of ALT key in case of key operations.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventObject.x">
            <summary>
            X position if there is an event that has position information.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventObject.screenY">
            <summary>
            Y position in screen coordinates if there is an event that has position information.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventObject.y">
            <summary>
            Y position if there is an event that has position information.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventObject.shiftKey">
            <summary>
            State of shft key.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventObject.button">
            <summary>
            Mouse button code in case the event was caused by mouse operation.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventObject.keyCode">
            <summary>
            Keycode in case the event is based on key operations.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.EventObject.srcElement">
            <summary>
            Source element which is responsible for the event fired.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.FrameActivatedEventHandler">
            <summary>
            This delegate points to to a handler which is fired when the user clicks on 
            a different frame. 
            </summary>
            <remarks>The currently activated frame will fire the event and inform the 
            handler about frame name and addtional framedata.</remarks>
            <seealso cref="T:GuruComponents.Netrix.Events.FrameEventArgs"/>
        </member>
        <member name="T:GuruComponents.Netrix.Events.FrameEventArgs">
            <summary>
            This class is used to build the event args for the frame activated, frame ready state complete and
            frame context menu event.
            </summary>
            <remarks>
            <para>
            These events
            are fired if the user switches with the mouse from one active (and editable) frame to another.
            The final frame will fire the event and the event args allow access to the frame window object.
            </para>
            <para>
            The object <see cref="T:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow">FrameWindow</see> is a shallow copy clone of the original object. Thus, it can be used to change
            the properties of the underlying frame but delete/dispose operation will not reach the original object.
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.FrameEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Documents.IFrameWindow)">
            <summary>
            The constructor used to build the frame event arguments.
            </summary>
            <param name="fw"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.FrameEventArgs.FrameWindow">
            <summary>
            Gets the frame window from which the event was fired.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow"/> for
            more information about dealing with frames.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.HtmlElementChangedType">
            <summary>
            The type of event which fired the <see cref="T:GuruComponents.Netrix.Events.HtmlElementChangedEventArgs"/>.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.HtmlElementChangedType.Mouse">
            <summary>
            A mouse event has changed the element.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.HtmlElementChangedType.Key">
            <summary>
            A keystroke has changed the element.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.HtmlElementChangedType.Unknown">
            <summary>
            The internal event was not recognized (reserved for future use).
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.HtmlElementChangedEventArgs">
            <summary>
            The EventArgs class which covers the element and event type for the changed element event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlElementChangedEventArgs.CurrentElement">
            <summary>
            Retrieves the element which fired the event.
            </summary>
            <remarks>
            This property returns the element only if inherited from <see cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement"/>.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlElementChangedEventArgs.CurrentControl">
            <summary>
            Retrieves the element which fired the event.
            </summary>
            <remarks>
            This property returns the element only if inherited from <see cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement"/>.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlElementChangedEventArgs.EventType">
            <summary>
            Checks how the event was fired internally, e.g. ether by mouse or by keystroke.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.HtmlElementChangedEventArgs.#ctor(System.ComponentModel.IComponent,GuruComponents.Netrix.Events.HtmlElementChangedType)">
            <summary>
            Internally used ctor.
            </summary>
            <param name="element"></param>
            <param name="type"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.HtmlElementChangedHandler">
            <summary>
            Declare the keypress event handler.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.KeyEventType">
            <summary>
            This enumeration defines some types of key events.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.KeyEventType.Unknown">
            <summary>
            The type was not recognized.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.KeyEventType.KeyPress">
            <summary>
            The key was pressed (a complete phase, key down, processing, key up).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.KeyEventType.KeyUp">
            <summary>
            The key goes up (NOT USED).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.KeyEventType.KeyDown">
            <summary>
            The key goes down.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.HtmlKeyEventArgs">
            <summary>
            This class defines the event arguments used for handling of key events.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlKeyEventArgs.Handled">
            <summary>
            If set to true the caller informs the callee that the keystroke was handled and no further internal 
            processing is required. (Default: false).
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlKeyEventArgs.ElementUnderPointer">
            <summary>
            Retrieves the element which has the current scope.
            </summary>
            <remarks>
            This property may return <c>null</c> (<c>Nothing</c> in Visual.Basic) if the element was not recognized.
            The element may be BODY if the caret cannot be placed inside a container (e.g. IMG cannot contain the
            caret and therefore the caret remains in the parent element, even if the last key stroke has made a 
            valid selection of the IMG element).
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlKeyEventArgs.EventType">
            <summary>
            Get the KeyEventType, which can be "press" (after key up) or "down".
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlKeyEventArgs.Key">
            <summary>
            The key the user has pressed.
            </summary>
            <remarks>
            Correct recognition of keys for extended characters depends on keyboard layout
            and language version. 
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlKeyEventArgs.AsciiCharacter">
            <summary>
            Return the last typed ASCII character.
            </summary>
            <remarks>
            This property wil not recognize special chars, culture dependent chars and 
            ASCII characters beyond 128. It will return a char anyway, but its usable for
            lower standard ASCII only.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.HtmlKeyEventArgs.#ctor(GuruComponents.Netrix.ComInterop.Interop.IHTMLElement,System.Windows.Forms.Keys,GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            Ctor
            </summary>
            <param name="el"></param>
            <param name="keycode"></param>
            <param name="htmlEditor"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Events.HtmlKeyEventArgs.#ctor(GuruComponents.Netrix.ComInterop.Interop.IHTMLEventObj,GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            Ctor
            </summary>
            <param name="eventObject"></param>
            <param name="htmlEditor"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.HtmlKeyEventHandler">
            <summary>
            Declare the keypress event handler.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.MouseEventType">
            <summary>
            This enumeration defined various mouse event types.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MouseEventType.Unknown">
            <summary>
            The type was not recognized.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MouseEventType.MouseMove">
            <summary>
            The mouse was moved.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MouseEventType.MouseUp">
            <summary>
            The mouse button was released.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MouseEventType.MouseDown">
            <summary>
            The mouse button was pressed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.HtmlMouseEventArgs">
            <summary>
            Used to get specific informatin about the mouse event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlMouseEventArgs.ElementUnderPointer">
            <summary>
            Retrieves the element which is currently under the mouse pointer.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlMouseEventArgs.EventType">
            <summary>
            Get the MouseEventType, which can be "move", "up" or "down".
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlMouseEventArgs.X">
            <summary>
            The X coordinate. Can be negative if move operation outside the editor area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlMouseEventArgs.Y">
            <summary>
            The Y coordinate. Can be negative if move operation outside the editor area
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlMouseEventArgs.ContainerX">
            <summary>
            The X coordinate within the container. 
            </summary>
            <remarks>
            Can be negative if move operation outside the editor area.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlMouseEventArgs.ContainerY">
            <summary>
            The Y coordinate within the container.
            </summary>
            <remarks>
            Can be negative if move operation outside the editor area.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlMouseEventArgs.Outside">
            <summary>
            True if the mousepointer is outside the editor area. 
            </summary>
            <remarks>
            This is when ether x or y or both are negative.
            During normal operations the property should always return false.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.HtmlMouseEventArgs.Handled">
            <summary>
            Cancels event bubble.
            </summary>
            <remarks>
            If set to <c>true</c> subsequent objects in the event chain will not receive this event.
            <para>
            Warning: Unproperly usage can result in internal failure of global operations.
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.HtmlMouseEventArgs.#ctor(System.Web.UI.Control,GuruComponents.Netrix.ComInterop.Interop.IHTMLEventObj,GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            Handles Mouse events and fill the event arguments with the values form the last event. 
            </summary>
            <remarks>
            This constructor set the current element in the selection to, which forces the SelectionChanged event if the mouse click
            operation has changed the element. This constructor needs access to the Interop namespace is for internal
            use only.
            </remarks>
            <param name="element"></param>
            <param name="eventObject"></param>
            <param name="htmlEditor"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.HtmlMouseEventHandler">
            <summary>
            Declares the mouse event handler.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.IEventBinding">
            <summary>
            Access to event binding events.
            </summary>
            <remarks>
            The event's function mentioned in the description is not implemented in the component, rather the implementer
            is supposed to do this task according to the requested features. For instance, the <see cref="E:GuruComponents.Netrix.Events.IEventBinding.ShowCodeRequest"/>
            event is being fired when the user double clicks the event's field in the PropertyGrid. The expected task is
            to open a text editor, and either create or search and show the appropriate event handler. However, implementing
            the creation or search code is up to the application developer. 
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.Events.IEventBinding.CreateUniqueNameRequest">
            <summary>
            Creates a unique name for an event-handler method for the specified component and event.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Events.IEventBinding.EventGetValueRequest">
            <summary>
            Event binding service requests a value.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Events.IEventBinding.EventResetValueRequest">
            <summary>
            Event binding service resets a value.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Events.IEventBinding.EventSetValueRequest">
            <summary>
            Event binding service sets a value.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Events.IEventBinding.GetCompatibleMethodsRequest">
            <summary>
            Gets a collection of event-handler methods that have a method signature compatible with the specified event.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.Events.IEventBinding.ShowCodeRequest">
            <summary>
            Displays the user code for the designer.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.IEventBinding.EventDisplay">
            <summary>
            TODO: Add comments
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.LoadEventArgs">
            <summary>
            LoadEventArgs provides information about the current load process.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.LoadEventArgs._encoding">
            <summary>
            Current encoding used on save.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.LoadEventArgs.#ctor(System.Text.Encoding,System.String)">
            <summary>
            Constructor. It's build by Load event handler and not intendet to being called from user's code.
            </summary>
            <param name="encoding"></param>
            <param name="url"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.LoadEventArgs.Url">
            <summary>
            Gets the URL or filename which causes the load process.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.LoadEventArgs.Encoding">
            <summary>
            Gets the encoding used to load the content.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.LoadEventHandler">
            <summary>
            Fired before the load process starts.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.SaveEventHandler">
            <summary>
            Fired before a save operation starts.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.CreatedEventHandler">
            <summary>
            Fired if an new element was created.
            </summary>
            <remarks>This event does not fire if the element has been created by drag 'n drop or paste operations.</remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.PostEditorEventArgs">
            <summary>
            Event arguments for post editor events.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.PostEditorEventArgs.#ctor(GuruComponents.Netrix.ComInterop.Interop.IHTMLEventObj)">
            <summary>
            Internally used ctor. DO NOT USE IN USER CODE.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PostEditorEventArgs.EventObject">
            <summary>
            Returns the native event object.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.PostEditorEventHandler">
            <summary>
            Supports event fired after internal event processing.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.PropertyDisplayEventArgs">
            <summary>
            This class defines event arguments or
            </summary>
            <remarks>
            This class allows to cancel the navigation by setting the cancel property to <c>true</c>.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyDisplayEventArgs.ResetPropertyFilterList">
            <summary>
            If set to true the PropertyFilterList will refresh on next request.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.PropertyDisplayEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Elements.IElement,System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Internally used constructor for event arguments.
            </summary>
            <remarks>
            This constructor supports the NetRix infrastructure it has not being called from user code.
            </remarks>
            <param name="element">The element that delivers the properties.</param>
            <param name="pdc">Property descriptor collection.</param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyDisplayEventArgs.Element">
            <summary>
            Returns the element the PropertyGrid currently shows.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyDisplayEventArgs.DescriptorCollection">
            <summary>
            Gets or sets he current value.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.PropertyDisplayHandler">
            <summary>
            Event used to handle the displaying of property information within the PropertyGrid or similar environments.
            </summary>
            <seealso cref="T:GuruComponents.Netrix.Events.PropertyDisplayEventArgs"/>
            <param name="sender">Snder of data, ususally an element object, derived from <see cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement"/>.</param>
            <param name="e">Display event arguments object.</param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.PropertyFilterEventArgs">
            <summary>
            This class handles event arguments for PropertyFilter event.
            </summary>
            <remarks>
            This class allows to cancel the properties shown in the PropertyGrid.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.PropertyFilterEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Elements.IElement,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Internally used constructor for event arguments.
            </summary>
            <remarks>
            This constructor supports the NetRix infrastructure it has not being called from user code.
            </remarks>
            <param name="element"></param>
            <param name="pd"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyFilterEventArgs.Element">
            <summary>
            Returns the element the PropertyGrid currently shows.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyFilterEventArgs.Property">
            <summary>
            Gets or sets the Descriptor of the property.
            </summary>
            <remarks>
            The host application can create its own PropertyDescriptor to change the behavior
            of the property in PropertyGrid.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyFilterEventArgs.PropertyName">
            <summary>
            Gets the Name of Property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyFilterEventArgs.Category">
            <summary>
            Gets the Category the property appears in.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyFilterEventArgs.DisplayName">
            <summary>
            Gets the Localized (full) name.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyFilterEventArgs.Description">
            <summary>
            Gets the Description that appears in lower help section of propertygrid.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.PropertyFilterEventArgs.Value">
            <summary>
            Gets or sets he current value.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.PropertyFilterHandler">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ReadyStateChangedEventArgs">
            <summary>
            Declares the event args for the <see cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateChanged"/> event.
            </summary>
            <remarks>
            Use this event and the state "Interactive" to attach handlers of subclasses, like HtmlWindow.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.ReadyStateChangedEventArgs.#ctor(System.String)">
            <summary>
            Ctor
            </summary>
            <param name="p_strReadyState"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ReadyStateChangedEventArgs.ReadyState">
            <summary>
            Gets the raw state of the ready state changed event.
            </summary>
            <seealso cref="P:GuruComponents.Netrix.Events.ReadyStateChangedEventArgs.State"/>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ReadyStateChangedEventArgs.State">
            <summary>
            Definite state of loading procedure.
            </summary>
            <seealso cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateChanged"/>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ReadyStateChangedHandler">
            <summary>
            Declare the event handler signature for the ReadyStateChanged event.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.SaveEventArgs">
            <summary>
            SaveEventArgs provides information about the current save process.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.SaveEventArgs.#ctor(System.Text.Encoding,System.String)">
            <summary>
            Constructor. It's build by Save event handler and not intendet to being called from user's code.
            </summary>
            <param name="encoding"></param>
            <param name="url"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Events.SaveEventArgs.SetEncoding(System.Text.Encoding)">
            <summary>
            Set another encoding temporarily, if used within the <see cref="E:GuruComponents.Netrix.IHtmlEditor.Saving">Saving</see> event.
            </summary>
            <param name="encoding"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.SelectionChangedEventHandler">
            <summary>
            Delegate of the 
            <see cref="E:GuruComponents.Netrix.ISelection.SelectionChanged">SelectionChanged</see> event, 
            defined in the <see cref="T:GuruComponents.Netrix.ISelection">ISelection</see> interface and deriving class.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.SelectionChangedEventArgs">
            <summary>
            Contains the element which was last selected
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.SelectionChangedEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Elements.ElementCollection)">
            <summary>
            Ctor
            </summary>
            <param name="elements"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.SelectionChangedEventArgs.SelectedElements">
            <summary>
            Gets a collection of elements containing in the last selection.
            </summary>
            <remarks>
            After insert
            operations the collection is just one element - the last inserted. 
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.SelectionChangedEventArgs.SelectedElement">
            <summary>
            Return the first or the onw and only element in the collection of
            selected element. 
            </summary>
            <remarks>This is the prefered method to retrieve the current element.</remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.MenuIdentifier">
            <summary>
            Specifies the identifier of the shortcut menu to be displayed. 
            </summary>
            <remarks>
            Some of the options do not work in design mode but in browse mode only.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.Default">
            <summary>
            Anything else. Available both in design and browse mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.Image">
            <summary>
            On an image. Available both in design and browse mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.Control">
            <summary>
            On a field control. Available both in design and browse mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.Table">
            <summary>
            On a table. Available in browse mode only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.TextSelect">
            <summary>
            On selected text. Available in browse mode only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.Anchor">
            <summary>
            On an anchor. Available in browse mode only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.Unknown">
            <summary>
            Unknow. Available in browse mode only.
            </summary>        
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.ImageDynSrc">
            <summary>
            On image with DYNSRC property set. Available in browse mode only.
            </summary>        
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.ImageArt">
            <summary>
            On image. Available in browse mode only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.ScriptDebug">
            <summary>
            On script in debug mode. Available in browse mode only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.VerticalScroll">
            <summary>
            On vertical scroll bar. Available in browse mode only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.MenuIdentifier.HorizontalScroll">
            <summary>
            On horizontal scroll bar. Available in browse mode only.
            </summary>        
        </member>
        <member name="T:GuruComponents.Netrix.Events.ShowContextMenuEventArgs">
            <summary>
            This class defines the event arguments used in the ContextMenu event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowContextMenuEventArgs.ElementAtPoint">
            <summary>
            The element which is located under the pointer position.
            </summary>
            <remarks>
            This property can used to change the content of the context menu accordingly to the element
            the user has the right mouse button clicked on.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.ShowContextMenuEventArgs.SetElementAtPoint(System.Web.UI.Control)">
            <summary>
            Set the element during the event firing process, used by table context menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowContextMenuEventArgs.Location">
            <summary>
            The <see cref="T:System.Drawing.Point"/> where the mouse click happens that causes this event.
            </summary>
            <remarks>
            This point should be used to place the context menu at the right screen position.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowContextMenuEventArgs.UsingKeyboard">
            <summary>
            Gets true, if a key pressed event causes this event.
            </summary>
            <remarks>
            This value depends on hardware
            support and seems to be not reliable under some circumstances.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowContextMenuEventArgs.Identifier">
            <summary>
            Returns the type of context menu which sould appear.
            </summary>
            <remarks>
            This information represents the element or text type recognized under the
            mouse pointer
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.ShowContextMenuEventArgs.#ctor(System.Drawing.Point,System.Boolean,System.Int32,System.Web.UI.Control)">
            <summary>
            Ctor for event args. User internally.
            </summary>
            <param name="location">Mouse poiner location.</param>
            <param name="keyboard">Keyboard state.</param>
            <param name="type">Type of context menu id.</param>
            <param name="element">Control under mouse pointer.</param>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ShowContextMenuEventHandler">
            <summary>
            Declares the event handler signature used to set the context menu externally.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ShowErrorEventArgs">
            <summary>
            This class defines data for the ShowError event in HtmlWindow class.
            </summary>
            <remarks>
            This class allows to cancel the navigation by setting the cancel property to <c>true</c>.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.ShowErrorEventArgs.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Ctor for event arguments.
            </summary>
            <param name="description"></param>
            <param name="url"></param>
            <param name="line"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowErrorEventArgs.Url">
            <summary>
            The Url passed to the event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowErrorEventArgs.Description">
            <summary>
            The Description of error
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowErrorEventArgs.Line">
            <summary>
            The line in which the error occured.
            </summary>
            <remarks>
            Line numbe ris relative to the Url the error comes from.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ShowErrorHandler">
            <summary>
            Delegate for the show error event. Fired if running script invokes an error.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ShowMessageEventArgs">
            <summary>
            This class defines data for the <see cref="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ScriptMessage">ScriptMessage</see> event.
            </summary>
            <remarks>
            This class allows to cancel the popup box.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.ShowMessageEventArgs.#ctor(System.String,System.String,System.UInt32)">
            <summary>
            Ctor
            </summary>
            <param name="message"></param>
            <param name="caption"></param>
            <param name="dwType"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowMessageEventArgs.Message">
            <summary>
            The Message in the script alert box.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.ShowMessageEventArgs.Caption">
            <summary>
            The caption for the script alert box.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.ShowMessageHandler">
            <summary>
            Delegate for ShowMessage event, fired if script parts popup a message box.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.UpdateUIHandler">
            <summary>
            Declare the update event handler.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.UpdateReason">
            <summary>
            Event that causes the update
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.UpdateReason.Key">
            <summary>
            Key stroke
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.UpdateReason.Mouse">
            <summary>
            Mouse click
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.UpdateReason.Tools">
            <summary>
            Internal tools
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.Events.UpdateReason.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.UpdateUIEventArgs">
            <summary>
            Event arguments for UpdateUI event.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Events.UpdateUIEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Elements.IElement,GuruComponents.Netrix.Events.UpdateReason)">
            <summary>
            Creates the event argument object
            </summary>
            <param name="element"></param>
            <param name="reason"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.UpdateUIEventArgs.CurrentElement">
            <summary>
            Element currently active.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.UpdateUIEventArgs.Reason">
            <summary>
            Reason that causes the update
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Events.WebExceptionEventArgs">
            <summary>
            This class defines data for the <see cref="E:GuruComponents.Netrix.IHtmlEditor.WebException">WebException</see> event.
            </summary>
            <remarks>
            This class allows changing of URL to replace pages in case of error with some customized content. Additionally,
            the exception thrown internally is accessible without rethrow so the loading procedure will continue (so called 
            silent exception).
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Events.WebExceptionEventArgs.#ctor(System.Net.WebException,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="ex"></param>
            <param name="url"></param>
        </member>
        <member name="P:GuruComponents.Netrix.Events.WebExceptionEventArgs.InnerException">
            <summary>
            The inner exception thrown by URL loader.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.WebExceptionEventArgs.Url">
            <summary>
            The Url passed to the event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.WebExceptionEventArgs.UrlEncoded">
            <summary>
            The Url passed to the event, encoded.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Events.WebExceptionEventArgs.UrlTranslated">
            <summary>
            Set the translated version of the Url.
            </summary>
            <remarks>
            NetRix will load the source from the translated Url, 
            if the host application changes the value. This will be ignored if cancel is set to <c>true</c>.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.Events.WebExceptionEventHandler">
            <summary>
            Fired if the control requests resource which is embedded within the document.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlCommandInfo">
            <summary>
            Used to inform about the ability to do a command.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommandInfo.Enabled">
            <summary>
            Command is available.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommandInfo.Checked">
            <summary>
            Informs that the state of the command is on or the related element is selected.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommandInfo.Both">
            <summary>
            Set if the command is checked (on) and still available.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommandInfo.Latched">
            <summary>
            Set if the command is a toggle command and is currently active.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommandInfo.None">
            <summary>
            Set if the command is not checked (off) and not available at that point.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommandInfo.Error">
            <summary>
            Set if the control has not successfully recognized the given command.
            </summary>
            <remarks>
            This does not mean that the command is unavailable. It just means that there is no valid information present.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlCommand">
            <summary>
            These commands can be used to check if the options is on or available.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AlignBottom">
            <summary>
            Align elements to bottom border in absolute position mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AlignHorizontalCenter">
            <summary>
            Align elements to horizontal centered lines in absolute position mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AlignLeft">
            <summary>
            Align elements to left border in absolute position mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AlignRight">
            <summary>
            Align elements to right border in absolute position mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AlignToGrid">
            <summary>
            Align element to grid lines in absolute position mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Aligntop">
            <summary>
            Align elements to top border in absolute position mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AlignVerticalCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.ArrangeBottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.ArrangeRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.BringForward">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.BringToFront">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.CenterHorizontally">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.CenterVertically">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Delete">
            <summary>
            Delete element.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Fontname">
            <summary>
            Set font name (family name).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Fontsize">
            <summary>
            Set font size in HTML units (1...7).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.SendBackward">
            <summary>
            Send an element backwards in absolute position mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.SendToBack">
            <summary>
            Send an element to back in absolute position mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.JustifyFull">
            <summary>
            Justify the selected paragraph.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.BackColor">
            <summary>
            Set the back color.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Bold">
            <summary>
            Set bold.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.BorderColor">
            <summary>
            Set border color.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.ForeColor">
            <summary>
            Set fore color of text.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Italic">
            <summary>
            Set italic.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.JustifyCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.JustifyGeneral">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.JustifyLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.JustifyRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Underline">
            <summary>
            Underline text.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Font">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.StrikeThrough">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.DeleteWord">
            <summary>
            Delete word under caret.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.ExecPrint">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.JustifyNone">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputReset">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputSubmit">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputUpload">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.FieldSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Bookmark">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Hyperlink">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Unlink">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Unbookmark">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.HorizontalRule">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.LinebreakNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.LinebreakLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.LinebreakRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.LinebreakBoth">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.NonBreak">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputTextbox">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputTextarea">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputCheckbox">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputRadiobutton">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputDropdownbox">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InputListbox">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Button">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Image">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.ImageMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.File">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Script">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.JavaApplet">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Plugin">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.PageBreak">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Area">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Paragraph">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Form">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Marquee">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.List">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.OrderList">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.UnorderList">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Indent">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Outdent">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Preformatted">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Address">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Blink">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Div">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.RemoveFormat">
            <summary>
            Remove block/paragraph format.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.TeleType">
            <summary>
            
            </summary>        
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.SetBlockFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.SubScript">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.SuperScript">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.CenterAlignPara">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.LeftAlignPara">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.RightAlignPara">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.DirLtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.DirRtl">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.BlockDirLtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.BlockDirRtl">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InlineDirLtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InlineDirRtl">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.InsertSpan">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.MultipleSelection">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AbsolutePosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AbsoluteElement2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AbsoluteElement1D">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AbsolutePositioned">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.LiveResize">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AtomicSelection">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.AutourlDetectMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Print">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.ClearSelection">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Redo">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Undo">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.SelectAll">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Copy">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Cut">
            <summary>
            
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlCommand.Paste">
            <summary>
            
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormat">
            <summary>
            The internal representation of block formatting options.
            </summary>
            <remarks>
            The order
            is strongly determined from the IDM_GETBLOCKFMTS command and make
            the usage language independent.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Normal">
            <summary>
            Remove the block formatting.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Formatted">
            <summary>
            Assign the &lt;pre&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Address">
            <summary>
            Assign the &lt;address&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Heading1">
            <summary>
            Assign the &lt;h1&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Heading2">
            <summary>
            Assign the &lt;h2&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Heading3">
            <summary>
            Assign the &lt;h3&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Heading4">
            <summary>
            Assign the &lt;h4&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Heading5">
            <summary>
            Assign the &lt;h5&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Heading6">
            <summary>
            Assign the &lt;h6&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.OrderedList">
            <summary>
            Assign the &lt;ol&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.UnorderedList">
            <summary>
            Assign the &lt;ul&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.IndexList">
            <summary>
            Assign the &lt;index&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.MenuList">
            <summary>
            Assign the &lt;menu&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.DefinitionTerm">
            <summary>
            Assign the &lt;dt&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Definition">
            <summary>
            Assign the &lt;dd&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormat.Paragraph">
            <summary>
            Assign the &lt;p&gt; or &lt;div&gt; tag formatting to the whole block.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.IDocument">
            <summary>
            HtmlDocument implements implements.</summary>
            <remarks>
            The implementing class contains base functions to deal with the whole document and most of the insert methods,
            creating and wrapping elements and some methods to check whether or not an element can be inserted.
            <seealso cref="T:GuruComponents.Netrix.IHtmlEditor"/>
            </remarks>    
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanInsertButton">
            <summary>
            Indicates if a button can be inserted.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanInsertListBox">
            <summary>
            Indicates if a listbox can be inserted.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanInsertHtml">
            <summary>
            Indicates if HTML can be inserted.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanInsertHyperlink">
            <summary>                                
            Indicates if an hyperlink can be inserted.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanInsertRadioButton">
            <summary>
            Indicates if a radio button can be inserted.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanInsertTextArea">
            <summary>
            Indicates if a text area can be inserted.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanInsertTextBox">
            <summary>
            Indicates if a textbox can be inserted.
            </summary>
            
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.ActiveElement">
            <summary>
            Returns the active (last selected) element.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.SetActiveElement(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Set the active element and make it the current selection. 
            </summary>
            <remarks>Does nothing if element not exists.</remarks>
            <param name="el">The element that will set as active element.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.SetActiveElement(GuruComponents.Netrix.WebEditing.Elements.IElement,System.Boolean)">
            <summary>
            Set the active element and make it the current selection.
            </summary>
            <remarks>
            Does nothing if element not exists.
            If the second parameter is true the element becomes a viewable selection and shows handles.
            </remarks>
            <param name="el">The element which should set</param>
            <param name="SelectElement">Activate the handles around the element</param>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.SetActiveElement">
            <summary>
            Synchronizes the current element with the selection. Normally for internal use only.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CustomColors">
            <summary>
            Sets a list of colors for the customized color tab of color picker control. The host 
            application may define a way to choose various specific colors which should used during
            design time. 
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertComment(System.String)">
            <summary>
            Inserts a comment with the given text.
            </summary>
            <param name="innerText"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertHtml(System.String)">
            <summary>
            Inserts the specified string into the html over the current selection.
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertForm">
            <summary>
            Inserts a FORM tag which acts as a container for form elements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputButton">
            <summary>
            Inserts a button.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputPassword">
            <summary>
            Inserts a password field.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputHidden">
            <summary>
            Inserts a hidden field, in Designmode displayed as textfield
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputListBox">
            <summary>
            Inserts a list box.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputRadioButton">
            <summary>
            Inserts a radio button.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputCheckbox">
            <summary>
            Inserts a checkbox.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputTextArea">
            <summary>
            Inserts a text area.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputTextBox">
            <summary>
            Inserts a text box.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputDropdownList">
            <summary>
            Inserts a dropdownlist.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputFileUpload">
            <summary>
            Inserts a list box.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertHorizontalRule">
            <summary>
            Creates Horizontal Rule (line), &lt;hr&gt; tag.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputImage">
            <summary>
            Inserts a image button that acts as submit button.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputSubmit">
            <summary>
            Inserts a submit button.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertInputReset">
            <summary>
            Inserts a reset button.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertBreak">
            <summary>
            Creates line break, &lt;br&gt; tag.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertBreakWithClear(GuruComponents.Netrix.WebEditing.Elements.BreakClearEnum)">
            <summary>
            Creates line break, &lt;br clear="xxx"&gt; tag.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertScript">
            <summary>
            Inserts a &lt;script&gt; tag to activate javascript or something like that.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertIFrame">
            <summary>
            Inserts an embedded frame (iframe).
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertEmbed">
            <summary>
            Inserts an EMBED element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertTable(System.Int32,System.Int32)">
            <summary>
            Insert a new table at caret position if possible. Fill string defaults to an empty string. 
            Border width defaults to 0.
            </summary>
            <param name="rows">Number of Rows</param>
            <param name="cols">Number of Columns</param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertTable(System.Int32,System.Int32,System.String)">
            <summary>
            Insert a new table at caret position if possible. Provide all possible parameters except border width.
            </summary>
            <param name="rows">Number of Rows</param>
            <param name="cols">Number of Columns</param>
            <param name="preFill">String which prefills the cells, e.g. &amp;nbsp;</param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertTable(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Insert a new table at caret position if possible. Provide all possible parameters.
            </summary>
            <param name="rows">Number of Rows</param>
            <param name="cols">Number of Columns</param>
            <param name="preFill">String which prefills the cells, e.g. &amp;nbsp;</param>
            <param name="borderWidth">Width of borders</param>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertImage">
            <summary>
            Insert an empty image tag (&lt;img&gt;).
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertDefinitionList">
            <summary>
            Insert (&lt;dl&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertDefinitionEntry">
            <summary>
            Insert (&lt;dd&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertDefinitionTerm">
            <summary>
            Insert (&lt;dt&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertOrderedList">
            <summary>
            Inserts a ordered list. Does not create the first LI.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertUnOrderedList">
            <summary>
            Inserts a unordered (bulleted) list
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertListElement">
            <summary>
            Inserts a list element
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertHyperlink">
            <summary>
            Inserts a hyperlink with the specified URL and description
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertBookmark(System.String)">
            <summary>
            Inserts a bookmark, e.g. a anchor tag with name attribute.
            </summary>
            <param name="name">The name of the bookmark</param>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertPreformatted">
            <summary>
            Insert (&lt;pre&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertAddress">
            <summary>
            Insert (&lt;address&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertAcronym">
            <summary>
            Insert (&lt;acronym&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertBidirectionalOverride">
            <summary>
            Insert (&lt;bdo&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertBlockquote">
            <summary>
            Insert (&lt;blockquote&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertBig">
            <summary>
            Insert (&lt;big&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertBgsound">
            <summary>
            Insert (&lt;bgsound&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertCenter">
            <summary>
            Insert (&lt;center&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertCite">
            <summary>
            Insert (&lt;cite&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertCode">
            <summary>
            Insert (&lt;code&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertDel">
            <summary>
            Insert (&lt;del&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertDefinition">
            <summary>
            Insert (&lt;dfn&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertIns">
            <summary>
            Insert (&lt;ins&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertKeyboard">
            <summary>
            Insert (&lt;kbd&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertEmphasis">
            <summary>
            Insert (&lt;em&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertTeletype">
            <summary>
            Insert (&lt;tt&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertVariable">
            <summary>
            Insert (&lt;var&gt;) tag
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.CreateOrderedList">
            <summary>
            Create a ordered list without any elements
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.CreateUnorderedList">
            <summary>
            Create an unordered list without any elements
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertNonBreakableSpace">
            <summary>
            Creates &amp;nbsp; entity.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.InsertHtml(System.String,System.Boolean)">
            <summary>
            Insert HTML at caret position and delete any selected text, if the DeleteSelection parameter is true.
            </summary>
            <param name="Html">HTML text to be inserted.</param>
            <param name="DeleteSelection">True, if the current selection should be deleted.</param>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanWrapSelection">
            <summary>
            Indicates if the current selection can be wrapped in HTML tags.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.WrapSelection(System.String)">
            <summary>
            Creates a new tag around the current HTML selection.</summary><remarks>This method does not check
            for the validity of the new HTML. If the generated HTML is not valid the call causes
            unexpected results.
            </remarks>
            <param name="tag">The name of the tag which should wrap the selection.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.WrapSelection(System.String,System.Collections.IDictionary)">
            <summary>
            Creates a new tag around the current HTML selection.</summary><remarks>This method does not check
            for the validity of the new HTML. If the generated HTML is not valid the call causes
            unexpected results. Additonally the given attributes are created.
            </remarks>
            <param name="tag">The name of the tag which should wrap the selection.</param>
            <param name="attributes">Dictionary of string key/value pairs for attribute creation</param>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.WrapSelectionInDiv">
            <summary>
            Takes the selection and put an &lt;div&gt; around it
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.WrapSelectionInSpan">
            <summary>
            Takes the selection and put an &lt;span&gt; around it
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.WrapSelectionInBlockQuote">
            <summary>
            Takes the selection and put an &lt;blockquote&gt; around it
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.WrapSelectionInHyperlink(System.String)">
            <summary>
            Takes the selection and put an &lt;hyperlink&gt; around it
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IDocument.RemoveHyperlink">
            <summary>
            Remove a hyperlink where the caret is placed in.
            </summary>
            <remarks>
            The text which the hyperlink contains will not be removed.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.CanRemoveHyperlink">
            <summary>
            Indicates if the current selection can have it's hyperlink removed.
            </summary>
            <remarks>
            Use this property to update the user interface.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IDocument.Zoom">
            <summary>
            Gets or set the editor window zoom level and persist it using body's zoom style attribute.
            </summary>
            <remarks>
            This setting persist's by setting bod element's zoom style. 
            In design mode, this zooms the scrollbars, too. In browse mode, the behavior of the scrollbars
            depends on the current DOCTYPE settings. To get desired behavior (content zoomed and scrollbars
            not zoomed, the following DOCTYPE setting is recommended:
            <code>
            &lt;!doctype html public "-//W3C//DTD HTML 4.01 Strict//EN"&gt;
            </code>
            Insert this line as first line in each document to get desired zoom behavior.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.IEditorInstanceService">
            <summary>
            Allows service based components to add the editor instance where the service is hosted.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IEditorInstanceService.EditorInstance">
            <summary>
            Returns the editor the designer refers to.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.IHtmlEditor">
            <summary>
            The editor control with the basic functionality. </summary>
            This is the main control.
            <remarks>
            <para>
            The main assembly has a satellite contract attribute to unlink the version relation between
            the main and the satellite assemblies. You should set all new satellites always to "1.0.0.0" to
            make the resource manager operate properly, even if the version of the main assembly is
            much higher.
            </para>
            </remarks>
            <example>
            To instantiate the control just call the constructor:
            <code>
            using GuruComponents.Netrix;
            
            HtmlEditor htmlEditor1 = new HtmlEditor();
            // do some stuff with the editor here</code>
            A basic application to implement a HTML editor solution must provide these functions:
            <list type="list">
                <item><term>An instance of the component.</term></item>
                <item><term>The <see cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete">ReadyStateComplete</see> event attached to a handler.</term></item>
                <item><term>A handler which sets the control into design mode on request.</term></item>
            </list>
            After having this the user can put the control into design mode and the application can look for the
            ready state complete event. It is important that no function is called before this event was fired.
            <para>
            Take a look at the various methods and properties to see more examples of how to use it.
            </para>
            </example>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.HandleTAB">
            <summary>
            Whether or elements which could be influenced by TAB key should get TAB sequences in design mode.
            </summary>
            <remarks>
            This applies to:
            <list type="bullet">
                <item>LI</item>
            </list>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.NoTextSelection">
            <summary>
            Disables the ability to select text if control is in browse mode.
            </summary>
            <remarks>
            This applies only if the content is loaded after setting the property.
            <para>
            Note: This features is available as of NetRix Pro 1.6. It's not available in Advanced or Standard.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.ImeReconversion">
            <summary>
            Allows computer users to employ IME reconversion while browsing Web pages.
            </summary>
            <remarks>
            During initialization, the host can set this flag to enable Input Method Editor (IME) reconversion, allowing computer users to employ IME reconversion while browsing Web pages. An input method editor is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.
            <para>
            Note: This features is available as of NetRix Pro 1.6. It's not available in Advanced or Standard.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.HtmlFormatterOptions">
            <summary>
            Default formatter used if no external formatter is being provided.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.ThreadSafety">
            <summary>
            Turns on thread safe access to properties and methods.
            </summary>
            <remarks>
            By default the component isn't thread safe. However, the burdensome Invoke technique required to invoke
            cross thread calls is implemented internally and can be turned on or off using this property.
            The drawback is that permanent access in a threadsafe manner could result in the performance flaw. In
            case nobody needs cross thread access it's recommended to let this property set to <c>false</c>.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Exec(GuruComponents.Netrix.ComInterop.Interop.IDM)">
            <summary>
            Executes the specified command in MSHTML directly.
            </summary>
            <param name="command">The command. Not all commands are supported in all situations.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Exec(GuruComponents.Netrix.ComInterop.Interop.IDM,System.Object)">
            <summary>
            Executes the specified command in MSHTML with the specified arguments.
            </summary>
            <param name="command">The command. Not all commands are supported in all situations.</param>
            <param name="argument">The argument. Supported types are string, bool, int and short.</param>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.ForceMimeType">
            <summary>
            If set to true all loaded data with textual base type will be treated as HTML.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.AcceptsTab">
            <summary>
            Processes the TAB key if possible instead of moving focus to next control.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.AutoWordSelection">
            <summary>
            Whether select a complete word on double click.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.RegisterPlugIn(GuruComponents.Netrix.PlugIns.IPlugIn)">
            <summary>
            Plugins can call this method to register itself as callback for certain functions.
            </summary>
            <param name="plugin">A reference to the plugin object.</param>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.RegisteredPlugIns">
            <summary>
            Gives direct access to the list of registered plug-ins.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.TransposeEnterBehavior">
            <summary>
            Exchanges the behavior of Enter key. If active, Enter inserts BR instead of P.
            </summary>
            <remarks>
            This method allows the editor to behave differently if the user hits the Enter key.
            By default, enter inserts a new paragraph. If this property is <c>true</c>, the Enter key will
            insert a break (BR tag). The opposite insertion method, Shft-Enter, will insert a paragraph.
            The type of paragraph depends on the the current <see cref="P:GuruComponents.Netrix.IHtmlEditor.BlockDefault"/> setting.
            </remarks>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.BlockDefault"/>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.DisableEditFocus">
            <summary>
            Turns off the hatched border and handles around a site selectable element when the element has "edit focus" in design mode; that is, when the text or contents of the element can be edited.
            </summary>
            <value><c>True</c> to active the property. Defaults to <c>False</c>.</value>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetActiveDocument(System.Boolean)">
            <summary>
            Return the native document instance.
            </summary>
            <param name="BaseDocument"></param>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.GenericElementFactory">
            <summary>
            Returns the factory that controls the relation between native and exposes element objects.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetCurrentScopeElement">
            <summary>
            Get the current element which is in the scope for next editing operation. 
            </summary>
            <remarks>
            Caller can cast the object to the right IElement derived type.
            <para>
            If it's more important to get the current element, which has fired the last event or
            is set by <see cref="E:GuruComponents.Netrix.IHtmlEditor.HtmlElementChanged"/> event, it's better to use the <see cref="M:GuruComponents.Netrix.IHtmlEditor.GetCurrentElement"/>
            method. Under normal circumstances both method return the same element, but during key or mouse
            operations in nested element hierarchies there might be a difference between currency and scope.
            </para>
            </remarks>
            <returns>The element object</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetCurrentElement">
            <summary>
            Gets the current element.
            </summary>
            <remarks>
            This method returns the current element, as it is set by <see cref="E:GuruComponents.Netrix.IHtmlEditor.HtmlElementChanged"/> event.
            If the element wasn't recognized for some reason the method returns the Body Element
            </remarks>
            <seealso cref="M:GuruComponents.Netrix.IHtmlEditor.GetCurrentScopeElement"/>
            <returns>The current element object.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetParentFromHierarchy(GuruComponents.Netrix.WebEditing.Elements.IElement,System.String)">
            <summary>
            Searches the element tree upwards to detect the next element the current element is in.
            </summary>
            <remarks>
            Search stops and fails if body is reached ==> element is not in document tree.
            Search returns the first occurence of element, therefore the innermost element of a nested
            structure is recognized.
            </remarks>
            <param name="element">IElement element or null if not found.</param>
            <param name="tagName">The tag name which the methods searches for.</param>
            <returns>Returns the element, if found.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Version">
            <summary>
            The current Assembly version.
            </summary>                   
            <remarks>
            This property returns the current assembly version to inform during design session about the assembly loaded.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.SerialNumberPrefix">
            <summary>
            Returns the current serial number prefix the control was licensed with.
            </summary>
            <remarks>
            This gives the developer access to the type of control and license the control
            was compiled with during run time. The prefix contains information about the
            control type and kind of license in the following format:
            <para>
            XXTCCTK / 7 digits, numeric
            </para>
            <para>
            The digits have the following meaning:
            <list type="bullet">
            <item>XX: always 33 (Code for the Genesis Series at Guru Components)</item>
            <item>T: 9 for full version, 0 for trial</item>
            <item>CC: always 44 (Code for the NetRix Control and Component Series)</item>
            <item>K: Control key (1=Full, 2=Light, 3=ColorPicker, 4=FontPicker, 5=StylEditor, 6=UnitEditor)</item>
            </list>
            The host application can look for the specific value and operate differently depending
            on the used control type and license. For example, you can produce a demo version of your
            product with the trial license of NetRix which expires exactly one day before the NetRix
            license expires to avoid the license exception thrown from the license manager. 
            </para>
            Note: The prefix does not contain secret information about the key or your serial number.
            If an user retrieves the prefix from the control he cannot activate or retrieve your license.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.RegisterNamespace(System.String,System.String,System.Type)">
            <summary>
            Registers a namespace.
            </summary>
            <remarks>
            Registered Namespaces will call the behaviorfactory for that namespace.
            The behaviorfactory uses a callback delegate to find the drawing method to draw and resolve
            the element and, additionally, the ViewLink content used to display the element. Both, drawing 
            and embedding, must implemented separatly by the host application.
            </remarks>
            <param name="alias">The alias of the namespace, like "asp" for ASP.NET controls.</param>
            <param name="namespaceName">URN of namespace</param>
            <param name="behavior">The type of behavior the namespace manager uses to resolve elements for rendering. Must inherit from IBaseBehavior.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.RegisterNamespace(System.String,System.Type)">
            <summary>
            Registers a namespace.
            </summary>
            <remarks>
            Registered Namespaces will call the behaviorfactory for that namespace.
            The behaviorfactory uses a callback delegate to find the drawing method to draw and resolve
            the element and, additionally, the ViewLink content used to display the element. Both, drawing 
            and embedding, must implemented separatly by the host application.
            </remarks>
            <param name="alias">The alias of the namespace, like "asp" for ASP.NET controls.</param>
            <param name="behavior">The type of behavior the namespace manager uses to resolve elements for rendering. Must inherit from IBaseBehavior.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetRegisteredNamespaces">
            <summary>
            Returns the list of registered namespaces as dictionary with alias:ns pairs.
            </summary>
            <returns>A list of registered namespaces as dictionary with alias:ns pairs</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.RegisterElement(GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo,System.Type)">
            <summary>
            Registers an element for internal processing.
            </summary>
            <remarks>
            The type class must have a public constructor which must accept exact one parameter of
            type <see cref="T:GuruComponents.Netrix.ComInterop.Interop.IHTMLElement">IHTMLElement</see>.
            Once the element is registered, the control tries to get the constructor, instantiate an
            object and return the object to the caller. Some of the events the control fires use these
            generic object creation to expose native element objects to the host application.
            <para>
            To obtain the <see cref="T:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo">ITagInfo</see>
            object instantiate it using the <see cref="T:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo">ITagInfo</see> class or
            any class which implements <see cref="T:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo">ITagInfo</see>.
            When creating an <see cref="T:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo">ITagInfo</see> object for
            elements which resides in a specific namespace, one must include the namespace alias which
            registered whithin the control. The namespace must have been registered before the first element is added.
            </para>
            <para>
            The type the element object is created from must implement <see cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement">IElement</see>.
            </para>
            <seealso cref="M:GuruComponents.Netrix.IHtmlEditor.RegisterNamespace(System.String,System.Type)"/>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement"/>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement"/>
            <seealso cref="T:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo"/>
            </remarks>
            <param name="tagInfo">The formatting information.</param>
            <param name="elementType">The type of element.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.AddCommand(GuruComponents.Netrix.Designer.CommandWrapper)">
            <summary>
            Add a command which allows Extenders to provide callbacks.
            </summary>
            <param name="wrapper">The CommandWrapper objects defines the ID and the callback handler.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.InvokeCommand(System.ComponentModel.Design.CommandID)">
            <summary>
            Sends a command to the editor.
            </summary>
            <remarks>
            Extender and plug-ins can register there private commands by adding them using <see cref="M:GuruComponents.Netrix.IHtmlEditor.AddCommand(GuruComponents.Netrix.Designer.CommandWrapper)"/>.
            The host application can then call these commands by using this method. 
            </remarks>
            <param name="id"></param>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.ServiceProvider">
            <summary>
            Returns the service provider to provide common .NET services to plug-ins.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.HideCaret">
            <summary>
            The HideCaret function removes the caret from the screen. 
            </summary>
            <remarks>
            Hiding a caret does not destroy its current shape or invalidate the insertion point.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ShowCaret">
            <summary>
            The ShowCaret function makes the caret visible on the screen at the caret's current position.
            </summary>
            <remarks>
            When the caret becomes visible, it begins flashing automatically. 
            ShowCaret shows the caret only if the specified window owns the caret, the caret has a shape, and the caret has not been hidden two or more times in a row. If one or more of these conditions is not met, ShowCaret does nothing and returns <c>false</c>.
            <para>
            Hiding is cumulative. If your application calls HideCaret five times in a row, it must also call ShowCaret five times before the caret reappears.
            </para>            
            <para>
            The system provides one caret per queue. A window should create a caret only when it has the keyboard focus or is active. The window should destroy the caret before losing the keyboard focus or becoming inactive.
            In NetRix this is the default behavior and there is no need to manipulate the caret directly but a different behavior is required.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CurrentCulture">
            <summary>
            Sets or gets the current Culture.
            </summary>
            <remarks>
            Setting a different culture will load the language from
            NetRix.Localization.dll satellite DLL, which should contain the strings and images for that
            culture. If the culture does not exists there the default culture "en-US" will load.
            Once the resource is loaded, we store it in a static field to make it accessible to all
            classes which does not derive from HtmlEditor.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.StopFocusOnLoad">
            <summary>
            If set to <c>true</c> the focus will not set on load.
            </summary>
            <remarks>
            The default behavior of the focus will set the focus on the control and
            activates the caret after loading a document or HTML. This property suppresses
            this behavior if set.
            <para>
            It is important to set (or let) this property to <c>false</c>, if content is loaded, which
            has client side scripts in it or which has forms where the user can enter values. If the
            document cannot receive the focus, the user cannot enter anything, the content is totally
            blocked. 
            </para>
            The intention of this property is to allow the subsequential re-loading of the content using
            <see cref="M:GuruComponents.Netrix.IHtmlEditor.LoadHtml(System.String)"/> whereas the user enters data into another control on the form. If, under
            any circumstances, the user is allows to enter anything or copy anything from the control, the
            property must turned off (set to <c>false</c> again.
            <para>
            This property was introduced in the second edition of the 1016 Build, June 8, 2004. The normal
            behavior was not changed if the property is not set explicitly and the control runs in design
            mode. In browse mode the control runs with getting the focus, unless this property is
            explicitly set.
            </para>
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.BeforeSnapRect">
            <summary>
            Fired before the snap rect method is applied during resize and move. Cancallable.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.AfterSnapRect">
            <summary>
            Fired after the snap rect method is applied during resize and move.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.Loading">
            <summary>
            Fired before a new document will loaded from stream or file.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.Loaded">
            <summary>
            Fired after the new document is succesfully loaded from stream or file.
            </summary>
            <remarks>
            The event is fired immediataley after the base stream is loaded and and the protocol handler 
            is successfully attached. Loading a document is a asynchronous process. If the document contains
            several object (like images) they are loaded after the base document is ready. This may take a
            while. The final document cannot be used before the ReadyStatecomplete event is fired.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.Saving">
            <summary>
            Fired before the document will save into stream.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.Saved">
            <summary>
            Fired after the document is successfully saved into stream.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.DocumentCreated">
            <summary>
            Fired if a new document has been succesfully created.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.ElementCreated">
            <summary>
            Fired if a new element has been successfully created.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.EventManager">
            <summary>
            Switch element events globally on or off.
            </summary>
            <remarks>
            By default the event manager receives all events for all elements.
            </remarks>
            <returns>An instance of the event manager, which provides access to setting properties.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.EventBinding">
            <summary>
            Access to event binging events.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.UIBinding">
            <summary>
            Binding to the user interface service.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ReflectInnerType(System.String)">
            <summary>
            This methods returns one of the inner types not available in the Core assembly.
            </summary>
            <remarks>
            This method is used by plug-ins to get access to internal types.
            </remarks>
            <param name="typeName">The full qualified name.</param>
            <returns>The Type, if the name was found and is declared in 'GuruComponents.Netrix.Editor.dll'.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SetMousePointer(System.Boolean)">
            <summary>
            Overrides the mouse pointer.
            </summary>
            <param name="Hide"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.CommandStatus(GuruComponents.Netrix.HtmlCommand)">
            <summary>
            Gets the current status of any (theoretical) available command.
            </summary>
            <remarks>
            This is a very fast method to check the current state of the control and
            the currently available commands, used to update toolbars and menus. 
            </remarks>
            <param name="command">Any command from the <see cref="T:GuruComponents.Netrix.HtmlCommand">HtmlCommand</see> enumeration.</param>
            <returns>A value that indicates the command is available or not or currently toggled on.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.CreateElement(System.String)">
            <summary>
            Creates a new element.
            </summary>
            <remarks>
            This method does no add the element to the DOM, it makes it available for later placement.
            </remarks>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Glyphs">
            <summary>
            Access the glyph module.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.TextSelector">
            <summary>
            Return the currently used TextSelector.
            </summary>
            <remarks>
            The <see cref="T:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector">ITextSelector</see> class handles selection 
            specifically for text, whereas HtmlSelection provides element based methods.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.WordCount">
             <summary>
             This property returns the number of words in the document.
             </summary>
             <remarks>
             If the document is not in design mode the property will return 0. The method is time consuming.
             It is not recommended to call this property frequently, e.g. in mouse move or key press handlers.
             </remarks>
             <remarks>
             The method works in design mode only.
             </remarks>
             <example>
             Assuming MenuItem4 is a way the user can reach this method, the application can display the number of words
             using this method:<code>
            Private Sub MenuItem4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem4.Click
              MessageBox.Show(Me, "This document contains approximatly " + Me.HtmlEditor1.WordCount.ToString() + " Words", 
                                  "Word Count", 
                                  MessageBoxButtons.OK, 
                                  MessageBoxIcon.Information)
            End Sub</code>
             </example>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Grid">
            <summary>
            Access the grid module.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.RespectVisibility">
            <summary>
            if activated the control respects hidden styles even in design mode.
            </summary>
            <remarks>
            The property defaults to <c>false</c>. Normally the designer shows hidden
            elements, to make editing possible. To see a more real preview of the page
            it's possible to change the option.
            <para>
            Application developers: This option should be set by user action, because
            a permanent setting will prevent the user from selecting hidden elements.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.BordersVisible">
            <summary>
            Show borders around elements if they don't have own borders.
            </summary>
            <remarks>
            This makes invisible tables and blind images
            visible at design time. If the table designer is used this option should not be activated.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.LinkedStylesheetsEnabled">
            <summary>
            This property disables linked stylesheets temporarily in design view.
            </summary>
            <remarks>
            It does not remove the styles or link tags nor it has any effect on the final document.
            </remarks>
            <example>
            Use the following code to switch the style sheet on and off:
            <code>
            this.htmlEditor1.LinkedStylesheetsEnabled = e.Button.Pushed;
            </code>
            </example>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.AutoUrlModeEnabled">
            <summary>
            Enables or disables the automatic detection of URL and eMail addresses during text editing.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.LiveResize">
            <summary>
            Causes the editor to update an element's appearance continuously during a resizing or moving operation, rather than updating only at the completion of the move or resize.
            </summary>
            <remarks>
            When this feature is off, an element's new position or size is indicated by a dashed rectangle until the mouse button is released.
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.AbsolutePositioningEnabled">AbsolutePositioningEnabled</seealso>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.Grid">Grid</seealso>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.MultipleSelectionEnabled">MultipleSelectionEnabled</seealso>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.MultipleSelectionEnabled">
            <summary>
            Indicates if multiple selection is enabled in the editor.</summary>
            <remarks>
            Implicitly places MSHTML into multiple selection mode if set to <c>true</c>.
            This selection mode applies only if the control is in absolute positioning mode. To enter this mode
            just set the property 
            <see cref="P:GuruComponents.Netrix.IHtmlEditor.AbsolutePositioningEnabled">AbsolutePositioningEnabled</see>.
            Internally the control uses style sheets to enable HTML beeing absolute positioned.
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.AbsolutePositioningEnabled">AbsolutePositioningEnabled</seealso>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.Grid">Grid</seealso>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.AbsolutePositioningEnabled">
            <summary>
            Enables or disables absolute position for the entire editor.
            </summary>
            <remarks>
            Internally the control uses style sheets to enable HTML beeing absolute positioned. After moving
            positionable elements (IMG, TABLE, DIV, ...) the style "position:absolute" will be applied. If a 
            position could be retrieved the "top" and "left" style attributes are set. Switching this property off
            will not remove the position information nor move the elements. After an element is first time moved
            with the mouse with AbsolutePositioningEnabled is off, the style "position:absolute" wil be removed.
            The position information will still left in the style attribute. If the property will be activated later,
            the style "position:absolute" is added again and the elements jump back to there previous position after
            the mouse touches them.
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.MultipleSelectionEnabled">MultipleSelectionEnabled</seealso>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.Grid">Grid</seealso>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.KeepSelection">
            <summary>
            Maintains a selection even when the control loses focus.
            </summary>
            <remarks>
            This property is useful for applications that require multiple control instances to interact with each other. 
            One example is an e-mail application that allows users to select from a list of e-mails in one control instance and 
            to see the actual e-mail in a second instance.
            </remarks>       
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Selection">
            <summary>
            The current selection in the editor.
            </summary> 
            <remarks>
            See <see cref="T:GuruComponents.Netrix.ISelection"/> for more information.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">
            <summary>
            The text formatting element of the editor.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.ITextFormatting"/> for more information.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CssTextFormatting">
            <summary>
            The text formatting element of the editor that supports CSS inline styles.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.ITextFormatting"/> for more information.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.DesignModeEnabled">
            <summary>
            Indicates whether the editor is in design mode.</summary>
            <remarks>
            Also places MSHTML into design mode if set to <c>true</c>.
            </remarks> 
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Document">
            <summary>
            Returns the document object for doing insertions.
            </summary>
            <remarks>
            If the property was called the first time and there was no document loaded the control
            creates a new empty document with default properties. 
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.DocumentStructure">
            <summary>
            The structure of the document.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Window">
            <summary>
            Retrieves object which allows global access to the whole document window.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.IsFrameDocument">
            <summary>
            Gets <c>true</c> if the current document is a frame document.
            </summary>
            <remarks>
            The purpose of this property is to detect the frame state of the document and switch 
            appropriate UI elements on or off. Internally the property simply checks the number 
            of frames. Therefore the property may return <c>false</c>, even if the document is
            a frame document with just zero frames. Developery of application which use frames
            extensivly may double check the content using <see cref="M:GuruComponents.Netrix.IHtmlEditor.GetXmlDocument"/> method and
            XPath to see the real content of the base document.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.HtmlFrames">
            <summary>
            Returns an object containing all Frame information.
            </summary>
            <remarks>
            <para>
            Works only if the base document of a frameset.
            If the document contains a body this getter is still active and usable, but the framecollection is null.
            After retrieving successfully the frame object it can used to manipulate or create framesets.
            If the current document is a standard document and a new frame structure is build, the content will
            depraved and replaced by a new empty frameset.
            </para>
            <para>
            The documentation of <see cref="T:GuruComponents.Netrix.WebEditing.Documents.IFrameSet"/> for more information about manipulation framesets.
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.PrintPageSetup">
            <summary>
            Shows the internal Page Setup Dialog.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.PrintWithPreview">
            <summary>
            Shows the print preview and let the user optionally print.
            </summary>
            <remarks>
            To use the print feature the control must be able to reload the current content internally. 
            Therefore the host application must provide a path or URL to the LoadXXX methods before 
            a printing process can start. Without a valid path the print command is ignored and the
            preview will display a blank page.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.PrintWithPreview(System.String)">
            <summary>
            Prints a document using a customized preview from the given 
            print template.
            </summary>
            <remarks>
            To use the print feature the control must be able to reload the current content internally. 
            Therefore the host application must provide a path or URL to the LoadXXX methods before 
            a printing process can start. Without a valid path the print command is ignored and the
            preview will display a blank page.
            </remarks>
            <param name="PathToPrintTemplate">The path to the HTML code creating the print template.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.PrintImmediately">
            <summary>
            Print the current document to the current printer without any user interaction.
            </summary>
            <remarks>
            To use the print feature the control must be able to reload the current content internally. 
            Therefore the host application must provide a path or URL to the LoadXXX methods before 
            a printing process can start. Without a valid path the print command is ignored and the
            method will print a blank page.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SendIDMCommand(System.Int32)">
            <summary>
            This method sends an IDM command directly to MSHTML.
            </summary>
            <remarks>
            The call is protected by a try/catch block. The 
            method does not throw an exception on error and does always return nothing. This method is just for
            experimental environments and should not used in production environments.
            <para>
            This is method is subject to be changed or removed in later versions without further notice.
            </para>
            <list type="table">
            <listheader>
                <term>IDM constant</term><term>Numeric Value</term>
            </listheader>
            <item>
                <description></description>
                <description></description>
            </item>
            <item><description>Interop.IDM.UNKNOWN                 </description><description>0</description></item>
            <item><description>Interop.IDM.ALIGNBOTTOM             </description><description>1</description></item>
            <item><description>Interop.IDM.ALIGNHORIZONTALCENTERS  </description><description>2</description></item>
            <item><description>Interop.IDM.ALIGNLEFT               </description><description>3</description></item>
            <item><description>Interop.IDM.ALIGNRIGHT              </description><description>4</description></item>
            <item><description>Interop.IDM.ALIGNTOGRID             </description><description>5</description></item>
            <item><description>Interop.IDM.ALIGNTOP                </description><description>6</description></item>
            <item><description>Interop.IDM.ALIGNVERTICALCENTERS    </description><description>7</description></item>
            <item><description>Interop.IDM.ARRANGEBOTTOM           </description><description>8</description></item>
            <item><description>Interop.IDM.ARRANGERIGHT            </description><description>9</description></item>
            <item><description>Interop.IDM.BRINGFORWARD            </description><description>10</description></item>
            <item><description>Interop.IDM.BRINGTOFRONT            </description><description>11</description></item>
            <item><description>Interop.IDM.CENTERHORIZONTALLY      </description><description>12</description></item>
            <item><description>Interop.IDM.CENTERVERTICALLY        </description><description>13</description></item>
            <item><description>Interop.IDM.CODE                    </description><description>14</description></item>
            <item><description>Interop.IDM.DELETE                  </description><description>17</description></item>
            <item><description>Interop.IDM.FONTNAME                </description><description>18</description></item>
            <item><description>Interop.IDM.FONTSIZE                </description><description>19</description></item>
            <item><description>Interop.IDM.GROUP                   </description><description>20</description></item>
            <item><description>Interop.IDM.HORIZSPACECONCATENATE   </description><description>21</description></item>
            <item><description>Interop.IDM.HORIZSPACEDECREASE      </description><description>22</description></item>
            <item><description>Interop.IDM.HORIZSPACEINCREASE      </description><description>23</description></item>
            <item><description>Interop.IDM.HORIZSPACEMAKEEQUAL     </description><description>24</description></item>
            <item><description>Interop.IDM.INSERTOBJECT            </description><description>25</description></item>
            <item><description>Interop.IDM.MULTILEVELREDO          </description><description>30</description></item>
            <item><description>Interop.IDM.SENDBACKWARD            </description><description>32</description></item>
            <item><description>Interop.IDM.SENDTOBACK              </description><description>33</description></item>
            <item><description>Interop.IDM.SHOWTABLE               </description><description>34</description></item>
            <item><description>Interop.IDM.SIZETOCONTROL           </description><description>35</description></item>
            <item><description>Interop.IDM.SIZETOCONTROLHEIGHT     </description><description>36</description></item>
            <item><description>Interop.IDM.SIZETOCONTROLWIDTH      </description><description>37</description></item>
            <item><description>Interop.IDM.SIZETOFIT               </description><description>38</description></item>
            <item><description>Interop.IDM.SIZETOGRID              </description><description>39</description></item>
            <item><description>Interop.IDM.SNAPTOGRID              </description><description>40</description></item>
            <item><description>Interop.IDM.TABORDER                </description><description>41</description></item>
            <item><description>Interop.IDM.TOOLBOX                 </description><description>42</description></item>
            <item><description>Interop.IDM.MULTILEVELUNDO          </description><description>44</description></item>
            <item><description>Interop.IDM.UNGROUP                 </description><description>45</description></item>
            <item><description>Interop.IDM.VERTSPACECONCATENATE    </description><description>46</description></item>
            <item><description>Interop.IDM.VERTSPACEDECREASE       </description><description>47</description></item>
            <item><description>Interop.IDM.VERTSPACEINCREASE       </description><description>48</description></item>
            <item><description>Interop.IDM.VERTSPACEMAKEEQUAL      </description><description>49</description></item>
            <item><description>Interop.IDM.JUSTIFYFULL             </description><description>50</description></item>
            <item><description>Interop.IDM.BACKCOLOR               </description><description>51</description></item>
            <item><description>Interop.IDM.BOLD                    </description><description>52</description></item>
            <item><description>Interop.IDM.BORDERCOLOR             </description><description>53</description></item>
            <item><description>Interop.IDM.FLAT                    </description><description>54</description></item>
            <item><description>Interop.IDM.FORECOLOR               </description><description>55</description></item>
            <item><description>Interop.IDM.ITALIC                  </description><description>56</description></item>
            <item><description>Interop.IDM.JUSTIFYCENTER           </description><description>57</description></item>
            <item><description>Interop.IDM.JUSTIFYGENERAL          </description><description>58</description></item>
            <item><description>Interop.IDM.JUSTIFYLEFT             </description><description>59</description></item>
            <item><description>Interop.IDM.JUSTIFYRIGHT            </description><description>60</description></item>
            <item><description>Interop.IDM.RAISED                  </description><description>61</description></item>
            <item><description>Interop.IDM.SUNKEN                  </description><description>62</description></item>
            <item><description>Interop.IDM.UNDERLINE               </description><description>63</description></item>
            <item><description>Interop.IDM.CHISELED                </description><description>64</description></item>
            <item><description>Interop.IDM.ETCHED                  </description><description>65</description></item>
            <item><description>Interop.IDM.SHADOWED                </description><description>66</description></item>
            <item><description>Interop.IDM.FIND                    </description><description>67</description></item>
            <item><description>Interop.IDM.SHOWGRID                </description><description>69</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST0         </description><description>72</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST1         </description><description>73</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST2         </description><description>74</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST3         </description><description>75</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST4         </description><description>76</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST5         </description><description>77</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST6         </description><description>78</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST7         </description><description>79</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST8         </description><description>80</description></item>
            <item><description>Interop.IDM.OBJECTVERBLIST9         </description><description>81</description></item>
            <item><description>Interop.IDM.OBJECTVERBLISTLAST </description><description> Interop.IDM.OBJECTVERBLIST9</description></item>
            <item><description>Interop.IDM.CONVERTOBJECT       </description><description>    82</description></item>
            <item><description>Interop.IDM.CUSTOMCONTROL       </description><description>    83</description></item>
            <item><description>Interop.IDM.CUSTOMIZEITEM       </description><description>    84</description></item>
            <item><description>Interop.IDM.RENAME              </description><description>    85</description></item>
            <item><description>Interop.IDM.IMPORT              </description><description>    86</description></item>
            <item><description>Interop.IDM.NEWPAGE             </description><description>    87</description></item>
            <item><description>Interop.IDM.MOVE                </description><description>    88</description></item>
            <item><description>Interop.IDM.CANCEL              </description><description>    89</description></item>
            <item><description>Interop.IDM.FONT                </description><description>    90</description></item>
            <item><description>Interop.IDM.STRIKETHROUGH       </description><description>    91</description></item>
            <item><description>Interop.IDM.DELETEWORD          </description><description>    92</description></item>
            <item><description>Interop.IDM.EXECPRINT           </description><description>    93</description></item>
            <item><description>Interop.IDM.JUSTIFYNONE         </description><description>    94</description></item>
            <item><description>Interop.IDM.TRISTATEBOLD        </description><description>    95</description></item>
            <item><description>Interop.IDM.TRISTATEITALIC      </description><description>    96</description></item>
            <item><description>Interop.IDM.TRISTATEUNDERLINE   </description><description>    97</description></item>
            <item><description>Interop.IDM.FOLLOW_ANCHOR        </description><description>   2008</description></item>
            <item><description>Interop.IDM.INSINPUTIMAGE         </description><description>  2114</description></item>
            <item><description>Interop.IDM.INSINPUTBUTTON        </description><description>  2115</description></item>
            <item><description>Interop.IDM.INSINPUTRESET         </description><description>  2116</description></item>
            <item><description>Interop.IDM.INSINPUTSUBMIT        </description><description>  2117</description></item>
            <item><description>Interop.IDM.INSINPUTUPLOAD        </description><description>  2118</description></item>
            <item><description>Interop.IDM.INSFIELDSET           </description><description>  2119</description></item>
            <item><description>Interop.IDM.PASTEINSERT          </description><description>   2120</description></item>
            <item><description>Interop.IDM.REPLACE              </description><description>   2121</description></item>
            <item><description>Interop.IDM.EDITSOURCE           </description><description>   2122</description></item>
            <item><description>Interop.IDM.BOOKMARK             </description><description>   2123</description></item>
            <item><description>Interop.IDM.HYPERLINK            </description><description>   2124</description></item>
            <item><description>Interop.IDM.UNLINK               </description><description>   2125</description></item>
            <item><description>Interop.IDM.BROWSEMODE           </description><description>   2126</description></item>
            <item><description>Interop.IDM.EDITMODE             </description><description>   2127</description></item>
            <item><description>Interop.IDM.UNBOOKMARK           </description><description>   2128</description></item>
            <item><description>Interop.IDM.TOOLBARS             </description><description>   2130</description></item>
            <item><description>Interop.IDM.STATUSBAR            </description><description>   2131</description></item>
            <item><description>Interop.IDM.FORMATMARK           </description><description>   2132</description></item>
            <item><description>Interop.IDM.TEXTONLY             </description><description>   2133</description></item>
            <item><description>Interop.IDM.OPTIONS              </description><description>   2135</description></item>
            <item><description>Interop.IDM.FOLLOWLINKC          </description><description>   2136</description></item>
            <item><description>Interop.IDM.FOLLOWLINKN          </description><description>   2137</description></item>
            <item><description>Interop.IDM.VIEWSOURCE           </description><description>   2139</description></item>
            <item><description>Interop.IDM.ZOOMPOPUP            </description><description>   2140</description></item>
            <item><description>Interop.IDM.BASELINEFONT1       </description><description>    2141</description></item>
            <item><description>Interop.IDM.BASELINEFONT2       </description><description>    2142</description></item>
            <item><description>Interop.IDM.BASELINEFONT3       </description><description>    2143</description></item>
            <item><description>Interop.IDM.BASELINEFONT4       </description><description>    2144</description></item>
            <item><description>Interop.IDM.BASELINEFONT5       </description><description>    2145</description></item>
            <item><description>Interop.IDM.HORIZONTALLINE      </description><description>    2150</description></item>
            <item><description>Interop.IDM.LINEBREAKNORMAL     </description><description>    2151</description></item>
            <item><description>Interop.IDM.LINEBREAKLEFT       </description><description>    2152</description></item>
            <item><description>Interop.IDM.LINEBREAKRIGHT      </description><description>    2153</description></item>
            <item><description>Interop.IDM.LINEBREAKBOTH       </description><description>    2154</description></item>
            <item><description>Interop.IDM.NONBREAK            </description><description>    2155</description></item>
            <item><description>Interop.IDM.SPECIALCHAR         </description><description>    2156</description></item>
            <item><description>Interop.IDM.HTMLSOURCE          </description><description>    2157</description></item>
            <item><description>Interop.IDM.IFRAME              </description><description>    2158</description></item>
            <item><description>Interop.IDM.HTMLCONTAIN         </description><description>    2159</description></item>
            <item><description>Interop.IDM.TEXTBOX             </description><description>    2161</description></item>
            <item><description>Interop.IDM.TEXTAREA            </description><description>    2162</description></item>
            <item><description>Interop.IDM.CHECKBOX            </description><description>    2163</description></item>
            <item><description>Interop.IDM.RADIOBUTTON         </description><description>    2164</description></item>
            <item><description>Interop.IDM.DROPDOWNBOX         </description><description>    2165</description></item>
            <item><description>Interop.IDM.LISTBOX             </description><description>    2166</description></item>
            <item><description>Interop.IDM.BUTTON              </description><description>    2167</description></item>
            <item><description>Interop.IDM.IMAGE               </description><description>    2168</description></item>
            <item><description>Interop.IDM.OBJECT              </description><description>    2169</description></item>
            <item><description>Interop.IDM.1D                  </description><description>    2170</description></item>
            <item><description>Interop.IDM.IMAGEMAP            </description><description>    2171</description></item>
            <item><description>Interop.IDM.FILE                </description><description>    2172</description></item>
            <item><description>Interop.IDM.COMMENT             </description><description>    2173</description></item>
            <item><description>Interop.IDM.SCRIPT              </description><description>    2174</description></item>
            <item><description>Interop.IDM.JAVAAPPLET          </description><description>    2175</description></item>
            <item><description>Interop.IDM.PLUGIN              </description><description>    2176</description></item>
            <item><description>Interop.IDM.PAGEBREAK           </description><description>    2177</description></item>
            <item><description>Interop.IDM.HTMLAREA            </description><description>    2178</description></item>
            <item><description>Interop.IDM.PARAGRAPH           </description><description>    2180</description></item>
            <item><description>Interop.IDM.FORM                </description><description>    2181</description></item>
            <item><description>Interop.IDM.MARQUEE             </description><description>    2182</description></item>
            <item><description>Interop.IDM.LIST                </description><description>    2183</description></item>
            <item><description>Interop.IDM.ORDERLIST           </description><description>    2184</description></item>
            <item><description>Interop.IDM.UNORDERLIST         </description><description>    2185</description></item>
            <item><description>Interop.IDM.INDENT              </description><description>    2186</description></item>
            <item><description>Interop.IDM.OUTDENT             </description><description>    2187</description></item>
            <item><description>Interop.IDM.PREFORMATTED        </description><description>    2188</description></item>
            <item><description>Interop.IDM.ADDRESS             </description><description>    2189</description></item>
            <item><description>Interop.IDM.BLINK               </description><description>    2190</description></item>
            <item><description>Interop.IDM.DIV                 </description><description>    2191</description></item>
            <item><description>Interop.IDM.TABLEINSERT         </description><description>    2200</description></item>
            <item><description>Interop.IDM.RCINSERT            </description><description>    2201</description></item>
            <item><description>Interop.IDM.CELLINSERT          </description><description>    2202</description></item>
            <item><description>Interop.IDM.CAPTIONINSERT       </description><description>    2203</description></item>
            <item><description>Interop.IDM.CELLMERGE           </description><description>    2204</description></item>
            <item><description>Interop.IDM.CELLSPLIT           </description><description>    2205</description></item>
            <item><description>Interop.IDM.CELLSELECT          </description><description>    2206</description></item>
            <item><description>Interop.IDM.ROWSELECT           </description><description>    2207</description></item>
            <item><description>Interop.IDM.COLUMNSELECT        </description><description>    2208</description></item>
            <item><description>Interop.IDM.TABLESELECT         </description><description>    2209</description></item>
            <item><description>Interop.IDM.TABLEPROPERTIES     </description><description>    2210</description></item>
            <item><description>Interop.IDM.CELLPROPERTIES      </description><description>    2211</description></item>
            <item><description>Interop.IDM.ROWINSERT           </description><description>    2212</description></item>
            <item><description>Interop.IDM.COLUMNINSERT        </description><description>    2213</description></item>
            <item><description>Interop.IDM.HELP_CONTENT         </description><description>   2220</description></item>
            <item><description>Interop.IDM.HELP_ABOUT           </description><description>   2221</description></item>
            <item><description>Interop.IDM.HELP_README          </description><description>   2222</description></item>
            <item><description>Interop.IDM.REMOVEFORMAT          </description><description>  2230</description></item>
            <item><description>Interop.IDM.PAGEINFO             </description><description>   2231</description></item>
            <item><description>Interop.IDM.TELETYPE             </description><description>   2232</description></item>
            <item><description>Interop.IDM.GETBLOCKFMTS          </description><description>  2233</description></item>
            <item><description>Interop.IDM.BLOCKFMT              </description><description>  2234</description></item>
            <item><description>Interop.IDM.SHOWHIDE_CODE         </description><description>  2235</description></item>
            <item><description>Interop.IDM.TABLE                 </description><description>  2236</description></item>
            <item><description>Interop.IDM.COPYFORMAT             </description><description> 2237</description></item>
            <item><description>Interop.IDM.PASTEFORMAT         </description><description>    2238</description></item>
            <item><description>Interop.IDM.GOTO                 </description><description>   2239</description></item>
            <item><description>Interop.IDM.CHANGEFONT            </description><description>  2240</description></item>
            <item><description>Interop.IDM.CHANGEFONTSIZE        </description><description>  2241</description></item>
            <item><description>Interop.IDM.CHANGECASE            </description><description>  2246</description></item>
            <item><description>Interop.IDM.SHOWSPECIALCHAR       </description><description>  2249</description></item>
            <item><description>Interop.IDM.SUBSCRIPT             </description><description>  2247</description></item>
            <item><description>Interop.IDM.SUPERSCRIPT           </description><description>  2248</description></item>
            <item><description>Interop.IDM.CENTERALIGNPARA       </description><description>  2250</description></item>
            <item><description>Interop.IDM.LEFTALIGNPARA         </description><description>  2251</description></item>
            <item><description>Interop.IDM.RIGHTALIGNPARA        </description><description>  2252</description></item>
            <item><description>Interop.IDM.REMOVEPARAFORMAT      </description><description>  2253</description></item>
            <item><description>Interop.IDM.APPLYNORMAL           </description><description>  2254</description></item>
            <item><description>Interop.IDM.APPLYHEADING1         </description><description>  2255</description></item>
            <item><description>Interop.IDM.APPLYHEADING2         </description><description>  2256</description></item>
            <item><description>Interop.IDM.APPLYHEADING3         </description><description>  2257</description></item>
            <item><description>Interop.IDM.DOCPROPERTIES         </description><description>  2260</description></item>
            <item><description>Interop.IDM.ADDFAVORITES          </description><description>  2261</description></item>
            <item><description>Interop.IDM.COPYSHORTCUT          </description><description>  2262</description></item>
            <item><description>Interop.IDM.SAVEBACKGROUND        </description><description>  2263</description></item>
            <item><description>Interop.IDM.SETWALLPAPER          </description><description>  2264</description></item>
            <item><description>Interop.IDM.COPYBACKGROUND        </description><description>  2265</description></item>
            <item><description>Interop.IDM.CREATESHORTCUT        </description><description>  2266</description></item>
            <item><description>Interop.IDM.PAGE                  </description><description>  2267</description></item>
            <item><description>Interop.IDM.SAVETARGET            </description><description>  2268</description></item>
            <item><description>Interop.IDM.SHOWPICTURE           </description><description>  2269</description></item>
            <item><description>Interop.IDM.SAVEPICTURE           </description><description>  2270</description></item>
            <item><description>Interop.IDM.DYNSRCPLAY            </description><description>  2271</description></item>
            <item><description>Interop.IDM.DYNSRCSTOP            </description><description>  2272</description></item>
            <item><description>Interop.IDM.PRINTTARGET           </description><description>  2273</description></item>
            <item><description>Interop.IDM.IMGARTPLAY            </description><description>  2274</description></item>
            <item><description>Interop.IDM.IMGARTSTOP            </description><description>  2275</description></item>
            <item><description>Interop.IDM.IMGARTREWIND          </description><description>  2276</description></item>
            <item><description>Interop.IDM.PRINTQUERYJOBSPENDING </description><description>  2277</description></item>
            <item><description>Interop.IDM.SETDESKTOPITEM        </description><description>  2278</description></item>
            <item><description>Interop.IDM.CONTEXTMENU           </description><description>  2280</description></item>
            <item><description>Interop.IDM.GOBACKWARD            </description><description>  2282</description></item>
            <item><description>Interop.IDM.GOFORWARD             </description><description>  2283</description></item>
            <item><description>Interop.IDM.PRESTOP               </description><description>  2284</description></item>
            <item><description>Interop.IDM.MP_MYPICS             </description><description>  2287</description></item>
            <item><description>Interop.IDM.MP_EMAILPICTURE       </description><description>  2288</description></item>
            <item><description>Interop.IDM.MP_PRINTPICTURE       </description><description>  2289</description></item>
            <item><description>Interop.IDM.CREATELINK           </description><description>   2290</description></item>
            <item><description>Interop.IDM.COPYCONTENT          </description><description>   2291</description></item>
            <item><description>Interop.IDM.LANGUAGE             </description><description>   2292</description></item>
            <item><description>Interop.IDM.GETPRINTTEMPLATE    </description><description>    2295</description></item>
            <item><description>Interop.IDM.SETPRINTTEMPLATE    </description><description>    2296</description></item>
            <item><description>Interop.IDM.TEMPLATE_PAGESETUP  </description><description>    2298</description></item>
            <item><description>Interop.IDM.REFRESH              </description><description>   2300</description></item>
            <item><description>Interop.IDM.STOPDOWNLOAD         </description><description>   2301</description></item>
            <item><description>Interop.IDM.ENABLE_INTERACTION    </description><description>  2302</description></item>
            <item><description>Interop.IDM.LAUNCHDEBUGGER         </description><description> 2310</description></item>
            <item><description>Interop.IDM.BREAKATNEXT            </description><description> 2311</description></item>
            <item><description>Interop.IDM.INSINPUTHIDDEN        </description><description>  2312</description></item>
            <item><description>Interop.IDM.INSINPUTPASSWORD      </description><description>  2313</description></item>
            <item><description>Interop.IDM.OVERWRITE          </description><description>     2314</description></item>
            <item><description>Interop.IDM.PARSECOMPLETE       </description><description>    2315</description></item>
            <item><description>Interop.IDM.HTMLEDITMODE       </description><description>     2316</description></item>
            <item><description>Interop.IDM.REGISTRYREFRESH      </description><description>   2317</description></item>
            <item><description>Interop.IDM.COMPOSESETTINGS      </description><description>   2318</description></item>
            <item><description>Interop.IDM.SHOWALLTAGS           </description><description>  2327</description></item>
            <item><description>Interop.IDM.SHOWALIGNEDSITETAGS   </description><description>  2321</description></item>
            <item><description>Interop.IDM.SHOWSCRIPTTAGS        </description><description>  2322</description></item>
            <item><description>Interop.IDM.SHOWSTYLETAGS         </description><description>  2323</description></item>
            <item><description>Interop.IDM.SHOWCOMMENTTAGS       </description><description>  2324</description></item>
            <item><description>Interop.IDM.SHOWAREATAGS          </description><description>  2325</description></item>
            <item><description>Interop.IDM.SHOWUNKNOWNTAGS       </description><description>  2326</description></item>
            <item><description>Interop.IDM.SHOWMISCTAGS          </description><description>  2320</description></item>
            <item><description>Interop.IDM.SHOWZEROBORDERATDESIGNTIME  </description><description>       2328</description></item>
            <item><description>Interop.IDM.AUTODETECT         </description><description>     2329</description></item>
            <item><description>Interop.IDM.SCRIPTDEBUGGER     </description><description>     2330</description></item>
            <item><description>Interop.IDM.GETBYTESDOWNLOADED  </description><description>    2331</description></item>
            <item><description>Interop.IDM.NOACTIVATENORMALOLECONTROLS   </description><description>     2332</description></item>
            <item><description>Interop.IDM.NOACTIVATEDESIGNTIMECONTROLS  </description><description>     2333</description></item>
            <item><description>Interop.IDM.NOACTIVATEJAVAAPPLETS          </description><description>    2334</description></item>
            <item><description>Interop.IDM.NOFIXUPURLSONPASTE              </description><description>   2335</description></item>
            <item><description>Interop.IDM.EMPTYGLYPHTABLE   </description><description>      2336</description></item>
            <item><description>Interop.IDM.ADDTOGLYPHTABLE   </description><description>      2337</description></item>
            <item><description>Interop.IDM.REMOVEFROMGLYPHTABLE </description><description>   2338</description></item>
            <item><description>Interop.IDM.REPLACEGLYPHCONTENTS  </description><description>  2339</description></item>
            <item><description>Interop.IDM.SHOWWBRTAGS            </description><description> 2340</description></item>
            <item><description>Interop.IDM.PERSISTSTREAMSYNC      </description><description> 2341</description></item>
            <item><description>Interop.IDM.SETDIRTY              </description><description>  2342</description></item>
            <item><description>Interop.IDM.RUNURLSCRIPT       </description><description>     2343</description></item>
            <item><description>Interop.IDM.ZOOMRATIO          </description><description>     2344</description></item>
            <item><description>Interop.IDM.GETZOOMNUMERATOR    </description><description>    2345</description></item>
            <item><description>Interop.IDM.GETZOOMDENOMINATOR   </description><description>   2346</description></item>
            <item><description>Interop.IDM.DIRLTR                </description><description>  2350</description></item>
            <item><description>Interop.IDM.DIRRTL               </description><description>   2351</description></item>
            <item><description>Interop.IDM.BLOCKDIRLTR          </description><description>   2352</description></item>
            <item><description>Interop.IDM.BLOCKDIRRTL          </description><description>   2353</description></item>
            <item><description>Interop.IDM.INLINEDIRLTR         </description><description>   2354</description></item>
            <item><description>Interop.IDM.INLINEDIRRTL         </description><description>   2355</description></item>
            <item><description>Interop.IDM.ISTRUSTEDDLG     </description><description>       2356</description></item>
            <item><description>Interop.IDM.INSERTSPAN        </description><description>      2357</description></item>
            <item><description>Interop.IDM.LOCALIZEEDITOR     </description><description>     2358</description></item>
            <item><description>Interop.IDM.SAVEPRETRANSFORMSOURCE </description><description> 2370</description></item>
            <item><description>Interop.IDM.VIEWPRETRANSFORMSOURCE </description><description> 2371</description></item>
            <item><description>Interop.IDM.SCROLL_HERE            </description><description> 2380</description></item>
            <item><description>Interop.IDM.SCROLL_TOP             </description><description> 2381</description></item>
            <item><description>Interop.IDM.SCROLL_BOTTOM          </description><description> 2382</description></item>
            <item><description>Interop.IDM.SCROLL_PAGEUP          </description><description> 2383</description></item>
            <item><description>Interop.IDM.SCROLL_PAGEDOWN        </description><description> 2384</description></item>
            <item><description>Interop.IDM.SCROLL_UP              </description><description> 2385</description></item>
            <item><description>Interop.IDM.SCROLL_DOWN            </description><description> 2386</description></item>
            <item><description>Interop.IDM.SCROLL_LEFTEDGE        </description><description> 2387</description></item>
            <item><description>Interop.IDM.SCROLL_RIGHTEDGE       </description><description> 2388</description></item>
            <item><description>Interop.IDM.SCROLL_PAGELEFT        </description><description> 2389</description></item>
            <item><description>Interop.IDM.SCROLL_PAGERIGHT       </description><description> 2390</description></item>
            <item><description>Interop.IDM.SCROLL_LEFT            </description><description> 2391</description></item>
            <item><description>Interop.IDM.SCROLL_RIGHT           </description><description> 2392</description></item>
            <item><description>Interop.IDM.MULTIPLESELECTION      </description><description> 2393</description></item>
            <item><description>Interop.IDM.TWOD_POSITION            </description><description> 2394</description></item>
            <item><description>Interop.IDM.TWOD_ELEMENT             </description><description> 2395</description></item>
            <item><description>Interop.IDM.ONED_ELEMENT             </description><description> 2396</description></item>
            <item><description>Interop.IDM.ABSOLUTE_POSITION      </description><description> 2397</description></item>
            <item><description>Interop.IDM.LIVERESIZE             </description><description> 2398</description></item>
            <item><description>Interop.IDM.ATOMICSELECTION	</description><description>		2399</description></item>
            <item><description>Interop.IDM.AUTOURLDETECT_MODE  </description><description>    2400</description></item>
            <item><description>Interop.IDM.IE50_PASTE          </description><description>    2401</description></item>
            <item><description>Interop.IDM.IE50_PASTE_MODE      </description><description>   2402</description></item>
            <item><description>Interop.IDM.DISABLE_EDITFOCUS_UI   </description><description> 2404</description></item>
            <item><description>Interop.IDM.RESPECTVISIBILITY_INDESIGN </description><description> 2405</description></item>
            <item><description>Interop.IDM.CSSEDITING_LEVEL         </description><description>   2406</description></item>
            <item><description>Interop.IDM.UI_OUTDENT                </description><description>  2407</description></item>
            <item><description>Interop.IDM.UPDATEPAGESTATUS           </description><description> 2408</description></item>
            <item><description>Interop.IDM.IME_ENABLE_RECONVERSION	</description><description>	2409</description></item>
            <item><description>Interop.IDM.KEEPSELECTION			</description><description>	2410</description></item>
            <item><description>Interop.IDM.UNLOADDOCUMENT             </description><description> 2411</description></item>
            <item><description>Interop.IDM.OVERRIDE_CURSOR            </description><description> 2420</description></item>
            <item><description>Interop.IDM.PEERHITTESTSAMEINEDIT      </description><description> 2423</description></item>
            <item><description>Interop.IDM.TRUSTAPPCACHE              </description><description> 2425</description></item>
            <item><description>Interop.IDM.BACKGROUNDIMAGECACHE       </description><description> 2430</description></item>
            <item><description>Interop.IDM.DEFAULTBLOCK           </description><description>     6046</description></item>
            <item><description>Interop.IDM.MIMECSET__FIRST__       </description><description>    3609</description></item>
            <item><description>Interop.IDM.MIMECSET__LAST__         </description><description>   3699</description></item>
            <item><description>Interop.IDM.MENUEXT_FIRST__   </description><description>    3700</description></item>
            <item><description>Interop.IDM.MENUEXT_LAST__     </description><description>   3732</description></item>
            <item><description>Interop.IDM.MENUEXT_COUNT       </description><description>  3733</description></item>
            <item><description>Interop.IDM.OPEN                </description><description>    2000</description></item>
            <item><description>Interop.IDM.NEW                 </description><description>    2001</description></item>
            <item><description>Interop.IDM.SAVE                </description><description>    70</description></item>
            <item><description>Interop.IDM.SAVEAS              </description><description>    71</description></item>
            <item><description>Interop.IDM.SAVECOPYAS          </description><description>    2002</description></item>
            <item><description>Interop.IDM.PRINTPREVIEW        </description><description>    2003</description></item>
            <item><description>Interop.IDM.SHOWPRINT           </description><description>    2010</description></item>
            <item><description>Interop.IDM.SHOWPAGESETUP       </description><description>    2011</description></item>
            <item><description>Interop.IDM.PRINT               </description><description>    27</description></item>
            <item><description>Interop.IDM.PAGESETUP           </description><description>    2004</description></item>
            <item><description>Interop.IDM.SPELL               </description><description>    2005</description></item>
            <item><description>Interop.IDM.PASTESPECIAL        </description><description>    2006</description></item>
            <item><description>Interop.IDM.CLEARSELECTION      </description><description>    2007</description></item>
            <item><description>Interop.IDM.PROPERTIES          </description><description>    28</description></item>
            <item><description>Interop.IDM.REDO                </description><description>    29</description></item>
            <item><description>Interop.IDM.UNDO                </description><description>    43</description></item>
            <item><description>Interop.IDM.SELECTALL           </description><description>    31</description></item>
            <item><description>Interop.IDM.ZOOMPERCENT         </description><description>    50</description></item>
            <item><description>Interop.IDM.GETZOOM             </description><description>    68</description></item>
            <item><description>Interop.IDM.STOP                </description><description>    2138</description></item>
            <item><description>Interop.IDM.COPY                </description><description>    15</description></item>
            <item><description>Interop.IDM.CUT                 </description><description>    16</description></item>
            <item><description>Interop.IDM.PASTE               </description><description>    26</description></item>
            <item><description>Interop.IDM.PERSISTDEFAULTVALUES </description><description> 7100</description></item>
            <item><description>Interop.IDM.PROTECTMETATAGS </description><description>  7101</description></item>
            <item><description>Interop.IDM.PRESERVEUNDOALWAYS </description><description> 6049</description></item>
            </list>
            Note: The appereance in this list does not mean that a particular command works either in NetRix or
            MSHTML. Additionally, some commands expect parameters which are currently not supported by this
            method.
            </remarks>
            <param name="command">The IDM command ID sent to the control.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetElementsByTagName(System.String)">
            <summary>
            Returns an array of element objects which contains all element with the given tag name. 
            </summary>
            <remarks>
            If no such elements the method will return null.
            </remarks>
            <param name="tagName">The name of the specific tag which the method should search.</param>
            <returns>The <see cref="T:GuruComponents.Netrix.WebEditing.Elements.ElementCollection"/> of <see cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement"/> objects or null, if no elements found.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetElementById(System.String)">
            <summary>
            Returns the element with the given Id as native element object.
            </summary>
            <param name="Id">The ID value which the method should search for.</param>
            <returns>The element, if found or <c>null</c>, if there is no such element.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetAllElements">
            <summary>
            Returns all element of the current page.
            </summary>
            <returns>The collection of all elements.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetBodyElement">
            <summary>
            Returns the current BodyElement object from the document.
            </summary>
            <returns>BodyElement, if any or null if no body is present or document is not ready.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.VerticalScrollPosition">
            <summary>
            Gets the vertical scroll position.
            </summary>
            <remarks>
            The vertical scroll position is the distance from the document top
            to the current visible top border, measured in pixel. If the scrollbar is
            at the top position, this value is 0.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.HorizontalScrollPosition">
            <summary>
            Gets the horizontal scroll position. 
            </summary>
            <remarks>
            The horizontal scroll position is the distance from the document left
            to the current visible left border, measured in pixel. If the scrollbar is
            at the left position, this value is 0.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.ActivationEnabled">
            <summary>
            Gets/Sets if the control can receive the focus.
            </summary>
            <remarks>
            The purpose of the property is to temporarily hook of the control from the
            TAB list of controls.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.IsReady">
            <summary>
            Indicates if the control is ready for use.
            </summary>
            <remarks>
            <para>
            If the document was a frameset, the complete handling is done in HtmlFrameSet class. This
            class can set the IsReady property exclusivly to true, if the frame document is ready.
            This assures that subsequent calls / events used from the base classes, like <see cref="P:GuruComponents.Netrix.IHtmlEditor.Selection"/>
            work properly as they normally throw exceptions if methods are called for an unready document.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.IsDirty">
            <summary>
            Indicates if the contents of the editor have been modified.
            </summary>
            <remarks>
            This flag is set to <c>false</c> after a document or document fragment wss loaded. It becomes
            <c>true</c> after the first change in the documents structure or content. Moving the caret or
            clicking objects without moving them wil not set the flag to dirty state.
            <para>
            The flag will be reset on each save operation. This is done by calling the RawHtml content by
            any of the methods 
            <see cref="M:GuruComponents.Netrix.IHtmlEditor.SaveHtml(System.IO.Stream)">SaveHtml</see> or 
            <see cref="M:GuruComponents.Netrix.IHtmlEditor.SaveFormattedHtml(System.IO.Stream)">SaveFormattedHtml</see>. Whereas the
            SaveXXX methods really write content into a stream the 
            <see cref="M:GuruComponents.Netrix.IHtmlEditor.GetRawHtml">GetRawHtml</see> or
            <see cref="M:GuruComponents.Netrix.IHtmlEditor.GetFormattedHtml(GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions)">GetFormattedHtml</see>, 
            method just returns the content to the caller. Both method are overloaded and provide a second
            parameter to force resetting the dirty flag. If this is done the host application should assure that the
            content is really saved, to keep the flag and the UI synchronized.        
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.InternalShortcutKeys">
            <summary>
            Activates or deactivates the internal shortcut keys.
            </summary>
            <remarks>
            If the property is on (default), the following keys are static assigned:
            <list type="table">
            <listheader>
            <item>Key</item><item>Description</item><item>Design Mode Only</item>
            </listheader>
            <item>Ctrl-A</item><item>Select all</item><item>-</item>
            <item>Ctrl-C</item><item>Copy selected text</item><item>-</item>
            <item>Ctrl-P</item><item>Print immediately using internal dialogs.</item><item>-</item>
            <item>Ctrl-U</item><item>Underline</item><item>+</item>
            <item>Ctrl-B</item><item>Bold</item><item>+</item>
            <item>Ctrl-I</item><item>Italic</item><item>+</item>
            <item>Ctrl-L</item><item>Align Left (Block only)</item><item>+</item>
            <item>Ctrl-R</item><item>Align Right (Block only)</item><item>+</item>
            <item>Ctrl-J</item><item>Justify (Multiline Block only)</item><item>+</item>
            <item>Ctrl-V</item><item>Paste</item><item>+</item>
            <item>Ctrl-X</item><item>Cut</item><item>+</item>
            <item>Ctrl-Y</item><item>Redo</item><item>+</item>
            <item>Ctrl-Z</item><item>Undo</item><item>+</item>
            </list>
            The property can be turned on and off during run time and will become active
            immediately. 
            <para>
            To strip out specific keys you can handle the 
            <see cref="E:GuruComponents.Netrix.IHtmlEditor.BeforeShortcut">BeforeShortcut</see> event
            and set the <c>Cancel</c> property to true to disable the internal key handling. The same
            event can be used to assign more Shortcut keys in your application, because the event
            is fired on every kex in combination with the Ctrl (Control) key, even if the key stroke
            is not handled elsewhere.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Encoding">
            <summary>
            The encoding of the document.
            </summary>
            <remarks>
            The encoding can be changed during design time to change the document encoding with next save operation.
            </remarks>
            <example>
            Changing the encoding is very easy. The following line will set the encoding for all following save operations to UTF-8:
            <code>
            this.htmlEditor1.Encoding = System.Text.Encoding.UTF8;
            </code>
            If you load a text from a string with non-Ascii characters the automatic encoding recognition needs
            to knwo which culture should be used. Therefore it is important to set the CurrentCulture property of
            the current thread correctly. Even if the most systems run correctly it is recommended to set the 
            current culture in all environments to a specific value.
            </example>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.ScriptEnabled">
            <summary>
            Does not execute any script until fully activated. Browse Mode only.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.ScrollBarsEnabled">
            <summary>
            Enables or disables scrollbars.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetFullPathUrl">
            <summary>
            Gets the full decoded path to the file this document is load locally from.
            </summary>
            <remarks>
            This can be an URL, but under most circumstances this may be a Path. Any monikers of type "file://" are removed.
            </remarks>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Border3d">
            <summary>
            Show component borders in 3D style.
            </summary>
            <remarks>
            The default is true (3D style used). Changing this property requieres re-load.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.XPTheming">
            <summary>
            Controls the way the component renders themeable controls.
            </summary>
            <remarks>
            Buttons, Select boxes and other form elements can be rendered during
            design time using XP themes, if the application runs on XP. If the designer
            is used to design pages which run later on other operating systems,
            it is recommended to switch theming support of.
            <para>
            The default value is <c>true</c> (Theming is on).
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.BlockDefault">
            <summary>
            Sets how paragraphs will be inserted, DIV or P tags.
            </summary>
            <remarks>
            <seealso cref="T:GuruComponents.Netrix.BlockDefaultType"/>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.AllowInPlaceNavigation">
            <summary>
            Set the behavior of links in browse mode.
            </summary>
            <remarks>
            If this property is set to <c>true</c> an the user clicks a link in browse mode the new page
            will load internally and replace the current page. If set to <c>false</c> the link will start
            a new instance of Internet Explorer (or the systems default browser) and opens the link 
            externally. Any further navigation operations are no longer under the control of NetRix.
            <para>
            This option is not recognized in design mode.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.IsFullDocumentMode">
            <summary>
            Gets or sets a value to determine full document mode.
            </summary>
            <remarks>
            The full document mode forces the basic structure of the loaded HTML document to 
            this one:
            <code>
            &lt;html&gt;
            &lt;body&gt;
              &lt;!-- your HTML fragment goes here --&gt;
            &lt;/body&gt;
            &lt;/html&gt;
            </code>
            To avoid this behavior just set this property to <c>false</c> and reload the document.
            <para>
            Changing this property during an editing session will not be recognized.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CanCopy">
            <summary>
            Indicates if the current selection can be copied.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CanCut">
            <summary>
            Indicates if the current selection can be cut.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CanPaste">
            <summary>
            Indicates if the current selection can be pasted to.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CanDelete">
            <summary>
            Indicates if the current selection can be deleted.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CanRedo">
            <summary>
            Indicates if the editor can redo.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CanUndo">
            <summary>
            Indicates if the editor can undo.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Copy">
            <summary>
            Copy the current selection.
            </summary>
            <remarks>
            The command does nothing if the <see cref="P:GuruComponents.Netrix.IHtmlEditor.CanCopy"/> property returns false.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Cut">
            <summary>
            Cut the current selection
            </summary>
            <remarks>
            The command does nothing if the <see cref="P:GuruComponents.Netrix.IHtmlEditor.CanCut"/> property returns false.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Paste">
            <summary>
            Cut the current selection.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Delete">
            <summary>
            Delete the current selection.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.FlatScrollBars">
            <summary>
            Shows flat or normal themed scrollbars
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Replace(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Searches and replaces a string.
            </summary>
            <param name="searchString">String to search for</param>
            <param name="replaceString">String to replace with</param>
            <param name="matchCase">true if case sensitive</param>
            <param name="wholeWord">true if only whole words (search string matches word boundaries) found</param>
            <param name="searchUp">true if search upwards, false otherwise</param>
            <returns>Number of replaces</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Replace(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Searches and replaces a string.
            </summary>
            <param name="searchString">String to search for</param>
            <param name="replaceString">String to replace with</param>
            <param name="matchCase">true if case sensitive</param>
            <param name="wholeWord">true if only whole words (search string matches word boundaries) found</param>
            <param name="searchUp">true if search upwards, false otherwise</param>
            <param name="maxReplacements">Maximum number of replacments.</param>
            <returns>Number of replaces</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ReplaceSelection(System.String)">
            <summary>
            Replaces the current selection with a new string.
            </summary>
            <remarks>The string can have any length. An empty string is allowed.
            The method will do nothing if there is no valid text selection. 
            <para>
            If the selection contains tags or block elements they will be replaced, too. If this results in invalid HTML 
            the method can fire an exception or produce unpredictable results. It is strongly recommended to read
            <see cref="P:GuruComponents.Netrix.ISelection.Text"/> and <see cref="P:GuruComponents.Netrix.ISelection.Html"/> to
            see the current content of the selection and start replacement only if applicable.
            </para>
            </remarks>
            <param name="replaceString">The string which replaces the current selection.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ReplaceNext(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Replaces the next occurence of the give string.</summary>
            <remarks>
            This method does not fire any events. After the replacement takes place the method ends. There is no information
            whether the replacement was successful. The purpose of this method is to interact with <see cref="M:GuruComponents.Netrix.IHtmlEditor.Find(System.String,System.Boolean,System.Boolean,System.Boolean)"/>.
            </remarks>
            <param name="searchString">String to search for</param>
            <param name="replaceString">String to replace with</param>
            <param name="matchCase">true if case sensitive</param>
            <param name="wholeWord">true if only whole words (search string matches word boundaries) found</param>
            <param name="backwards">true if search upwards, false otherwise</param>
            <returns>Number of replaces</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Find(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Searches for a text string in the whole document.
            </summary>
            <remarks>
            Searches document for a given string and, if the string was found, returns true. The search stops at the first 
            hit and starts from the last stop. Subsequent calls jump from hit to hit. The document will automatically 
            scroll to the marked position.
            </remarks>
            <example>
            The following code assumes that you have a dialog created which provides the following properties:
            <list type="bullet">
            <item>
                <term>WithReplace</term>
                <description>A boolean value (supported by a checkbox) which turn replacement on.</description>
            </item>
            <item>
                <term>Search</term>
                <description>A string value (supported by a textbox) which returns the phrase we're searching for.</description>
            </item>
            <item>
                <term>Replace</term>
                <description>A string value (supported by a textbox) which returns the characters we use for replacement.</description>
            </item>
            <item>
                <term>Match</term>
                <description>A boolean value (supported by a checkbox) which indicates that the search is case sensitive.</description>
            </item>
            <item>
                <term>Word</term>
                <description>A boolean value (supported by a checkbox) which delimites the search to whole words.</description>
            </item>
            <item>
                <term>Up</term>
                <description>A boolean value (supported by a checkbox). The search runs upwards if turned on.</description>
            </item>
            </list>
            <code>
            if (SearchReplaceDialog.ShowDialog() == DialogResult.OK)
            {        
                if (SearchReplaceDialog.WithReplace)
                {
                    int c = this.htmlEditor1.Replace(SearchReplaceDialog.Search, SearchReplaceDialog.Replace, SearchReplaceDialog.Match, SearchReplaceDialog.Word, SearchReplaceDialog.Up);
                    MessageBox.Show(c.ToString() + " strings found and replaced");
                } 
                else 
                {
                    bool r = this.htmlEditor1.Find(SearchReplaceDialog.Search, SearchReplaceDialog.Match, SearchReplaceDialog.Word, SearchReplaceDialog.Up);
                    if (!r)
                    {
                        MessageBox.Show("String '"+SearchReplaceDialog.Search+"' not found");
                    }
                }
            }
            </code>
            </example>
            <param name="searchString">A string to search for.</param>
            <param name="matchCase">Must be set to <c>true</c> if match case is required.</param>
            <param name="wholeWord">Must set to <c>true</c> if only whole words should be found.</param>
            <param name="searchUp">Must set to <c>true</c> to search backwards.</param>
            <returns>Returns <c>true</c> if something was found, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Url">
            <summary>
            Gets the url of the document contained in the control.
            </summary>
            <remarks>
            If there is no path defined, the property returns <c>null</c>.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.TempFile">
            <summary>
            Returns the currently used temporary file, if any.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ClearDirtyState">
            <summary>
            Reset the dirty state flag to inform the control that the current state is
            used as unchanged state.</summary>
            <remarks>This may result in removing the Undo history under some circumstances.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SetAuthentication(System.String,System.String)">
            <summary>
            Sets username and password four silent authentication on protected sites.
            </summary>
            <remarks>
            If these parameters are set the control tries to authenticate using these
            values if a site requests authentication. This in fact suppresses the 
            typical authentication dialog. After changing the values it is necessary to
            call LoadHtml or LoadUrl again.
            </remarks>
            <param name="userName">The username the control should send on request.</param>
            <param name="passWord">The password the control should send on request.</param>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.UserAgent">
            <summary>
            User Agent string used to identify the control when browsing the web.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ClearAuthenticationCache">
            <overloads>There are two overloads of this method.</overloads>
            <summary>
            This method resets the current credentials applied to the control.
            </summary>
            <remarks>
            After successfull authentication to a secure site the control will reuse the 
            credentials on any further access. To avoid this and to re-force the authentication,
            a call to this method is applicable. Calling this method will not reset the
            username and password set with <see cref="M:GuruComponents.Netrix.IHtmlEditor.SetAuthentication(System.String,System.String)">SetAuthentication</see>.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ClearAuthenticationCache(System.Boolean)">
            <summary>
            This method resets the current credentials applied to the control and remove the username and password.
            </summary>
            <remarks>
            After successfull authentication to a secure site the control will reuse the 
            credentials on any further access. To avoid this and to re-force the authentication,
            a call to this method is applicable. Calling this method will clear the
            username and password set with <see cref="M:GuruComponents.Netrix.IHtmlEditor.SetAuthentication(System.String,System.String)">SetAuthentication</see>.
            Further calls to a protected site will always fail if no new username and password beeing set before.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetRawHtml">
            <overloads>This method has two overloads.</overloads>
            <summary>
            Retrieves the HTML contained in control to a string and return it.
            </summary>
            <remarks>
            The content is unchanged "as is" the MSHTML control provides it. 
            <para>
            This method returns always the content of the base document. In case of a framed document this is the
            document containing the frameset definitions. The host application must use the HtmlFrameSet and 
            related objects to call the save methods there to save the content of each frame document separatly.
            </para>
            </remarks>
            <returns>The HTML in the control</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetRawHtml(System.Boolean)">
            <summary>
            Retrieves the HTML contained in control to a string and return it.
            </summary>
            <remarks>
            The content is unchanged "as is" the MSHTML control provides it. 
            <para>
            This method returns always the content of the base document. In case of a framed document this is the
            document containing the frameset definitions. The host application must use the HtmlFrameSet and 
            related objects to call the save methods there to save the content of each frame document separatly.
            </para>
            </remarks>
            <param name="ClearDirty">If set to true the call of this method will reset the <see cref="P:GuruComponents.Netrix.IHtmlEditor.IsDirty">IsDirty</see> flag.</param>
            <returns>The HTML in the control</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetRawHtml(System.Boolean,System.Boolean)">
            <summary>
            Retrieves the HTML contained in control to a string and return it.
            </summary>
            <remarks>
            The content is unchanged "as is" the MSHTML control provides it. 
            <para>
            This method returns always the content of the base document. In case of a framed document this is the
            document containing the frameset definitions. The host application must use the HtmlFrameSet and 
            related objects to call the save methods there to save the content of each frame document separatly.
            </para>
            </remarks>
            <param name="ClearDirty">If set to true the call of this method will reset the <see cref="P:GuruComponents.Netrix.IHtmlEditor.IsDirty">IsDirty</see> flag.</param>
            <param name="fromActiveFrame">If set to <c>true</c>, the currently active frame is the source, otherwise the frame definition document. This parameter is ignored, if the document has no frames.</param>
            <returns>The HTML in the control</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetFormattedHtml">
            <summary>
            Returns a well formatted representation of the current document.
            </summary>
            <remarks>Uses the default formatter, see <see cref="P:GuruComponents.Netrix.IHtmlEditor.HtmlFormatterOptions"/></remarks>
            <exception cref="T:System.ArgumentException">Thrown if either the indent size or max line length is less than 0.</exception>
            <returns>Returns the formatted string.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetFormattedHtml(GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions)">
            <summary>
            Returns a well formatted representation of the current document.
            </summary>
            <param name="fo"><see cref="T:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions"/> for formatting this streams content.</param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetFormattedHtml(GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions,System.Boolean)">
            <summary>
            Returns a well formatted representation of the current document.
            </summary>
            <param name="fo"><see cref="T:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions"/> for formatting this streams content.</param>
            <returns></returns>
            <param name="ClearDirty">Resets the dirty flag or prevent this.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetFormattedHtml(GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions,System.Boolean,System.Boolean)">
            <summary>
            Returns a well formatted representation of the current document.
            </summary>
            <param name="fo">See <see cref="T:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions"/> for formatting this streams content.</param>
            <param name="ClearDirty">If set to true the call of this method will reset the <see cref="P:GuruComponents.Netrix.IHtmlEditor.IsDirty">IsDirty</see> flag.</param>
            <returns></returns>
            <param name="fromActiveFrame"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveFile">
            <summary>
            Saves the content as a file to the location the content was previously loaded from.
            </summary>
            <remarks>
            The method checks whether the file already exists and tries to create the file if it does not exist. The name of
            the <see cref="P:GuruComponents.Netrix.IHtmlEditor.Url"/> method is used as a file name. If the path does not point to a filesystem with write 
            permissions an exception occurs.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveFile(System.String)">
            <summary>
            Save the current content into a file.
            </summary>
            <remarks>
            This method saves the "raw" content which consists of unformatted HTML. 
            This method requires Write access to the file. The file will be created if it doesn't exists.
            <para>
            The method checks whether the file already exists and tries to create the file if it does not exist. The name of
            the <see cref="P:GuruComponents.Netrix.IHtmlEditor.Url"/> method is used as a file name. If the path does not point to a filesystem with write 
            permissions an exception occurs.
            </para>
            </remarks>
            <param name="fileName">The filename optionally including the full path.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveFile(System.IO.Stream)">
            <summary>
            Saves the current "raw" content into a stream. The stream is not closed and remains open.
            </summary>
            <param name="stream">The stream the content is written into.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveHtml(System.IO.Stream)">
            <summary>
            Saves the HTML contained in the control to a stream.
            </summary>
            <remarks>
            Throws an <exception cref="T:System.ArgumentNullException"/> if the parameter is <c>null</c>.
            Uses the global Encoding property for document encoding.
            </remarks>
            <param name="stream"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveFormattedHtml(System.IO.Stream)">
            <summary>
            Saves the HTML contained in the control to a stream using the default formatter.
            </summary>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.HtmlFormatterOptions"/>
            <param name="stream"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveFormattedHtml(System.IO.Stream,GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions)">
            <summary>
            Saves the HTML contained in the control to a stream.
            </summary>
            <remarks>
            Throws an <exception cref="T:System.ArgumentNullException"/> if the parameter is <c>null</c>.
            Uses the global Encoding property for document encoding.
            Another method uses the <see cref="M:GuruComponents.Netrix.IHtmlEditor.GetRawHtml">GetRawHtml</see> or <see cref="M:GuruComponents.Netrix.IHtmlEditor.GetFormattedHtml(GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions)">GetFormattedHtml</see> 
            methods, which return content of the editor as string. It is up to the host application to use the common .NET file classes to save the content.
            The class <see cref="T:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions">HtmlFormatterOptions</see> provides a way to control the beautifier and formatter. The various properties are:
            <list type="bullet">
                <item>IndentChar</item>
                <item>IndentSize</item>
                <item>MaxLineLength</item>
                <item>AsXhtml</item>
                <item>ElementCasing</item>
                <item>AttributeCasing</item>
            </list>
            <para>
            Note: Both save methods throw an <see cref="T:System.ArgumentNullException">ArgumentNullException</see> if the stream parameter is null. If it is possible that the stream is null under some circumstances, we should put a try/catch block around the call.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.HtmlFormatterOptions">HtmlFormatterOptions</seealso>
            </remarks>       
            <exception cref="T:System.ArgumentNullException">Fired if stream parameter is <c>null</c>.</exception>
            <example>
            Assuming a menu exists and a menu item fires a click event, the following event handler will save the content of the base document to file in well formatted XHTML compatible format.
            <code>
            private void menuItem_Click(object sender, System.EventArgs e)
            {
                // Build Formatting Options in variable fo here
                if (this.saveFileDialog1.ShowDialog() == DialogResult.OK)
                {
                    string fileName = this.saveFileDialog1.FileName;
                    FileStream fs = new FileStream(fileName, FileMode.Create);
                    this.htmlEditor1.SaveFormattedHtml(fs, fo);
                    fs.Close();
                }
            }
            </code>
            </example> 
            <param name="stream"></param>
            <param name="fo"> for formatting this streams content.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveMht(System.String)">
            <overloads>This method has three overloads.</overloads>
            <summary>
            Saves the previously loaded content as MHTML stream.
            </summary>
            <remarks>
            If the file does not exist the method will create it. If the file exists the method will overwrite
            it. 
            <para>
            The main idea of the MHTML standard is that you send a HTML document, together with in-line graphics, 
            applets, etc., and also other linked documents if you so wish, in a MIME multipart/related body part.
            The content of the HTML part is coded in quoted printable format. The images and binary objects are
            coded in Base64, always chunked in segments to 76 characters per line.
            </para>
            <para>
            The IE can save and view MHTML. The preferred extension is MHT. NetRix works similiar to the basic
            MHTML save routine, but does not use the internal interfaces. 
            </para>
            <para>
            <b>Attention:</b> The method returns the content as it if was loaded the first time. ANY CHANGE DURING DESIGNTIME IS
            NOT RECOGNIZED. To save the current content the host application MUST save and reload the content AND
            wait for the next ReadyStateComplete event before this method can work properly.
            </para>
            <para>
            <b>Know  Issues:</b> This method is EXPERIMENTAL. It does not save frames properly and it does not handle
            local absolute paths correctly.
            </para>
            </remarks>
            <param name="fileName">The full path the content is saved into.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveMht(System.IO.Stream)">
            <summary>
            Saves the previously loaded content as MHTML stream.
            </summary>
            <remarks>
            If the file does not exist the method will create it. If the file exists the method will overwrite
            it. 
            <para>
            The main idea of the MHTML standard is that you send a HTML document, together with in-line graphics, 
            applets, etc., and also other linked documents if you so wish, in a MIME multipart/related body part.
            The content of the HTML part is coded in quoted printable format. The images and binary objects are
            coded in Base64, always chunked in segments to 76 characters per line.
            </para>
            <para>
            The IE can save and view MHTML. The preferred extension is MHT. NetRix works similiar to the basic
            MHTML save routine, but does not use the internal interfaces. 
            </para>
            <para>
            The method fails if the document is not ready yet.
            </para>
            <para>
            <b>Attention:</b> The method returns the content as it if was loaded the first time. ANY CHANGE DURING DESIGNTIME IS
            NOT RECOGNIZED. To save the current content the host application MUST save and reload the content AND
            wait for the next ReadyStateComplete event before this method can work properly.
            </para>
            <para>
            <b>Know  Issues:</b> This method is EXPERIMENTAL. It does not save frames properly and it does not handle
            local absolute paths correctly.
            </para>
            </remarks>
            <param name="fileStream">A stream (primarily a FileStream) to which the content is saved.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.SaveMht">
            <summary>
            Saves the previously loaded content as MHTML string.
            </summary>
            <remarks>
            Be aware that the string contains the page and all embedded resources as one block of coded data.
            This is approximatly 33% more than the sum of all file sizes (due to the Base64 coding). A normal
            page can produce a huge string and the processing may take a while.
            <para>
            The main idea of the MHTML standard is that you send a HTML document, together with in-line graphics, 
            applets, etc., and also other linked documents if you so wish, in a MIME multipart/related body part.
            The content of the HTML part is coded in quoted printable format. The images and binary objects are
            coded in Base64, always chunked in segments to 76 characters per line.
            </para>
            <para>
            The IE can save and view MHTML. The preferred extension is MHT. NetRix works similiar to the basic
            MHTML save routine, but does not use the internal interfaces. 
            </para>
            <para>
            <b>Attention:</b> The method returns the content as it if was loaded the first time. ANY CHANGE DURING DESIGNTIME IS
            NOT RECOGNIZED. To save the current content the host application MUST save and reload the content AND
            wait for the next ReadyStateComplete event before this method can work properly.
            </para>
            <para>
            <b>Know  Issues:</b> This method is EXPERIMENTAL. It does not save frames properly and it does not handle
            local absolute paths correctly.
            </para>
            </remarks>
            <returns>The string to which the content was written or <c>null</c>, if there is no content or the document is not ready.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CanBuildMht">
            <summary>
            Forces the file loader to prepare the content as MHT which could be save later.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.CanSaveMht">
            <summary>
            Checks whether or not we have MHT loaded and available for save to string or file.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.AddEditDesigner(System.Object)">
            <summary>
            Add a external designer to the designer chain. 
            </summary>
            <remarks>
            This is done by the various PlugIns the control accepts.
            </remarks>
            <param name="designer">The object being attached must implement IHTMLEditDesigner directly or indirectly.</param>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.DocumentDom">
            <summary>
            Returns the DOM (document object model) of the current loaded document.
            </summary>
            <remarks>
            The property may return <c>null</c> (<c>Nothing</c> in Visual Basic) if the document is 
            either not ready or doesn't contain a HTML element.
            <para>
            After first call the reference to the object is being cached, so a direct and extensive access
            using this property does not cause a performance flaw. Any LoadXXX method will reset cache
            and the first subsequent call will recreate the new document structure. Changes to the
            document are reflected synchrounously.
            </para>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Elements.IElementDom">ElementDom interface</seealso>.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetXmlDocument">
            <overloads/>
            <summary>
            Returns the current document as <see cref="T:System.Xml.XmlDocument"/> formatted object.
            </summary>
            <remarks>
            This method should be
            covered by a try/catch structure because it rethrows internal exceptions occuring during the parse process.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetXmlDocument(System.Boolean)">
            <overloads/>
            <summary>
            Returns the current document as <see cref="T:System.Xml.XmlDocument"/> formatted object.
            </summary>
            <remarks>
            This method should be
            covered by a try/catch structure because it rethrows internal exceptions occuring during the parse process.
            </remarks>
            <param name="AddXmlDeclaration">
            If <c>true</c> the module tries to add the &lt;?xml version="1.0" ?&gt; declaration in front of the document.
            </param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetXmlDocument(System.Boolean,System.Boolean)">
            <summary>
            Returns the current document as <see cref="T:System.Xml.XmlDocument"/> formatted object.
            </summary>
            <remarks>
            This method should be
            covered by a try/catch structure because it rethrows internal exceptions occuring during the parse process.
            </remarks>
            <param name="AddXmlDeclaration">
            If <c>true</c> the module tries to add the &lt;?xml version="1.0" ?&gt; declaration in front of the document.
            </param>
            <param name="fromActiveFrame"><c>True</c> if content is read from active frame, otherwise the content of the frame definition file is read.</param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ReLoadHtml(System.String)">
            <summary>
            This method replaces the content of the whole designer.
            </summary>
            <remarks>
            The relation to the previously loaded URL or filename is left untouched. The content is also
            beeing rewritten to the file and reloaded from that location. This assures that the paths to 
            relative embedded objects are still valid.
            <seealso cref="M:GuruComponents.Netrix.IHtmlEditor.ReLoadHtml(System.String)">ReLoadHtml</seealso>
            </remarks>
            <param name="content">Content which replaces the current content</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ReLoadUrl(System.String,System.Boolean)">
            <overloads>This method has to overloads.</overloads>
            <summary>
            This method replaces the content of the whole designer.
            </summary>
            <remarks>
            This is the preferred methos to refresh the
            content. If the content was externally changed, it is necessary to save the content before the reload
            takes place. If saving is not done, the old content will replace all changes.
            <para>
            It is up to the host application to decide where to save the content. If the parameter <c>saveContent</c>
            is set to <c>true</c>, the component will save the content internally and overwrite the original file without
            further questions.
            </para>
            </remarks>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the path is not valid or not a file.</exception>
            <param name="content">Content which replaces the current content</param>
            <param name="saveContent">If <c>true</c>, the component will save the the current content to 
            file and reload from file then. If <c>false</c> the component will load the last not saved content from 
            the related URL. This means, that any unsaved content will be lost. There is no UNDO on this action available.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.ReLoadUrl(System.Boolean)">
            <summary>
            This method simply refreshes the content to rebuild all relations, like linked stylesheets.
            </summary>
            <remarks>
            A call to this method can force the save operation on request. 
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.LoadUrl(System.String)">
            <summary>
            Loads HTML content from a URL or local path.
            </summary>
            <remarks>
            This is the preferred load method. It can take HTML content from the following sources:
            <list type="bullet">
                <item>A locally stored file</item>
                <item>An URL, with the leading "http://" (required)</item>
            </list>
            The method will fire the <see cref="E:GuruComponents.Netrix.IHtmlEditor.Loading">Loading</see> before
            the load process starts, but not when the URL or filename was not accepted. This can be used to check
            the processing, e.g. if the event does not fire the URL is wrong or the filename was not found. 
            If the processing is done the <see cref="E:GuruComponents.Netrix.IHtmlEditor.Loaded">Loaded</see> event
            will fired. Remember that the next editing command MUST wait until the
            <see cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete">ReadyStateComplete</see> was fired, which
            takes a bit more time used by the control to render and display of the content.
            <para>
            Use <see cref="M:GuruComponents.Netrix.IHtmlEditor.LoadHtml(System.String)">LoadHtml</see> to load memory based strings only.
            </para>
            <para>
            If MSHTML has not yet been created, the loading is postponed until MSHTML has been created.
            The method uses internally IMoniker to set the current base path to resolve relative paths
            in src and href attributes without changing the parameters.
            </para>
            </remarks>
            <example>
            The following example shows how to load a file into NetRix using a menu entry event handler. The
            code assumes that a main menu extists with a entry <c>menuItem</c> in it and a event handler
            <c>menuItem_Click</c> attached to the Click event.
            <code>
            private void menuItem_Click(object sender, System.EventArgs e)
            {
               if (this.openFileDialog1.ShowDialog() == DialogResult.OK)
               {
                  string fileName = this.openFileDialog1.FileName;
                  if (File.Exists(fileName))
                  {
                     this.htmlEditor1.LoadUrl(this.openFileDialog1.FileName);
                  }
               }
            }
            </code>
            If is recommended to check whether the file exists. However, the method will not throw an exception
            but ignores the command, which makes it impossible to inform the user that the action fails. 
            <para>
            From build 1015 on the control accepts SSL protected connections too.
            </para>
            </example>
            <param name="url">URL (http://any.domain.com/file.html) or file (C:\whatever\path\file.html) to load from.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.LoadFile(System.String)">
            <summary>
            Loads a local file into the control.
            </summary>
            <remarks>
            This method is simply a wrapper for <see cref="M:GuruComponents.Netrix.IHtmlEditor.LoadUrl(System.String)"/>. It checks the existence of the file on the local system
            and loads it if possible. 
            </remarks>
            <exception cref="T:System.IO.FileNotFoundException">Fires this exception if the file was not found.</exception>
            <param name="fileName"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.LoadDocx(System.String)">
            <summary>
            Load a DOCX document into the editor. EXPERIMENTAL.
            </summary>
            <remarks>
            The document is read, unpacked, transformed and loaded as string into HTML. The control exposes and writes content back as HTML.
            <para>
            Some features are not properly supported. EXPERIMENTAL.
            </para>
            </remarks>
            <param name="filePath"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.LoadHtml(System.IO.FileStream)">
            <overloads>This method has three overloads.</overloads>
            <summary>
            Loads HTML content from a stream into this control.
            </summary>
            <remarks>
            It is recommended to use a <see cref="T:System.IO.FileStream">FileStream</see> for that procedure, because
            internally the name is extracted from the file name of the underlying stream. Otherwise any stream is
            possible which can be used with the <see cref="T:System.IO.StreamReader">StreamReader</see> class.
            The method will fire the <see cref="E:GuruComponents.Netrix.IHtmlEditor.Loading">Loading</see> before
            the load process starts, but not when the URL or filename was not accepted. This can be used to check
            the processing, e.g. if the event does not fire the URL is wrong or the filename was not found. 
            If the processing is done the <see cref="E:GuruComponents.Netrix.IHtmlEditor.Loaded">Loaded</see> event
            will fired. Remember that the next editing command MUST wait until the
            <see cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete">ReadyStateComplete</see> was fired, which
            takes a bit more time used by the control to render and display of the content.
            <para>
            If MSHTML has not yet been created, the loading is postponed until MSHTML has been created.
            The method uses internally IMoniker to set the current base path to resolve relative paths
            in src and href attributes without changing the parameters.
            </para>
            </remarks>
            <param name="stream"></param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.LoadHtml(System.String)">
            <summary>
            Loads HTML content from a string into this control.
            </summary>
            <remarks>
            If previously used stream or file load process was used the existing URL (e.g. the filename) remains.
            If in a previous operation was no name set the default name "localhost" was set. 
            The method will fire the <see cref="E:GuruComponents.Netrix.IHtmlEditor.Loaded">Loaded</see> before
            the load process starts, but not when the URL or filename was not accepted. This can be used to check
            the processing, e.g. if the event does not fire the URL is wrong or the filename was not found. 
            If the processing is done the <see cref="E:GuruComponents.Netrix.IHtmlEditor.Loading">Loading</see> event
            will fired. Remember that the next editing command MUST wait until the
            <see cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete">ReadyStateComplete</see> was fired, which
            takes a bit more time used by the control to render and display of the content.
            <para>
            If MSHTML has not yet been created, the loading is postponed until MSHTML has been created.
            The method uses internally IMoniker to set the current base path to resolve relative paths
            in src and href attributes without changing the parameters.
            </para>
            <para>This method will set the control into non file based mode, as there is no filename provided.</para>
            </remarks>
            <param name="content"></param>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.IsFileBasedDocument">
            <summary>
            Determines that the document is loaded from and saved into a file.
            </summary>
            <remarks>
            This property is set automatically if the document is loaded from an URL or file
            using the <see cref="M:GuruComponents.Netrix.IHtmlEditor.LoadUrl(System.String)"/> methods. If the <see cref="M:GuruComponents.Netrix.IHtmlEditor.LoadHtml(System.String)"/> methods are
            used, the host application can determine how the load/save process works. To
            work with files the property is set to <c>true</c>. This is the default value.
            To work without any file relation, the property should set to <c>false</c>, before
            issuing a <see cref="M:GuruComponents.Netrix.IHtmlEditor.LoadHtml(System.String)"/> method to load content.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.InnerHtml">
            <summary>
            This property changes the content of the body. 
            </summary>
            <remarks>Its purpose is to support simple databindings.</remarks>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.OuterHtml"/>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.OuterHtml">
            <summary>
            This property returns the document's content in raw (unformatted) format.
            </summary>
            <seealso cref="M:GuruComponents.Netrix.IHtmlEditor.GetRawHtml"/>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.InnerHtml"/>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.NewDocument">
            <summary>
            Creates a new document.
            </summary>
            <remarks>
            Used to reset the control into a neutral state.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.InsertTextAtCaret(System.String)">
            <summary>
            Insert Text at Caret position.
            </summary>
            <remarks>
            This method will always insert any characters als Text, tag definitions appear
            as converted text, e.g. &lt;span&gt; is inserted as &amp;lt;span&amp;gt;.
            </remarks>
            <param name="text">Text that has to be inserted.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.CreateElementAtCaret(System.String)">
            <summary>
            Inserts a generic created element at the current caret position.
            </summary>
            <remarks>
            This method internally calls <see cref="M:GuruComponents.Netrix.IHtmlEditor.CreateElement(System.String)"/> to add the element to the documents DOM.
            After that, the element is inserted. The method may fail if the element cannot be inserted at caret position.
            The control will not accept invalid HTML. In case of error an internal exception is thrown and catched. The
            method will return <c>null</c> (<c>Nothing</c> in VB.NET) if no success.
            </remarks>
            <param name="tagName">The name of tag to be inserted. Use "span" to insert &lt;span&gt;, for instance.</param>
            <returns>Returns <c>True</c> on success, <c>False</c> otherwise.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.InsertElementAtCaret(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Insert the element at the current caret position.
            </summary>
            <remarks>
            See implementation for details.
            <seealso cref="M:GuruComponents.Netrix.IHtmlEditor.CreateElementAtCaret(System.String)">CreateElementAtCaret</seealso>
            </remarks>
            <param name="element">The element which has to be inserted, returns the new element.</param>
            <returns>Returns <c>True</c> on success or <c>False</c> if the insertion fails.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.Proxy">
            <summary>
            Gets or sets the proxy used to support download beyond a proxy.
            </summary>
            <remarks>
            Set this property to <c>null</c> if no proxy is required. If the internal loader is being used the 
            proxy settings of IE or operating system are bypassed. Restrictive security settings may make 
            the operation fail, though.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.WebException">
            <summary>
            Fired if an exception occured during loading resources from web.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Undo">
            <summary>
            Undo the last action.
            </summary>
            <remarks>
            The command does nothing if the <see cref="P:GuruComponents.Netrix.IHtmlEditor.CanUndo"/> property returns false.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Redo">
            <summary>
            Redo the last operation or - in case of a batched operation - the whole batch.
            </summary>
            <remarks>
            The command does nothing if the <see cref="P:GuruComponents.Netrix.IHtmlEditor.CanRedo"/> property returns false.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.NextOperationAdded">
            <summary>
            Notifies that a new unit has been added to the current manager.
            </summary>
            <remarks>
            The object returned a sender is the current <see cref="T:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack">IUndoStack</see> object. One can cast the parameter to 
            <see cref="T:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack">IUndoStack</see> and use the various methods and properties
            to determine what happens during the last operation.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete">
            <summary>
            Fired if ready state switches to complete after loading/reloading a document.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateChanged">
            <summary>
            Fired if the control changes the state of the document.
            </summary>
            <remarks>
            It is recommended to use the <see cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete"/>
            event instead of checking ReadyStateChanged for the complete state.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.ContentModified">
            <summary>
            Fired if the control becomes Dirty the first time.
            </summary>
            <remarks>
            The event is fired if the Dirty flag changes from "not dirty" to "dirty". If the
            dirty flag is reset after this and becomes dirty later the event is fired again.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.ContentChanged">
            <summary>
            Fired if the document changes by user interaction or programmatic access to properties.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.UpdateUI">
            <summary>
            This event informs the host that the UI (toolbar, menu) is supposed to re-render.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.BeforeShortcut">
            <summary>
            Fired before a shortcut is processed internally.
            </summary>
            <remarks>
            The purpose of this event is to handle shortcuts elsewhere and disable the internal handling
            specifically for some keys. 
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.PropertyFilterRequest">
            <summary>
            Fired is PropertyGrid firstly requests the property (attribute) descriptions.
            </summary>
            <remarks>
            This event can be used to filter the list of properties in the Grid form each HTML object
            to reduce the number of attributes the user can edit. This is an "per object" request which
            is cached internally.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.PropertyDisplayRequest">
            <summary>
            Fired after the complete property description for an element is ready and the PropertyGrid is up to invoke.
            </summary>
            <remarks>
            The purpose of this event is to change the content and behavior of any property contained in
            the PropertyDescriptorCollection, as well as adding properties dynamically to build a property bag.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.PostEditorEvent">
            <summary>
            Latest event after all internal processing has taken place.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.ShowContextMenu">
            <summary>
            Fired if user tries to show a contextmenu with right click.
            </summary>
            <remarks>
            Host app should provide a contextmenu shown after receiving the event (right mouse click). An alternative
            way is the usage of the <see cref="T:System.Windows.Forms.ContextMenu">ContextMenu</see> property.
            You must assure that not both option used in the same application.
            </remarks>
            <example>
            The event is used in that way:
            <code>
            this.htmlEditor1.ShowContextMenu += new GuruComponents.NetrixEvents.ShowContextMenuEventHandler(htmlEditor1_ShowContextMenu);
            </code>
            The event handler is responsible for the context menus themselves:
            <code>
            private void htmlEditor1_ShowContextMenu(object sender, GuruComponents.NetrixEvents.ShowContextMenuEventArgs e)
            {
                this.contextMenu1.Show(this.htmlEditor1, e.Location);
                EditTagDialog.Location = this.PointToScreen(e.Location);
            }
            </code>
            The field <c>contextMenu1</c> is a .NET context menu, which can define or configure on the fly if necessary. 
            </example>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.HtmlMouseOperation">
            <summary>
            Fired if any mouse operation happens. Returns element information and coordinates in event args
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.HtmlKeyOperation">
            <summary>
            Fired if any key operation happens.
            </summary>
            <remarks>
            Returns element information and pressed key status
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.IHtmlEditor.HtmlElementChanged">
            <summary>
            Fired if a key or mouse operation has changed the current element.
            </summary>
            <remarks>
            Subsequent clicks or keystrokes within
            the same element does not fire the event again. 
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetUndoManager(System.String)">
            <summary>
            Gets a new, opened undo manager. 
            </summary>
            <remarks>
            Until the <see cref="M:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.Close">Close</see> method is called all
            following operations become part of one single undo step.
            </remarks>
            <param name="Name">Provide a specific name to distinguish this manager instance from other parallel opened ones.</param>
            <returns>The undo stack, that contains all current undo steps the undo manager currently helds.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetUndoManager">
            <summary>
            Gets the default internal undo manager.
            </summary>
            <remarks>This is the same call as <see cref="M:GuruComponents.Netrix.IHtmlEditor.GetUndoManager(System.String)"/>.</remarks>
            <returns>The undo stack, that contains all current undo steps the undo manager currently helds.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetRedoManager(System.String)">
            <summary>
            Gets a new, opened redo manager. 
            </summary>
            <remarks>
            Until the <see cref="M:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.Close">Close</see> method is called all
            following operations become part of one single redo step.
            <para>
            The host application should assure that only operations become part of the redo stack which can be 
            reliable "redone" in any situation. It is not recommended to use this in conjunction with table operations.
            </para>
            </remarks>
            <param name="Name">Provide a specific name to distinguish this manager instance from other parallel opened ones.</param>
            <returns>Returns an object which provides the method and properties to control the redo manager.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.IHtmlEditor.HtmlEditorSite">
            <summary>
            Provides access for sited components.
            </summary>
            <remarks>
            See implementing class for further usage explanation.
            </remarks>
            <seealso cref="T:System.ComponentModel.Design.IDesignerHost"/>
            <seealso cref="T:GuruComponents.Netrix.Designer.IDesignSite"/>
            <seealso cref="T:System.ComponentModel.Design.IMenuCommandService"/>
            <seealso cref="T:GuruComponents.Netrix.Designer.IUIService"/>
            <seealso cref="T:GuruComponents.Netrix.Events.HtmlElementChangedEventArgs"/>
            <seealso cref="E:GuruComponents.Netrix.IHtmlEditor.HtmlElementChanged"/>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.Zoom(System.Decimal)">
            <summary>
            Set the editor window zoom level temporarily to given value.
            </summary>
            <remarks>
            This setting does not persist. Reloading document removes zoom level and sets document to 100%.
            </remarks>
            <seealso cref="P:GuruComponents.Netrix.IDocument.Zoom"/>
            <seealso cref="M:GuruComponents.Netrix.IHtmlEditor.GetZoom"/>
            <param name="ratio">Value for zoom, 1 equals 100%. Set 0.5 for 50% or 2.0 for 200%.</param>
        </member>
        <member name="M:GuruComponents.Netrix.IHtmlEditor.GetZoom">
            <summary>
            Returns the current temporariry Zoom level.
            </summary>
            <seealso cref="P:GuruComponents.Netrix.IDocument.Zoom"/>
            <seealso cref="M:GuruComponents.Netrix.IHtmlEditor.Zoom(System.Decimal)"/>
            <returns>Zoom value, return 1 for 100%, 0.5 for 50% or 2.0 for 200%.</returns>
        </member>
        <member name="T:GuruComponents.Netrix.ISelection">
            <summary>
            HtmlSelection implements this interface.
            </summary>
            <remarks>
            It provides methods and properties for element selections and layer operations.
            <seealso cref="T:GuruComponents.Netrix.IHtmlEditor"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.IsElement2DPositioned(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Convenience method for checking if the specified element is absolutely positioned
            </summary>
            <param name="element">The element to check.</param>
            <returns>Returns <c>true</c> if "position:absolute" style is set.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.IsSelectableElement(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Determines if the element can have handles, e.g. is a selectable element.
            </summary>
            <param name="element">The element to check.</param>
            <returns>Returns <c>true</c> if the element can have handles.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.IsSelected(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Checks if the element is currently selected.
            </summary>
            <remarks>
            This methods returns always <c>False</c> if the element isn't a selectable block element.
            One can check the selectable property by calling <see cref="M:GuruComponents.Netrix.ISelection.IsSelectableElement(GuruComponents.Netrix.WebEditing.Elements.IElement)"/> method.
            The method does not change the current selection.
            </remarks>
            <param name="element">The element to be checked.</param>
            <returns>Either <c>True</c> or <c>False</c> depending on current state.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.CanAlign">
            <summary>
            Indicates if the current selection of absolutely positionable elements can be aligned to 
            any of the borders.
            </summary>
            <remarks>
            This is possible if two or more elements are selected and all of them
            have the position:absolute style attribute.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.HaveSameParent">
            <summary>
            This method returns true, if all selected elements have the same parent. </summary>
            <remarks>Under
            some circumstances it is recommended not to align floating elements if they are
            defined under different parent elements.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.AlignBottom">
            <summary>
            Assign bottom alignment to current selection.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.AlignHorizontalCenter">
            <summary>
            Align selected elements horizontal centered.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.AlignLeft">
            <summary>
            Align selection left.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.AlignRight">
            <summary>
            Align selection to the right.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.AlignTop">
            <summary>
            Align elements vertically at top of containing container.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.AlignVerticalCenter">
            <summary>
            Align elements vertically centered if inside a block element.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.ToggleLock">
            <summary>
            Toggle the design time lock state of the selected items. Locked elements cannot be changed in 
            design mode.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.GetLockInfo">
            <summary>
            Returns info about the design time lock state of the selection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.CanChangeZIndex">
            <summary>
            Indicates if the current selection have it's z-index modified.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.GetAbsolutePositionInfo">
            <summary>
            Returns info about the absolute positioning of the selection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.GetUnsynchronizedElement">
            <summary>
            Gets the last not synchronized element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.ToggleAbsolutePosition">
            <summary>
            Toggle the absolute positioning state of the selected items.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.SendToBack(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Sends given item to the back.
            </summary>
            <param name="element">The element which has to be send to back.</param>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.BringToFront(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Bring the given element to front by changing the z.order in a layered document.
            </summary>
            <param name="element">The element which has to be bring to front.</param>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.BringToFront">
            <summary>
            Bring element to front by changing the z.order in a layered document.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.SendToBack">
            <summary>
            Sends all selected items to the back.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.Length">
            <summary>
            Number of selected items.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.Element">
            <summary>
            Get the current element after synchronizing the current selection.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.Elements">
            <summary>
            Gets the list of selected elements as Native Type. Normally, if only one element is 
            selected, use the <see cref="P:GuruComponents.Netrix.ISelection.Element"/> method instead.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.SetOuterHtml(System.String)">
            <summary>
            Change the complete HTML including the outer HTML
            </summary>
            <param name="outerHtml"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.GetOuterHtml">
            <summary>
            Returns the outer HTML of the current selection. This includes the tag of he outermost element themselfes.
            </summary>
            <returns>HTML code as string</returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.GetChildHierarchy(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Gets the list of direct children of the given element. The collection does not reflect the current 
            selection to make this function usable for all elements.
            </summary>
            <param name="o">IElement element</param>
            <returns><see cref="T:GuruComponents.Netrix.WebEditing.Elements.ElementCollection"/> of children, can be empty if there are no children or null if element was not recognized</returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.GetParentHierarchy(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Get the list of elements building the parent of the given element. The collection does not reflect the current 
            selection to make this function usable for all elements.
            </summary>
            <param name="o">Element as IElement derived object</param>
            <returns><see cref="T:GuruComponents.Netrix.WebEditing.Elements.ElementCollection"/> of parent element or null</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.CanMatchSize">
            <summary>
            Indicates if the current selection can be used to assign new values using any other operation.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.Text">
            <summary>
            Returns the text contained in the selection if there is a text selection
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.Html">
            <summary>
            Returns the html text contained in the selection if there is a text selection. The
            html tags are not stripped out. See <see cref="P:GuruComponents.Netrix.ISelection.Text"/> for a version which strips tags.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.HasTextSelection">
            <summary>
            This propertys returns true, if the control has currently selected text in it.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.ISelection.SelectionType">
            <summary>
            The HtmlSelectionType of the selection
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.SelectAll">
            <summary>
            Selects all elements in the document if they are absolutely positioned.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.SelectElement(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <overloads>This method has two overloads.</overloads>
            <summary>
            Searches for an element and returns true, if the element exists within the page, and selects the element, if possible.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.SelectElements(System.Collections.ICollection)">
            <summary>
            Searches for an element collection and returns true, if all elements exists within the page.
            The collection is selected, if possible.
            </summary>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.ClearSelection">
            <summary>
            Removes the selection the user has made but does not delete the content.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.DeleteSelection">
            <summary>
            Removes the selected elements and all its content.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.SynchronizeSelection">
            <summary>
            Synchronizes the selection state held in this object with the selection state in MSHTML.</summary>
            <remarks>This method fires the
            OnSelectionChanged event if the current selection is different from the previous one.
            </remarks>
            <returns>Returns <c>true</c> if the selection has changed since last synchronization.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.ISelection.RemoveCurrentElement(System.Boolean)">
            <summary>
            This method remove the current element and preserves all child elements and textual content, if
            parameter preserveContent is set to true.
            </summary>
            <param name="preserveContent">True if the content and children should not be deleted.</param>
        </member>
        <member name="E:GuruComponents.Netrix.ISelection.SelectionChanged">
            <summary>
            Fired if the selection has changed. 
            </summary>
            <remarks>
            If element selections are made which cannot recognized as selection the event may return only the body element.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.ITextFormatting">
            <summary>
            IHtmlEditor.TextFormatting implements ITextFormatting.
            </summary>
            <remarks>
            The implementing class provides methods to format text selections or text blocks.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.SelectAll">
            <summary>
            Selects the whole text in the control, normally linked with Ctrl-A key.
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.ClearSelection">
            <summary>
            Removes the selection the user has made but does not delete the content
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.RemoveInlineFormat">
            <summary>
            Removes the current inline formatting with &lt;font&gt; tag.
            </summary>
            <example>
            The following code assumes menu item to RemoveInlineFormat and its click event 
            is handle like this:
            <code>
            private void mnuRemoveInlineFormat_Click(object sender, System.EventArgs e)
            {
            	htmlEditor2.TextFormatting.RemoveInlineFormat();
            }
            </code>
            </example>
            <seealso cref="M:GuruComponents.Netrix.ITextFormatting.RemoveParagraphFormat"/>
            <seealso cref="M:GuruComponents.Netrix.ITextFormatting.SetHtmlFormat(GuruComponents.Netrix.HtmlFormat)"/>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.RemoveParagraphFormat">
            <summary>
            Removes the current paragraph formatting by any kind of block element.
            </summary>
            <remarks>
            This is a shortcut for <c>SetHtmlFormat(HtmlFormat.Normal)</c>.
            </remarks>
            <example>
            The following code assumes menu item to RemoveInlineFormat and its click event 
            is handle like this:
            <code>
            private void mnuRemoveParagraphFormat_Click(object sender, System.EventArgs e)
            {
            	htmlEditor2.TextFormatting.RemoveParagraphFormat();
            }
            </code>
            </example>
            <seealso cref="M:GuruComponents.Netrix.ITextFormatting.RemoveInlineFormat"/>
            <seealso cref="M:GuruComponents.Netrix.ITextFormatting.SetHtmlFormat(GuruComponents.Netrix.HtmlFormat)"/>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.CanIndent">
            <summary>
            Indicates if the current text can be indented
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns>Returns a boolean value indicating the state.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.CanSetBackColor">
            <summary>
            Indicates if the background color can be set
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns>Returns a boolean value indicating the state.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.CanSetFontName">
            <summary>
            Indicates if the font face can be set.
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns>Returns a boolean value indicating the state.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.CanSetFontSize">
            <summary>
            Indicates if the font size can get set.
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns>Returns a boolean value indicating the state.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.CanSetForeColor">
            <summary>
            Indicates if the foreground color can be set.
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns>Returns a boolean value indicating the state.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.CanSetHtmlFormat">
            <summary>
            Indicates if the Html format (eg ordered lists, paragraph, heading) can be set.
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns>Returns a boolean value indicating the state.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.CanUnindent">
            <summary>
            Indicates if the current text can be unindented.
            </summary>
            <remarks>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns>Returns a boolean value indicating the state.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.FontName">
            <summary>
            Gets and sets the font name of the current text.
            </summary>
            <remarks>
            This property cannot be applied if no text is selected. 
            Any call to the set path will remove empty attributes, if the current element is a font element and
            the attribute is empty. If no more attributes left the font tag is removed.  
            <para>
            The intention if this property is NOT to change the font face of any font attribute which is valid in
            the parent hierarchy. This means, that only an active selection with one or more characters will
            encapsulated with the font tag. To get the current element just use <c>Selection.Element</c>
            or get the current element from HtmlElementChanged event. If the current element is the font
            element the property <c>face</c> can be used to set or retrieve the current font face value.
            </para>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.FontSize">
            <summary>
            Gets and sets the font size of the current text.
            </summary>
            <remarks>
            This property cannot be applied if no text is selected. 
            Any call to the set path will remove empty attributes, if the current element is a font element and
            the attribute is empty. If no more attributes left the font tag is removed.  
            <para>
            The intention if this property is NOT to change the font size of any font attribute which is valid in
            the parent hierarchy. This means, that only an active selection with one or more characters will
            encapsulated with the font tag. To get the current element just use <c>Selection.Element</c>
            or get the current element from HtmlElementChanged event. If the current element is the font
            element the property <c>size</c> can be used to set or retrieve the current font size value.
            </para>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.CssFontSize">
            <summary>
            Gets or sets the font size using a span tag and local CSS style 'font-size'.
            </summary>
            <remarks>
            Use as a replacement for <see cref="P:GuruComponents.Netrix.ITextFormatting.FontSize"/>.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.ForeColor">
            <summary>
            The foreground color of the current text.
            </summary>
            <remarks>
            This property cannot be applied if no text is selected. 
            Any call to the set path will remove empty attributes, if the current element is a font element and
            the attribute is empty. If no more attributes left the font tag is removed.  
            <para>
            The intention if this property is NOT to change the color of any font attribute which is valid in
            the parent hierarchy. This means, that only an active selection with one or more characters will
            encapsulated with the font tag. To get the current element just use <c>Selection.Element</c>
            or get the current element from HtmlElementChanged event. If the current element is the font
            element the property color can be used to set or retrieve the current color value.
            </para>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.ITextFormatting.BackColor">
            <summary>
            Sets the background of the current text selection to the given color. </summary>
            <remarks>This property cannot be 
            applied if no text is selected. 
            Any call to the set path will remove empty attributes, if the current element is a font element and
            the attribute is empty. If no more attributes left the font tag is removed.  
            <para>
            The intention if this property is NOT to change the font face of any font attribute which is valid in
            the parent hierarchy. This means, that only an active selection with one or more characters will
            encapsulated with the font tag. To get the current element just use <c>Selection.Element</c>
            or get the current element from HtmlElementChanged event. If the current element is the font
            element the style attribute <c>background-color</c> can be used.
            </para>
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.GetBoldInfo">
            <summary>
            Gets the current state of the bold command (enabled and/or checked).
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.GetHtmlFormat">
            <summary>
            Retrieves the current block format, e.g. "Header 1", "Unordered List", etc. and returns
            it in the internal enum format to stay language independent.
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns><see cref="T:GuruComponents.Netrix.HtmlFormat">HtmlFormat</see> enumeration</returns>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.GetItalicsInfo">
            <summary>
            Gets the current state of the italics command (enabled and/or checked).</summary>
            <remarks>This method can only
            detect the state if some text is selected. 
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.GetStrikethroughInfo">
            <summary>
            Gets the current state of the strikethrough command (enabled and/or checked).
            </summary>
            <remarks>
            This method can only detect the state if some text is selected. 
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.GetSubscriptInfo">
            <summary>
            Gets the current state of the Subscript command (enabled and/or checked).</summary>
            <remarks>
            This method can only detect the state if some text is selected. 
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.GetSuperscriptInfo">
            <summary>
            Gets the current state of the Superscript command (enabled and/or checked).</summary>
            <remarks>
            This method can only
            detect the state if some text is selected. 
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.GetUnderlineInfo">
            <summary>
            Gets the current state of the Underline command (enabled and/or checked).</summary>
            <remarks>
            This method can only
            detect the state if some text is selected. 
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.SetHtmlFormat(GuruComponents.Netrix.HtmlFormat)">
            <summary>
            Sets the HTML format (eg ordered list, paragraph, etc.) of the current text.
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <param name="format">The format that is applied to the paragraph.</param>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.DirectionRtlDocument(System.Boolean)">
            <summary>
            Set the whole document to LTR (left to right) or RTL (right to left) mode.
            </summary>
            <remarks>
            RTL is used for languages primarily running from right to left, like arabic,
            whereas LTR is used for western languages.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <param name="rtl">True set RTL, false LTR. Both cases set the attribute.</param>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.DirectionRtlBlock(System.Boolean)">
            <summary>
            Set a block (paragraph, header) to LTR (left to right) or RTL (right to left) mode.
            </summary>
            <remarks>
            RTL is used for languages primarily running from right to left, like arabic,
            whereas LTR is used for western languages.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <param name="rtl">True set RTL, false LTR. Both cases set the attribute.</param>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.DirectionRtlInline(System.Boolean)">
            <summary>
            Set an inline element to LTR (left to right) or RTL (right to left) mode.
            </summary>
            <remarks>
            RTL is used for languages primarily running from right to left, like arabic,
            whereas LTR is used for western languages.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <param name="rtl">True set RTL, false LTR. Both cases set the attribute.</param>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.SetAlignment(GuruComponents.Netrix.Alignment)">
            <summary>
            Align the current block selection or current block.
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
            <param name="alignment"></param>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.GetAlignment">
            <summary>
            Get the current Alignment of the paragraph where the caret resides.
            </summary>
            <returns>A value of the Alignment enumeration.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.ToggleBold">
            <summary>
            Toggles the current selection with the bold formatting (STRONG tag).
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.ToggleItalics">
            <summary>
            Toggles the current selection with the italic formatting (EM tag).
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.ToggleStrikethrough">
            <summary>
            Toggles the current selection with the strikethrough formatting (STRIKE tag).
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.ToggleSubscript">
            <summary>
            Toggles the current selection with the subscript formatting (SUB tag).
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.ToggleSuperscript">
            <summary>
            Toggles the current selection with the superscript formatting (SUP tag).
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.ToggleUnderline">
            <summary>
            Toggles the current selection with the underline formatting (U tag).
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.Indent">
            <summary>
            Indents the current text.
            </summary>
            <remarks>This applies always to the whole paragraph.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.ITextFormatting.UnIndent">
            <summary>
            Unindents the current text.</summary>
            <remarks>
            This applies always to the whole paragraph. If there is no outdent
            level is available the command will be ignored.
            <para>
            For examples see the corresponding <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting">IHtmlEditor.TextFormatting</see> class.
            </para>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextFormatting"/>
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.NetrixServiceProvider">
            <summary>
            Provides internal services.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.NetrixServiceProvider.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.NetrixServiceProvider.GetService(System.Type)">
            <summary>
            Returns a service object.
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.NetrixServiceProvider.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>
            Adds a service to the container.
            </summary>
            <param name="serviceType"></param>
            <param name="callback"></param>
            <param name="promote"></param>
        </member>
        <member name="M:GuruComponents.Netrix.NetrixServiceProvider.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>
            Adds a service to the container.
            </summary>
            <param name="serviceType"></param>
            <param name="callback"></param>
        </member>
        <member name="M:GuruComponents.Netrix.NetrixServiceProvider.AddService(System.Type,System.Object,System.Boolean)">
            <summary>
            Adds a service to the container.
            </summary>
            <param name="serviceType"></param>
            <param name="serviceInstance"></param>
            <param name="promote"></param>
        </member>
        <member name="M:GuruComponents.Netrix.NetrixServiceProvider.AddService(System.Type,System.Object)">
            <summary>
            Adds a service to the container.
            </summary>
            <param name="serviceType"></param>
            <param name="serviceInstance"></param>
        </member>
        <member name="M:GuruComponents.Netrix.NetrixServiceProvider.RemoveService(System.Type,System.Boolean)">
            <summary>
            Removes a service from the container.
            </summary>
            <param name="serviceType"></param>
            <param name="promote"></param>
        </member>
        <member name="M:GuruComponents.Netrix.NetrixServiceProvider.RemoveService(System.Type)">
            <summary>
            Removes a service from the container.
            </summary>
            <param name="serviceType"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.ClassFactory">
            <summary>
            Create COM classes. Internally only.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.ClassFactory.#ctor(GuruComponents.Netrix.Networking.IProtocolFactory)">
            <summary>
            Ctor.
            </summary>
            <param name="factory"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.ClassFactory.#ctor(GuruComponents.Netrix.Networking.ISessionFactory)">
            <summary>
            Ctor
            </summary>
            <param name="factory"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.ClassFactory.CreateInstance(System.IntPtr,System.Guid@,System.IntPtr@)">
            <summary>
            Create an instance
            </summary>
            <param name="pUnkOuter"></param>
            <param name="riid"></param>
            <param name="ppvObject"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.ClassFactory.LockServer(System.Boolean)">
            <summary>
            Not implemented.
            </summary>
            <param name="fLock"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.GenericProtocolHandler">
            <summary>
            This base class handles the basic download procedure.
            </summary>
            <remarks>
            This is the basic implementation of the main interface exposed by an asynchronous pluggable protocol. 
            This interface and the IInternetProtocolSink interface communicate with each other very closely during download 
            operations.
            <para>
            Implementers who want to add there own asynchronous pluggable protocol should inherit from this class and
            override at least the following methods: <see cref="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Start(System.String,GuruComponents.Netrix.ComInterop.Interop.IInternetProtocolSink,GuruComponents.Netrix.ComInterop.Interop.IInternetBindInfo,System.UInt32,System.UInt32)"/>, <see cref="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Read(System.IntPtr,System.UInt32,System.UInt32@)"/>, and <see cref="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Seek(GuruComponents.Netrix.ComInterop.Interop.LARGE_INTEGER,System.UInt32,GuruComponents.Netrix.ComInterop.Interop.ULARGE_INTEGER@)"/>. 
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.#ctor(System.Boolean)">
            <summary>
            Ctor
            </summary>
            <param name="sync"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.GenericProtocolHandler.DownloadDataInvoker">
            <summary>
            Async delegate
            </summary>
            <param name="url"></param>
            <param name="pSink"></param>
            <returns></returns>
        </member>
        <member name="E:GuruComponents.Netrix.Networking.GenericProtocolHandler.DownloadData">
            <summary>
            Fired if next download starts.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Start(System.String,GuruComponents.Netrix.ComInterop.Interop.IInternetProtocolSink,GuruComponents.Netrix.ComInterop.Interop.IInternetBindInfo,System.UInt32,System.UInt32)">
            <summary>
            Start downloading
            </summary>
            <param name="szUrl"></param>
            <param name="pOIProtSink"></param>
            <param name="pOIBindInfo"></param>
            <param name="grfPI"></param>
            <param name="dwReserved"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Continue(GuruComponents.Netrix.ComInterop.Interop.PROTOCOLDATA@)">
            <summary>
            Continue
            </summary>
            <param name="pProtocolData"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Abort(System.Int32,System.UInt32)">
            <summary>
            Abort
            </summary>
            <param name="hrReason"></param>
            <param name="dwOptions"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Terminate(System.UInt32)">
            <summary>
            Terminate
            </summary>
            <param name="dwOptions"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Suspend">
            <summary>
            Suspend. Not used.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Resume">
            <summary>
            Resume. Not used.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Read(System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            Read
            </summary>
            <param name="pv"></param>
            <param name="cb"></param>
            <param name="pcbRead"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.Seek(GuruComponents.Netrix.ComInterop.Interop.LARGE_INTEGER,System.UInt32,GuruComponents.Netrix.ComInterop.Interop.ULARGE_INTEGER@)">
            <summary>
            Seek
            </summary>
            <param name="dlibMove"></param>
            <param name="dwOrigin"></param>
            <param name="plibNewPosition"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.LockRequest(System.UInt32)">
            <summary>
            Lock
            </summary>
            <param name="dwOptions"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.GenericProtocolHandler.UnlockRequest">
            <summary>
            Unlock
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.HttpProtocolInfo">
            <summary>
            HTTP protocol info handler.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.HttpProtocolInfo.ParseUrl(System.String,GuruComponents.Netrix.ComInterop.Interop.PARSEACTION,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,System.UInt32)">
            <summary>
            Parse URL
            </summary>
            <param name="pwzUrl"></param>
            <param name="parseAction"></param>
            <param name="dwParseFlags"></param>
            <param name="pwzResult"></param>
            <param name="cchResult"></param>
            <param name="pcchResult"></param>
            <param name="dwReserved"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.HttpProtocolInfo.CombineUrl(System.String,System.String,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,System.UInt32)">
            <summary>
            Combine URL
            </summary>
            <param name="pwzBaseUrl"></param>
            <param name="pwzRelativeUrl"></param>
            <param name="dwCombineFlags"></param>
            <param name="pwzResult"></param>
            <param name="cchResult"></param>
            <param name="pcchResult"></param>
            <param name="dwReserved"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.HttpProtocolInfo.CompareUrl(System.String,System.String,System.UInt32)">
            <summary>
            Compare URL
            </summary>
            <param name="pwzUrl1"></param>
            <param name="pwzUrl2"></param>
            <param name="dwCompareFlags"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.HttpProtocolInfo.QueryInfo(System.String,GuruComponents.Netrix.ComInterop.Interop.QUERYOPTION,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,System.UInt32)">
            <summary>
            Query URL Info
            </summary>
            <param name="pwzUrl"></param>
            <param name="queryOption"></param>
            <param name="dwQueryFlags"></param>
            <param name="pBuffer"></param>
            <param name="cbBuffer"></param>
            <param name="cbBuf"></param>
            <param name="dwReserved"></param>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.InternetSession">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.#ctor(GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.#ctor">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.RegisterNameSpace(GuruComponents.Netrix.ComInterop.Interop.IClassFactory,System.Guid@,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.UnregisterNameSpace(GuruComponents.Netrix.ComInterop.Interop.IClassFactory,System.String)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.RegisterMimeFilter(GuruComponents.Netrix.ComInterop.Interop.IClassFactory,System.Guid@,System.String)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.UnregisterMimeFilter(GuruComponents.Netrix.ComInterop.Interop.IClassFactory,System.String)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.CreateBinding(System.IntPtr,System.String,GuruComponents.Netrix.ComInterop.Interop.IUnknown,GuruComponents.Netrix.ComInterop.Interop.IUnknown,GuruComponents.Netrix.ComInterop.Interop.IInternetProtocol,System.Int32)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.SetSessionOption(System.Int32,System.Object,System.Int32,System.Int32)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSession.GetSessionOption(System.Int32,System.Object,System.Int32,System.Int32)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.InternetSessionRegistry">
            <summary>
            Allows registeríng new asynchronous pluggable protocol implementations.
            </summary>
            <remarks>
            The base component currently supports file, http and https. With a new APP one can
            overriden any of these to get non-default download behavior or write additional
            protocols to achieve a specific behavior.
            <para>
            Basically, pluggable protocols act as a redirection to different download behavior.
            This means, any tag which forces the download of a resource will have a protocol, like
            file: or http:. The handler is responsible for the download procedure. Overriding 
            existing protocols or inventing new ones is a good idea to simplify complex applications.
            When you, for instance, want to load webpages from an internal webserver, but this 
            webserver does not handle http weill or completely, the a new protocol like "light:"
            could be used. After replacing links like &lt;a href="light:page3.html"&gt; and 
            registering the protocol any resource request will call the protocols handler. 
            Instead of loading from file the handler may load from database, string or whatever.
            </para>
            Pluggable protocols will work in browse mode (non-design) only.
            <para>
            See also the Guide For Advanced Developers, section APP.
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSessionRegistry.Register(System.String,GuruComponents.Netrix.Networking.IProtocolFactory)">
            <summary>
            Register a new APP for the application.
            </summary>
            <param name="protocol">the protocol (for instance "http")</param>
            <param name="factory">the IProtocolFactory used to build the protocol handler</param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSessionRegistry.RegisterMime(System.String,System.String,GuruComponents.Netrix.Networking.ISessionFactory)">
            <summary>
            Register a new Mime handler for the application.
            </summary>
            <param name="mime">Mime type being used.</param>
            <param name="forProtocol">the protocol (for instance "http")</param>
            <param name="factory">the IProtocolFactory used to build the protocol handler</param>
        </member>
        <member name="P:GuruComponents.Netrix.Networking.InternetSessionRegistry.HandlersCount">
            <summary>
            Number of currently registered handlers.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.Networking.InternetSessionRegistry.MimeCount">
            <summary>
            Number of currently registered mime handlers.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSessionRegistry.UnregisterAll">
            <summary>
            Unregister all registered protocols.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSessionRegistry.Unregister(System.String)">
            <summary>
            Unregister a previously registered protocol.
            </summary>
            <param name="protocol"></param>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.InternetSessionRegistry.UnregisterMime(System.String)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.IFactory">
            <summary>
            Marks types that a factory is used to create instances instead of a public constructor.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.IProtocolFactory">
            <summary>
            Defines methods for loader classes.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.IProtocolFactory.GetIInternetProtocol">
            <summary>
            Returns an instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.Networking.ISessionFactory">
            <summary>
            Defines methods for session and mime type handling classes.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.Networking.ISessionFactory.GetIInternetSession">
            <summary>
            Returns an instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.PlugIns.CommandExtender">
            <summary>
            Allows plugins to extend the available verbs within a design time environment.
            </summary>
            <remarks>
            Within the menu command service the extender commands are transformed into verbs and
            used by invoking the commands the plugin exposes. This method allows plugins to extend
            the available commands for specific elements in particular situations. The commands
            can be used to show command links within the PropertyGrid, creating dynamic context menus
            or extending existing main menus.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.PlugIns.CommandExtender.#ctor(System.ComponentModel.Design.CommandID)">
            <summary>
                 Initializes a new instance of the System.ComponentModel.Design.MenuCommand
                 class.
            </summary>
            <param name="command">The unique command ID that links this menu command to the environment's menu.</param>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.CommandExtender.Checked">
            <summary>
            Gets or sets a value indicating whether this menu item is checked.
            </summary>
            <remarks>
            </remarks>
            <returns>true if the item is checked; otherwise, false.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.CommandExtender.CommandID">
            <summary>
            Gets the System.ComponentModel.Design.CommandID associated with this menu command.
            </summary>
            <returns>The System.ComponentModel.Design.CommandID associated with the menu command.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.CommandExtender.Enabled">
            <summary>
            Gets a value indicating whether this menu item is available.
            </summary>
            <value>true if the item is enabled; otherwise, false.</value>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.CommandExtender.Supported">
            <summary>
            Gets or sets a value indicating whether this menu item is supported.
            </summary>
            <value>true if the item is supported, which is the default; otherwise, false.</value>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.CommandExtender.Visible">
            <summary>
            Gets or sets a value indicating whether this menu item is visible.
            </summary>
            <value>true if the item is visible; otherwise, false.</value>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.CommandExtender.Description">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.CommandExtender.Text">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.PlugIns.CommandExtender.ToString">
            <summary>
            Returns a string representation of this menu command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.PlugIns.IElementEngine">
            <summary>
            This interface defines a public way to insert new element definition within the NetRix
            environment from within a Plug-In.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IElementEngine.DragDropCommand">
            <summary>
            The command, used to identify a drag operation.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IElementEngine.DragIcon">
            <summary>
            The icon shown as mouse pointer during valid drag operation.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IElementEngine.InnerHtml">
            <summary>
            The HTML produced on drop event.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IElementEngine.Element">
            <summary>
            The element which is build from this drag 'n drop operation
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IElementEngine.Namespace">
            <summary>
            The namespace in which this element exists. This results in saving the
            content as NS:TagName
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IElementEngine.DesignTimeHtml">
            <summary>
            This content will be used to display the element at design time and it will never
            be written at save. The save process will use <seealso cref="P:GuruComponents.Netrix.PlugIns.IElementEngine.InnerHtml"/> in any case.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IElementEngine.ElementBehavior">
            <summary>
            The behavior attached to this element.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.PlugIns.Feature">
            <summary>
            This list provides several features PlugIns could implement.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.Feature.RegisterElements">
            <summary>
            This plugin can register its own elements.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.Feature.CreateElements">
            <summary>
            This plugin can create new elements within its own namespace.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.Feature.OwnNamespace">
            <summary>
            This plugin has at least one own namespace.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.Feature.MultipleNamespaces">
            <summary>
            This plugin supports multiple namespaces.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.Feature.EditDesigner">
            <summary>
            This plugin supports edit designer.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.Feature.DesignerHostSupport">
            <summary>
            This plugin makes usage of the designer host.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.Feature.ProvideTools">
            <summary>
            Plugin provides tools (toolstrip buttons, menu items) to extend the integrated UI.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.Feature.None">
            <summary>
            This plugin does not support any of the features above.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.PlugIns.IPlugIn">
            <summary>
            Base interface to identify plug-ins.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IPlugIn.Type">
            <summary>
            The base type.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IPlugIn.Name">
            <summary>
            Common name.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IPlugIn.IsExtenderProvider">
            <summary>
            Is implemented as extender provider.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.IPlugIn.Features">
            <summary>
            This plugin supports these features.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.PlugIns.IPlugIn.GetSupportedNamespaces(GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            The default alias and namespaces, which the element creator uses to identify the plugin.
            </summary>
            <remarks>
            If the plug-in returns "v" as an element alias and the element creator tries to create an
            element with such an alias, the private element creator method of this particular plug-in gets called.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.PlugIns.IPlugIn.NotifyReadyStateCompleted(GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            This method gets called if the control reaches readystatecomplet before the user accesible event gets called.
            </summary>
            <remarks>
            Use with caution. Used internally to register commands.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.PlugIns.IPlugIn.GetElementExtenders(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            List of element types, which the extender plug-in extends.
            </summary>
            <remarks>
            Each element can support design time environments, like the PropertyGrid. The PropertyGrid can show,
            for instance, commands and additional property pages, specific to the current object. The basic
            features provided by the base component are managed by a simple designer. Each plugin which deals
            explicitly with elements, like TableDesigner or XmlDesigner, can extend the elements design time behavior
            by providing additional verbs (they appear as commands in the PropertyGrid), property pages (which
            appears via the property button in the PropertyGrid) or manipulated list of properties. 
            <para>
            Internally the plugin changes the <see cref="T:System.ComponentModel.ICustomTypeDescriptor">ICustomTypeDescriptor</see>
            of the underyling element. Environments or hosts other than PropertyGrid may use reflection to get the
            right information.
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.PlugIns.IPlugIn.CreateElement(System.String,GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            Creates a new element.
            </summary>
            <param name="tagName">Private element within the registered namespace.</param>
            <param name="editor">Reference to editor which delivers the current document.</param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.PlugIns.NetRixConfiguration">
            <summary>
            This class uses the App.Config of host application to detect plugins.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.NetRixConfiguration.Plugins">
            <summary>
            List of loaded Plugins.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.PlugIns.NetRixConfiguration.PlugIn">
            <summary>
            Plugin information store.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.NetRixConfiguration.PlugIn.Types">
            <summary>
            Plugin types list.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.PlugIns.NetRixConfiguration.PlugIn.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.PlugIns.NetRixConfiguration.PlugIn.AddType(System.String,System.String)">
            <summary>
            Add type
            </summary>
            <param name="typeName"></param>
            <param name="assembly"></param>
        </member>
        <member name="M:GuruComponents.Netrix.PlugIns.NetRixConfiguration.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Create plugin entry.
            </summary>
            <param name="parent"></param>
            <param name="configContext"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.PlugIns.NetRixConfiguration.RegisteredPlugins">
            <summary>
            Returns Plugin-Objects vor each assembly, containing an array of registered types.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.UndoRedo.BatchedUndoType">
            <summary>
            Defines which type of stack we use.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.UndoRedo.BatchedUndoType.Undo">
            <summary>
            This is an undo stack.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.UndoRedo.BatchedUndoType.Redo">
            <summary>
            This is a redo stack.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoObject">
            <summary>
            Defines one managed undo step.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoObject.Description">
            <summary>
            Name, usually the step itself, such as "Typing".
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoObject.Do">
            <summary>
            "Do" this step, hence, this undos the step actually.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit">
            <summary>
            Wrapper for an undo operation's parent object. Currently not used.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.Do(GuruComponents.Netrix.ComInterop.Interop.IOleUndoManager)">
            <summary>
            Not Implemented.
            </summary>
            <param name="undoManager"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.GetDescription(System.String@)">
            <summary>
            Not Implemented.
            </summary>
            <param name="bStr"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.GetUnitType(System.Int32@,System.Int32@)">
            <summary>
            Not Implemented.
            </summary>
            <param name="clsid"></param>
            <param name="plID"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.OnNextAdd">
            <summary>
            Not Implemented.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.Open(GuruComponents.Netrix.ComInterop.Interop.IOleParentUndoUnit)">
            <summary>
            Not Implemented.
            </summary>
            <param name="parentUnit"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.Close(GuruComponents.Netrix.ComInterop.Interop.IOleParentUndoUnit,System.Boolean)">
            <summary>
            Not Implemented.
            </summary>
            <param name="parentUnit"></param>
            <param name="fCommit"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.Add(GuruComponents.Netrix.ComInterop.Interop.IOleUndoUnit)">
            <summary>
            Not Implemented.
            </summary>
            <param name="undoUnit"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.FindUnit(GuruComponents.Netrix.ComInterop.Interop.IOleUndoUnit)">
            <summary>
            Not Implemented.
            </summary>
            <param name="undoUnit"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.ParentUndoUnit.GetParentState(System.Int64@)">
            <summary>
            Not Implemented.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.UndoRedo.UndoEventArgs">
            <summary>
            Contains the current undo step.
            </summary>
            <remarks>The property <see cref="T:System.Web.UI.WebControls.Unit">Unit</see> contains information about was has been added to the undo step recently.</remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.UndoEventArgs.#ctor(GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack)">
            <summary>
            Ctor for event args.
            </summary>
            <param name="uu"></param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.UndoRedo.UndoEventArgs.Stack">
            <summary>
            The current undo step.
            </summary>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit"/>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit">
            <summary>
            Wrapper for IOleUndoUnit.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit.#ctor(GuruComponents.Netrix.ComInterop.Interop.IOleUndoUnit,GuruComponents.Netrix.ComInterop.Interop.IOleUndoManager)">
            <summary>
            Ctor for IOleUndoUnit object.
            </summary>
            <param name="unit"></param>
            <param name="undoManager"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit.Do">
            <summary>
            Undo a step.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit.Description">
            <summary>
            Get name of step.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit.GetDescription(System.String@)">
            <summary>
            Name of an undo step.
            </summary>
            <param name="bStr"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit.GetUnitType(System.Int32@,System.Int32@)">
            <summary>
            Get COM unit type.
            </summary>
            <param name="clsid"></param>
            <param name="plID"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit.OnNextAdd">
            <summary>
            Invokes the NextAdd event
            </summary>
            <returns>returns 1 if the event has been fired, 0 else.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit.ToString">
            <summary>
            Description
            </summary>
            <returns></returns>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.UndoRedo.UndoUnit.NextAdd">
            <summary>
            Fired if a new step has been added.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack">
            <summary>
            Supports the UNDO infrastructure. Do not implement.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.Type">
            <summary>
            Return the type of this unit stack, either Undo or Redo.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.GetUndoHistory">
            <summary>
            List all names of available Undo steps in the undo stack.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.HasChildUndos">
            <summary>
            Tells whether this stack has already gathered at least one step.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.NumChildUndos">
            <summary>
            Number of steps.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.Close">
            <summary>
            Closes the instance and packs the steps into one that's added to the parent stack.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.Open">
            <summary>
            Open the instance to gather steps.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.UndoRedo.IUndoStack.Name">
            <summary>
            The stack's name, a summary of all internal steps.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior">
            <summary>
            Baseclass to build binary behaviors.
            </summary>
            <remarks>
            All binary behaviors should derive from this class and 
            overwrite the methods where a different functionality is needed. Overridable methods are
            marked as virtual. It is not necessary to overwrite or implement any methods if one don't need
            any additional functionality except the 
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">Draw</seealso> method, which is
            needed to provide at least any functionality to the behavior.
            <para>
            Binary behaviors add additional functionality to the element the behavior is attached. To implement
            a binary behavior, just derive from this class and overwrite the methods which are required to get
            the requested behavior.
            Then, after an instance of the behavior is being created, attach the behavior to the element:
            <code>
            // Get the behavior
            MyBehavior behavior = new MayBehavior();
            // Get the element
            IElement someElement = GetElementMethod();
            someElement.ElementBehaviors.Add(behavior);
            </code>
            If the behavior is no longer needed, you can detach from element:
            <code>
            someElement.ElementBehaviors.Remove(behavior);
            </code>
            The name property is used internally to get the behavior from element back and remove it.
            </para>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement"/>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior"/>
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.behaviorSite">
            <summary>
            Access to underlying site object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.paintsite">
            <summary>
            Paint site.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.#ctor(GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            The base behavior's ctor.
            </summary>
            <param name="host"></param>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.url">
            <summary>
            Unique name
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Invalidate">
            <summary>
            Invalidate and repaint immediately.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Name">
            <summary>
            Get the name of the bahavior to avoid double attach to same element.
            </summary>
            <remarks>
            The final behavior implementation must override this property.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.HtmlPaintFlag">
            <summary>
            Flag to control how the binary behavior will drawn.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.HtmlZOrderFlag">
            <summary>
            Flag to control the z order in which the behavior will drawn against the element, surface and window.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.BorderPenStyle">
            <summary>
            Sets the Pen used to display a rectangle around the assigned object.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.BorderMargin">
            <summary>
            Sets the margin which is build outside the element and let grow the space the element
            takes on the designer surface.
            </summary><remarks>
            This property defaults to zero margins. It is useful to
            overwrite if an element has a border which overwrites the drawn line. 
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Notify">
            <summary>
            Notifies the behavior about the progress of parsing the document and the element to which the behavior is attached.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Detach">
            <summary>
            Notifies the behavior that it is being detached from an element.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Init">
            <summary>
            Notifies the behavior that it has been instantiated.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.OnInit">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.OnNotify(GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyEventArgs)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.OnDetach">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Overwrite with method to implement own binary behaviors. The method can contain any GDI+
            or GDI calls to paint on the designer surface within the element the bahavior is attached.
            The following code gives an idea how to implement this:
            <code>
            using System.Drawing;
            // other using statements may be needed
            </code>
            <code>
            Graphics gr = Graphics.FromHdc(hdc);
            gr.PageUnit = GraphicsUnit.Pixel;
            gr.DrawRectangle(BorderPenStyle, leftBounds, topBounds, rightBounds - leftBounds, bottomBounds - topBounds);
            </code>
            This behavior draws a rectangle around the element taking the default styles.
            </summary>
            <param name="leftBounds">left side of element</param>
            <param name="topBounds">top side of element</param>
            <param name="rightBounds">right side of element</param>
            <param name="bottomBounds">bottom side of element</param>
            <param name="hdc">Pointer to graphic device. See example of how to use it.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
            <summary>
            Overwrite with method to implement own binary behaviors. The method can contain any GDI+
            or GDI calls to paint on the designer surface within the element the bahavior is attached.
            The following code gives an idea how to implement this:
            <code>
            using System.Drawing;
            // other using statements may be needed
            </code>
            <code>
            Graphics gr = Graphics.FromHdc(hdc);
            gr.PageUnit = GraphicsUnit.Pixel;
            gr.DrawRectangle(BorderPenStyle, leftBounds, topBounds, rightBounds - leftBounds, bottomBounds - topBounds);
            </code>
            This behavior draws a rectangle around the element taking the default styles.
            </summary>
            <param name="leftBounds">left side of element</param>
            <param name="topBounds">top side of element</param>
            <param name="rightBounds">right side of element</param>
            <param name="bottomBounds">bottom side of element</param>
            <param name="gr">Pointer to graphic device. See example of how to use it.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.GuruComponents#Netrix#ComInterop#Interop#IHTMLPainter#OnResize(System.Int32,System.Int32)">
            <summary>
            Called when an element containing a rendering behavior is resized.
            </summary>
            <param name="cx">Width after resize</param>
            <param name="cy">Height after resize</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.OnResize(System.Int32,System.Int32)">
            <summary>
            TODO: Add comments.
            </summary>
            <param name="cx"></param>
            <param name="cy"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.GuruComponents#Netrix#ComInterop#Interop#IHTMLPainter#GetPainterInfo(GuruComponents.Netrix.ComInterop.Interop.HTML_PAINTER_INFO)">
            <summary>
            This methode creates a PainterInfo object and returns it. Normally one shouldnot overwrite this
            method and use the properties <see cref="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.HtmlPaintFlag">HtmlPaintFlag</see> 
            and <see cref="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.HtmlZOrderFlag">HtmlZOrderFlag</see> instead.
            </summary>
            <param name="pInfo"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.GuruComponents#Netrix#ComInterop#Interop#IHTMLPainter#HitTestPoint(System.Int32,System.Int32,System.Boolean@,System.Int32@)">
            <summary>
            The current test hit can checked against the element coordinates.
            </summary>
            <param name="ptx">X coordinate</param>
            <param name="pty">Y coordinate</param>
            <param name="pbHit"></param>
            <param name="plPartID"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.HitTestPoint(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Called by the renderer to retrieve a value that specifies whether a point is contained in a rendering behavior.
            </summary>
            <remarks>
            The renderer calls this method when calls are made to such methods as elementFromPoint or componentFromPoint that 
            need to determine how a point relates to the elements in a document's object tree. The behavior then can determine 
            how the element to which it is attached handles events. In particular, the plPartID parameter enables a rendering 
            behavior to assign identification numbers for different parts of the behavior. The value of this parameter is stored 
            as an event object property. For example, a resizing behavior could return a unique value in plPartID for each 
            of its sizing handles. The <see cref="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)"/> method could then query the event object for this value to determine 
            in which direction to resize an element as the user drags the sizing handle.
            When the behavior is rendered below the flow layer of an element, the plPartID returned by this method is not passed 
            to the event object. Instead, the event object contains information provided by the objects in the flow layer, above 
            the behavior. The lZOrder member of the <see cref="T:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter"/> structure specified by GetPainterInfo 
            determines whether the behavior is above or below the flow layer.
            </remarks>
            <param name="ptx">x of point clicked relative to the top-left corner of the element to which the behavior is attached.</param>
            <param name="pty">y of point clicked relative to the top-left corner of the element to which the behavior is attached.</param>
            <param name="plPartID">Receives a number identifying which part of the behavior has been hit</param>
            <returns>TRUE if the point is contained in the element to which the rendering behavior is attached, or FALSE otherwise.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.GetElement(GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            Return the attached element.
            </summary>
            <param name="editor"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.GetBehavior(GuruComponents.Netrix.IHtmlEditor,GuruComponents.Netrix.ComInterop.Interop.IHTMLElement)">
            <summary>
            Returns the current instance. 
            </summary>
            <remarks>
            Both parameters are for backward compatibility and does not affect the result. They might be set <c>null</c> safely.
            </remarks>
            <param name="editor">Editor reference. Not used.</param>
            <param name="element">Alternate element. Nou used.</param>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyEventArgs">
            <summary>
            Event arguments for BehaviorNotify event.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyEventArgs.#ctor(GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyType,GuruComponents.Netrix.ComInterop.Interop.IElementBehaviorSite)">
            <summary>
            Ctor
            </summary>
            <param name="t"></param>
            <param name="site"></param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyEventArgs.NotifyType">
            <summary>
            Returns the event type which causes the notification.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyEventArgs.AttachedElement">
            <summary>
            The underyling COM element object to which this behavior is currently attached.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyEventHandler">
            <summary>
            Defines the BehaviorNotify event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyType">
            <summary>
            Notifies the behavior about the progress of parsing the document and the element to which the behavior is attached.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyType.ContentReady">
            <summary>
            Received when the end tag of the element to which this DHTML behavior is attached is parsed.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyType.ContentSave">
            <summary>
            Received when the content of the behavior is being saved.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyType.DocumentReady">
            <summary>
            Received when the entire document to which this DHTML behavior is attached is parsed.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.BehaviorNotifyType.DocumentContextChange">
            <summary>
            Received when a behavior is added or removed from a document.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.GridLineType">
            <summary>
            If grid uses lines, the enum values determin how the line is drawn.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridLineType.Solid">
            <summary>
            Solid lines
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridLineType.Dash">
            <summary>
            Dashed lines
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridLineType.Dot">
            <summary>
            Dotted line
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridLineType.Dashdot">
            <summary>
            Pattern of dots and dashes
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridLineType.Dashdotdot">
            <summary>
            Pattern of dashe followed by two dots.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridLineType.Null">
            <summary>
            Nothing, no grid
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridLineType.Insideframe">
            <summary>
            Not yet implemented.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.GridType">
            <summary>
            The visual appearance of <see cref="T:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid">Grid</see>.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridType.Points">
            <summary>
            Draws exactly one point per grid position. Default mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridType.Lines">
            <summary>
            Draws lines at grid positions. Fastest mode.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.GridType.Cross">
            <summary>
            Draws small cross signs at grid positions. Slowest mode.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter">
            <summary>
            Determines the behavior of drawing process of binary behaviors against the underlying element.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.ThreedSurface">
            <summary>
            The behavior requires a Microsoft Direct3D® surface.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.Alpha">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.Complex">
            <summary>
            Complex
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.Opaque">
            <summary>
            The behavior's rendering will be opaque; the behavior will change all pixels in its update rectangle or region and MSHTML does not need to render anything below it.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.Overlay">
            <summary>
            The behavior uses Microsoft® DirectDraw® hardware overlay planes.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.HitTest">
            <summary>
            The behavior supports hit testing; MSHTML will call the IHTMLPainter.HitTestPoint method when relevant events fire on the element to which the behavior is attached.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.Noband">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.NoDC">
            <summary>
            No device context is required.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.NoPhysicalClip">
            <summary>
            The behavior will draw entirely within its bounding area; MSHTML does not have to apply clipping.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.NoSaveDC">
            <summary>
            The behavior will return the device context to the state in which it received it; MSHTML does not need to save the device context's state prior to passing it to the IHTMLPainter::Draw method.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.SupportsXForm">
            <summary>
            The behavior supports transformations. If a behavior does not support transformations and MSHTML is applying a transformation to its output (for instance, in a zoomed page layout view), its IHTMLPainter::Draw method will not be called and the behavior will not be rendered.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.Surface">
            <summary>
            The behavior requires a DirectDraw surface.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlPainter.Transparent">
            <summary>
            The behavior's rendering will be transparent; the behavior might not change all the pixels in its update rectangle or region and MSHTML needs to render content below it.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder">
            <summary>
            Determines the z-order in which the binary behavior will drawn against the underlying element.	
            </summary>
            <remarks>
            If a behavior is drawn behind an element, then it is not visible if the element has a opaque surface.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.AboveContent">
            <summary>
            The behavior draws after the element and all its child elements are drawn.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.AboveFlow">
            <summary>
            The behavior draws after the element itself is rendered, but before the element's child elements with a positive z-order value are rendered.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.BelowContent">
            <summary>
            The behavior draws after the background is drawn and before the element (along with any of its child elements) is drawn.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.BelowFlow">
            <summary>
            The behavior draws after the element's child elements with a negative z-order value are rendered, but before the element itself is rendered.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.None">
            <summary>
            Not defined.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.ReplaceAll">
            <summary>
            The behavior replaces the element content, including the background.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.ReplaceContent">
            <summary>
            The behavior replaces the element content but not the background.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.ReplaceBackground">
            <summary>
            The behavior replaces the element's background, but not its content.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.HtmlZOrder.WindowTop">
            <summary>
            The behavior draws after the whole page is drawn and draws on top of all the content.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior">
            <summary>
            This interface provides the base structure of all internal and external binary behavior classes.
            </summary>
            <remarks>
            It is not recommended to use this interface directly. A better way to make use of this feature is the
            abstract base class <see cref="T:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior">BaseBehavior</see>.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior.Name">
            <summary>
            Unique name.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior.GetElement(GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            Associated control.
            </summary>
            <param name="editor"></param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid">
            <summary>
            Displays a grid of pixels to help positioning elements in absolute position mode.
            </summary>
            <remarks>
            Optionally implements SnapRect to snap new elements to grid borders. Gridsize defaults to 8.
            </remarks> 
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.SnapZone">
            <summary>
            Number of pixel the grid will snap.
            </summary>
            <remarks>
            If the grid is every 20 pixels and the zone is 5, the snap feature will work from pixel 15 to 25 on first column.
            The pixel between 25 and 35 on second column will not snap. If the zone is equally or greater than grid elements
            will always snap.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.SnapOnResize">
            <summary>
            Snap will also work on element resize.
            </summary>
            <remarks>
            The <see cref="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.SnapZone"/> property applies, too.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.GridLineVisualisation">
            <summary>
            The visual appearance of lines, if used instead of points.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.GridLineWidth">
            <summary>
            The width of lines if the grid is shown as lines or the width of crosses in case cross view.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.GridVisualisation">
            <summary>
            The visual appearance of the grid.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.GridVisible">
             <summary>
             Gets or sets the visibility of the grid.
             </summary>
             <remarks>
             The grid is a good base to build the VS.NET like GridLayout.
             <seealso cref="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.SnapEnabled">SnapEnabled</seealso>
             <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.AbsolutePositioningEnabled">AbsolutePositioningEnabled</seealso>
             <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.MultipleSelectionEnabled">MultipleSelectionEnabled</seealso>
             </remarks>
             <example>
             To simulate the VS.NET GridLayout just set the following properties in one step. This code assumes that
             you have set the boolean member variable <c>State</c> before calling the sequence:
             <code>
            this.htmlEditor1.GridVisible = State;
            this.htmlEditor1.SnapEnabled = State;
            this.htmlEditor1.AbsolutePositioningEnabled = State;
            this.htmlEditor1.MultipleSelectionEnabled = State;</code>
             </example>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.SnapEnabled">
            <summary>
            Enables snap of elements to grid if absolute positioning is enabled.
            </summary>
            <remarks>
            In flow layout is this function useless, therefore this options activates grid mode, too.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.GridSize">
            <summary>
            Gets or sets the gap between pixels shown as grid.
            </summary>
            <remarks>
            Defaults to 8 for both width and height, if no value is set. Setting values lower than 8 will cause performance
            problems on large surfaces because to many point are plotted with any screen refresh.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Behaviors.IHtmlGrid.GridColor">
            <summary>
            Gets or sets the color of the grid pixel.
            </summary>
            <remarks>
            Defaults to <c>Color.Black</c>.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.SnapMode">
            <summary>
            Determines how the 'snap element' feature behaves against snapzones.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapMode.Grid">
            <summary>
            Snap element against grid. Doesn't matter if grid is visible or not.
            </summary>        
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapMode.HelpLine">
            <summary>
            Snap element agains helpline. Helpline must be visible to snap.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapMode.Both">
            <summary>
            Snap against both, grid and helpline.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapMode.None">
            <summary>
            Turn off any snap behavior.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone">
            <summary>
            Determines against which snapzone an element is currently resized.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.None">
            <summary>
            No snap
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.ZoneTop">
            <summary>
            Snap the top zone.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.ZoneLeft">
            <summary>
            Snap the left zone.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.ZoneBottom">
            <summary>
            Snap the bottom zone.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.ZoneRight">
            <summary>
            Snap the right zone.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.CornerTopLeft">
            <summary>
            Snap the top left corner.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.CornerTopRight">
            <summary>
            Snap the top right corner.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.CornerBottomLeft">
            <summary>
            Snap the bottom left corner.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Behaviors.SnapZone.CornerBottomRight">
            <summary>
            Snap the bottom right corner.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Documents.ICollectionBase">
            <summary>
            Summary description for ICollectionBase.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.ICollectionBase.Add(System.Object)">
            <summary>
            Add an element
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.ICollectionBase.Clear">
            <summary>
            Remove all elements.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.ICollectionBase.RemoveAt(System.Int32)">
            <summary>
            Remove element at index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.ICollectionBase.GetEnumerator">
            <summary>
            Enumerate
            </summary>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.ICollectionBase.Count">
            <summary>
            Number of elements
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure">
            <summary>
            This interface represents a HTML document and its various settings.
            </summary> 
            <remarks>
            Especially it contains information from the header block, like title, meta tags and linked stylesheets.
            The class allows access to script blocks, and frame definitions, too.
            The common properties can be changed through the PropertyGrid, optionally, some
            others are informative, like nimber of images, frames or script blocks.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.Help">
            <summary>
            Fires when the user presses the F1 key while the browser is the active window.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.Click">
            <summary>
            Fires when the user clicks the left mouse button on the object. 
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.DblClick">
            <summary>
            Fires when the user double-clicks the object.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.KeyDown">
            <summary>
            Fires when the user presses a key.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.KeyUp">
            <summary>
            Fires when the user releases a key.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.KeyPress">
            <summary>
            Fires when the user presses an alphanumeric key.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.MouseDown">
            <summary>
            Fires when the user clicks the object with either mouse button.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.MouseMove">
            <summary>
            Fires when the user moves the mouse over the object.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.MouseUp">
            <summary>
            Fires when the user releases a mouse button while the mouse is over the object.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.MouseOut">
            <summary>
            Fires when the user moves the mouse pointer outside the boundaries of the object.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.MouseOver">
            <summary>
            Fires when the user moves the mouse pointer into the object.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.ReadystateChange">
            <summary>
            Fires when the state of the object has changed.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.DragStart">
            <summary>
            Fires on the source object when the user starts to drag a text selection or selected object.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.SelectStart">
            <summary>
            Fires when the object is being selected.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.ContextMenu">
            <summary>
            Fires when the user clicks the right mouse button in the client area, opening the context menu.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.PropertyChange">
            <summary>
            Fires when a property changes on the object.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.BeforeEditFocus">
            <summary>
            Fires before an object contained in an editable element enters a UI-activated state or when an editable container object is control selected.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.SelectionChange">
            <summary>
            Fires when the selection state of a document changes.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.ControlSelect">
            <summary>
            Fires when the user is about to make a control selection of the object.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.MouseWheel">
            <summary>
            Fires when the wheel button is rotated.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.FocusIn">
            <summary>
            Fires for an element just prior to setting focus on that element.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.FocusOut">
            <summary>
            Fires for the current element with focus immediately after moving focus to another element.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.Activate">
            <summary>
            Fires when the object is set as the active element.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.Deactivate">
            <summary>
            Fires when the activeElement is changed from the current object to another object in the parent document.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.BeforeActivate">
            <summary>
            Fires immediately before the object is set as the active element.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.BeforeDeactivate">
            <summary>
            Fires immediately before the activeElement is changed from the current object to another object in the parent document.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.GetElementCollection(System.String)">
            <summary>
            Get a collection of elements from the given tag name.
            </summary>
            <remarks>
            <para>
            For element type related operations this method retrieves a collection (ArrayList) of 
            elements of a given tag name. This method is commonly used to add DHTML events to specific
            elements, and add wizards or dialogs to - for example - a double click.
            </para>
            <para>
            The objects in the ArrayList are derived from IElement interface. They normally have their
            native base type, e.g. if one retrieves the collection of "A" tags the objects are from type
            AnchorElement. It is not recommended to change the expected base type. Even if
            it is working, it fails under some circumstances due to the different types of properties the
            elements provide. Returning the interface instead of a native class is a simplification to
            avoid the need of many getter methods for each type of element.
            </para>
            </remarks>
            <param name="tagName">Tag name to be retrieved</param>
            <returns>The method return null if no such elements in the document.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.ScriptBlocks">
            <summary>
            Get the collection of script blocks.
            </summary>
            <remarks>Supports PropertyGrid by applying a simple script editor (not supported
            in NetRix Light version).</remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.NamedMetaTags">
            <summary>
            Get the current collection of META tags.</summary>
            <remarks>
            <para> The getter is called by the propertygrid via reflection
            to determine the META tags and use events to propagate new values.
            The setter is only to use from the host application and set the complete collection at once. To 
            add one value only just call the getter and then the Add() method.</para>
            <para>To delete the whole list simply assign null: <c>MetaCollection = null;</c>. This will <i>not</i> 
            destroy the object internally nor clear any resources, it will just call the <c>Clear</c> method.</para>
            </remarks>
            <example>
            The following example retrieves two TextBox controls to add a new META tag. It assumes that the
            current collection was previously retrieved by calling <c>this.MetaElements = this.HtmlEditor.DocumentStructure.MetaTags;</c>.
            <code>
            private void buttonAdd_Click(object sender, System.EventArgs e)
            {
              if (this.textBoxName.Text.Length == 0 || this.textBoxContent.Text.Length == 0)
              {
                  MessageBox.Show("Cannot add empty fields");
              } 
              else 
              {
                  MetaElement mE = new MetaElement();
                  mE.name = this.textBoxName.Text;
                  mE.content = this.textBoxContent.Text;
                  this.MetaElements.Add(mE);
              }
            }
            </code>
            </example>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.HttpEquivMetaTags">
            <summary>
            Get the current collection of HTTP-EQUIV META tags.
            </summary>
            <remarks>
            <para> The getter is called by the propertygrid via reflection
            to determine the META tags and use events to propagate new values. HTTP-EQUIV meta tags are modifiers for
            HTTP headers. The are often used to implement auto refresh or overwrite the default settings for charset or MIME type.
            The setter is only to use from the host application and set the complete collection at once. To 
            add one value only just call the getter and then the Add() method.</para>
            <para>To delete the whole list simply assign null: <c>MetaCollection = null;</c>. This will <i>not</i> 
            destroy the object internally nor clear any resources, it will just call the <c>Clear</c> method.</para>
            <para>
            The MetaElement object is the same as used for named META tags. The both attributes used here
            (name="" and http-equiv="") are programmed in a toggle manner. This means that if the attribute name is set
            from hsot app the http-equiv parameter will set to String.Empty and vice versa.
            </para>
            </remarks>
            <example>
            The following example retrieves two TextBox controls to add a new META tag. It assumes that the
            current collection was previously retrieved by calling <c>this.MetaElements = this.HtmlEditor.DocumentStructure.MetaTags;</c>.
            <code>
            private void buttonAdd_Click(object sender, System.EventArgs e)
            {
              if (this.textBoxName.Text.Length == 0 || this.textBoxContent.Text.Length == 0)
              {
                  MessageBox.Show("Cannot add empty fields");
              } 
              else 
              {
                  MetaElement mE = new MetaElement();
                  mE.httpEquiv = this.textBoxName.Text;
                  mE.content = this.textBoxContent.Text;
                  this.MetaElements.Add(mE);
              }
            }
            </code>
            </example>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.EmbeddedStylesheets">
            <summary>
            This getter retrieves the collection of embedded stylesheets. It detects the style tags in the head section.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.LinkedStylesheets">
            <summary>
            This getter retrieves the collection of linked stylesheets.
            </summary>
            <remarks>
            It detects the stylesheets in link tags in a tolerant
            way, ether by checking the type attribute for "text/css" or the url in href attribute ends with ".css".
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.Title">
            <summary>
            Sets or gets the document title.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.Encoding">
            <summary>
            Gets the current documents encoding.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.charset">
            <summary>
            Gets the character set used by the document.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.URL">
            <summary>
            Gets the URL or local path where the document comes from.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.GetBase">
            <summary>
            Returns the current BASE element. 
            </summary>
            <returns>Return the BaseElement object, if any, or <c>null</c> (<c>Nothing</c> in Visual Basic) if there is no such element.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.GetBgSound">
            <summary>
            Returns the current BGSOUND element. 
            </summary>
            <returns>Return the BgSoundElement object, if any, or <c>null</c> (<c>Nothing</c> in Visual Basic) if there is no such element.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.SetBgSound(System.String)">
            <overloads/>
            <summary>
            Inserts a BGSOUND tag in the head section.
            </summary>
            <remarks>
            The default value for LOOPS is set to -1, the default for AUTOSTART is set to TRUE.
            </remarks>
            <param name="src">The name of the sound file to be played.</param>
            <returns>Returns the native element object.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.SetBgSound(System.String,System.Int32)">
            <summary>
            Inserts a BGSOUND tag in the head section.
            </summary>
            <remarks>
            The default for AUTOSTART is set to TRUE.
            </remarks>
            <param name="src">The name of the sound file to be played.</param>
            <param name="loop"></param>
            <returns>Returns the native element object.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.SetBgSound(System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a BGSOUND tag in the head section.
            </summary>
            <remarks>
            All parameters can be set directly.
            </remarks>
            <param name="src">The name of the sound file to be played.</param>
            <param name="loop"></param>
            <param name="autostart"></param>
            <returns>Returns the native element object.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.SetBase(System.String)">
            <overloads/>
            <summary>
            Inserts a BASE element without target information.
            </summary>
            <param name="href">Set the default address for hypertext links.</param>
            <returns>Returns the native element object.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.SetBase(System.String,System.String)">
            <summary>
            Inserts a BASE element.
            </summary>
            <param name="href">Set the default address for hypertext links.</param>
            <param name="target">Sets the default window for linked documents. Can be <c>null</c> (<c>Nothing</c> in Visual Basic) to avoid setting this attribute.</param>
            <returns>Returns the native element object.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.BasePath">
            <summary>
            Returns the base path of the document without filename.
            </summary>
            <remarks>
            Used to build relative paths
            (links) from this document to subdocs, like script blocks, stylesheets etc.
            If the document is in browse mode and URL returns a URI beginning with "http:", we
            return nothing here (String.Empty).
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.LoadTime56K">
            <summary>
            The time it takes to load the document with a 56K modem connection. This value does
            not calculate the embedded elements, images and so on.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.FileSize">
            <summary>
            The file size in bytes.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.FileLastModified">
            <summary>
            Time and date when the file was last modified.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.NumberOfFrames">
            <summary>
            The number of frames defined in this document. Does not recognize IFrame tags.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.NumberOfStylesheets">
            <summary>
            The number of styles defined in this document. Does not recognize inline style tags.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.NumberOfImages">
            <summary>
            The number of embedded images.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.NumberOfScriptBlocks">
            <summary>
            The number of script blocks.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.NumberOfMetaTags">
            <summary>
            The total number of meta tags.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IDocumentStructure.ToString">
            <summary>
            Overridden to help designers displaying the object to the user.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Documents.IFrameSet">
            <summary>
            IFrameSet represents a complete framed master document.
            </summary>
            <remarks>
            This is the document containing
            one or more FrameSet tags. It returns a collection of FrameWindow objects which contain the
            complete frames, including all content and site management. It also contains a collection
            of HtmlFrameSet objects which represent frame documents which contain frames themself. This
            is a recursive strategy so there is no limit in handling nested frames.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.ActivateFrames">
            <summary>
            This method creates a collection of all frames in the document, regardless in which frameset
            they are placed.
            </summary>
            <remarks>
            The collection contains <see cref="T:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow">IFrameWindow</see> objects.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.DeactivateFrames">
            <summary>
            Removes the attached frame behaviors and deactivate the frame editor. Clears the frame collection. The document
            will still remains in memory and can be edited using standard editing features.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.FrameCollection">
            <summary>
            Gets the collection of FrameWindow objects. Each entry represents one 
            frame in the current frameset. Return null if there are no frames.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.FrameSetCollection">
            <summary>
            Gets the collection of Framesets. This list contains documents which are part
            of a framed document and contain a additional frame definition. Each document
            is represented by a HtmlFrameSet object which contains FrameWindow object and so on,
            in recursively manner.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.GetActiveFrame">
            <summary>
            Returs the active frame.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.Count">
            <summary>
            The number of frames of the current set. Frames in subsets are not counted.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.GetFrameStructure">
            <summary>
            Returns the structure of the frame definition document as <see cref="T:System.Xml.XmlDocument"/> object.
            </summary>
            <remarks>
            This is not an interactive
            access to the underlying structure and therefore changes in the DOM of the returned object are not reflected in the
            document. To change the structure using XML it is recommended to read <see cref="T:System.Xml.XmlDocument"/> object, change the content
            and reload the document using the <see cref="M:GuruComponents.Netrix.IHtmlEditor.LoadUrl(System.String)"/> method.
            </remarks>
            <returns>The formatted document</returns>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.FrameActivated">
            <summary>
            This event is fired when the user first activates a frame to begin editing
            there.</summary><remarks>The event is internally used to set the <see cref="M:GuruComponents.Netrix.WebEditing.Documents.IFrameSet.ActivateFrames"/> method,
            which is an alternative way but polling the current frame.
            <para>
            It is recommended to to use the event instead of polling the frame state.
            </para>
            </remarks> 
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow">
            <summary>
            This class represents a single frame in the frameset.
            </summary>
            <remarks>
            Its objects are stored together with
            the related Site to handle the events.  
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.DeactivateDesigner">
            <summary>
            Deactivate the frame designer and remove all attached behaviors.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.AddBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)">
            <summary>
            Add a behavior to this frame.
            </summary>
            <remarks>
            Binary behaviors are permanent drawings on the surface. Multiple
            behaviors are drawn in the order they are added.
            </remarks>
            <param name="behavior">The behavior that is used to change the frame area.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.RemoveBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)">
            <summary>
            Remove a previously set binary behavior. See <see cref="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.AddBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)"/>.
            </summary>
            <param name="behavior"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.RemoveAllBehaviors">
            <summary>
            Removes all attached behaviors assigned to that frame.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.ContentEditable">
            <summary>
            Make the content editable in the editor. Gets the current editable state.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.IsDirty">
            <summary>
            Gets true if content was changed snce last save operation.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.Encoding">
            <summary>
            Sets or gets the current encoding for that frame.
            </summary>
            <remarks>
            It is not necessary to set
            this property as it defaults to the global Encoding of the main document.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.SaveRawContent">
            <summary>
            Save the raw content into the file the frame was loaded from. Overwrites.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.GetFullPathUrl">
            <summary>
            Returns the full path to the document based on the relative path and the current position
            in file system.
            </summary>
            <remarks>
            If the Source is a HTTP URL this method returns the Url as is.
            The internally used URI format with file:// moniker is removed before returning.
            </remarks>
            <returns>Full path in file format, leading monikers are removed, URL coding is decoded.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.SaveFormattedContent(GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions)">
            <summary>
            Save the formatted content into the file the frame was loaded from.
            </summary>
            <remarks>
            Overwrites an existing file.
            </remarks>
            <param name="fo">Formatter Options.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.GetRawContent">
            <summary>
            Returns the raw content.
            </summary>
            <remarks>
            Usable if the host application has its own save method.
            </remarks>
            <returns>String with raw content</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.GetFormattedContent(GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions)">
            <summary>
            Returns a well formatted representation of the frame content.
            </summary>
            <param name="fo">Formatter Options</param>
            <returns>String of well formatted and XHTML compatible content</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.GetBodyContent">
            <summary>
            Returns a string with the outer html of the body.
            </summary>
            <remarks>
            This is for further investigation only,
            not for saving, as it does not contain the full content.
            </remarks>
            <returns>String which contains the content of the frame.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.FrameName">
            <summary>
            The name of the frame as it is in the name attribute of the frame definition.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.FrameSrc">
            <summary>
            The frame src attribute, mostly the filename and a relative path. URL format.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IFrameWindow.NativeFrameElement">
            <summary>
            The native frame element object. Used for PropertyGrid to set various parameters.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow">
            <summary>
            Public access to the HtmlWindow class.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.Load">
            <summary>
            Fires immediately after the browser loads the object. 
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.Unload">
            <summary>
            Fires immediately before the object is unloaded. 
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.Help">
            <summary>
            Fires when the user presses the F1 key while the browser is the active window.
            </summary>
            <remarks>
            If the internal shortcut processing is suppressed the event will not fire.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.Focus">
            <summary>
            Fires when the object receives focus. 
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.Blur">
            <summary>
            Fires when the object loses the input focus.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.Resize">
            <summary>
            Fires when the size of the window is about to change. 
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.Scroll">
            <summary>
            Fires when the user repositions the scroll box in the scroll bar on the object. 
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.BeforeUnload">
            <summary>
            Fires prior to a page being unloaded. 
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.BeforePrint">
            <summary>
            Fires on the object before its associated document prints or previews for printing. 
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.AfterPrint">
            <summary>
            Fires on the object immediately after its associated document prints or previews for printing. 
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.CallScript(System.String)">
            <summary>
            Invoke Script Code within the page.
            </summary>
            <remarks>This method is experimental.</remarks>
            <param name="callCode">Script code called by method, a JScript method name for instance.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.CallScript(System.String,System.Object[])">
            <summary>
            Invoke Script Code within the page.
            </summary>
            <remarks>This method is experimental.</remarks>
            <param name="callCode">Script code called by method, a JScript method name for instance.</param>
            <param name="args">Arguments for method call. Provide as many items as method has parameters.</param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ObjectForScripting">
            <summary>
            Define an object that is being used as call back from JScript using the 'external' property.
            </summary>
            <remarks>
            First, decorate a class with callback methods with attributes as shown below. Then assign
            in ReadyStateComplete event handler. Load JScript code and execute. Control must be in 
            Non design mode
            <code>
            [PermissionSet(SecurityAction.Demand, Name = "FullTrust")]
            [System.Runtime.InteropServices.ComVisibleAttribute(true)]
            public class JCall
            {
                public void MyTest()
                {
                   MessageBox.Show("Test called", "Testbox");
                }
            }
            private void htmlEditor1_ReadyStateComplete(object sender, EventArgs e)
            {
                htmlEditor1.Window.ScriptError += new GuruComponents.Netrix.Events.ShowErrorHandler(Window_ScriptError);
                htmlEditor1.Window.ScriptMessage += new GuruComponents.Netrix.Events.ShowMessageHandler(Window_ScriptMessage);
                htmlEditor1.Window.ObjectForScripting = new JCall();
            {
            // This is in InitializeComponent():
            htmlEditor1.DesignModeEnabled = false;
            // This is an action invokes by menu call ==> Click on Button in HTML calls C# method MyTest in class JCall
            htmlEditor1.LoadHtml("&lt;button onclick='window.external.MyTest()' /&gt;");
            </code>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ExecScript(System.String)">
            <overloads/>
            <summary>
            Executes the specified script in the provided language.
            </summary>
            <remarks>
            Script executed through the IWindow.execScript method can access all global variables available to the calling script. This can be useful when you want the functionality of another scripting language that would not otherwise be available in JScript, such as the Microsoft Visual Basic Scripting Edition (VBScript) MsgBox function.
            </remarks>
            <param name="scriptCode">Value that specifies the code to be executed.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ExecScript(System.String,System.String)">
            <summary>
            Executes the specified script in the provided language.
            </summary>
            <remarks>Script executed through the IWindow.execScript method can access all global variables available to the calling script. This can be useful when you want the functionality of another scripting language that would not otherwise be available in JScript, such as the Microsoft Visual Basic Scripting Edition (VBScript) MsgBox function.</remarks>
            <param name="scriptCode">Value that specifies the code to be executed.</param>
            <param name="language">Value that specifies the language in which the code is executed. The language defaults to Microsoft JScript.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ShowPrompt(System.String,System.String)">
            <summary>
            Displays a dialog box that prompts the user with a message and an input field.
            </summary>
            <param name="message">Value that specifies the message to display in the dialog box.</param>
            <param name="definition">Value that specifies the default value of the input field. By default, this parameter is set to "undefined".</param>
            <returns>Returns the value typed in by the user.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ShowAlert(System.String)">
            <summary>
            Displays a dialog box containing an application-defined message. 
            </summary>
            <remarks>You cannot change the title bar of the Alert dialog box.</remarks>
            <param name="message">Value that specifies the message to display in the dialog box.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ShowConfirm(System.String)">
            <summary>
            Displays a confirmation dialog box that contains an optional message as well as OK and Cancel buttons.
            </summary>
            <param name="message">Value that specifies the message to display in the confirmation dialog box. If no value is provided, the dialog box does not contain a message.</param>
            <returns>True, if the user clicked the OK button. False, if the user clicked Cancel button.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ScrollBy(System.Int32,System.Int32)">
            <summary>
            Causes the window to scroll relative to the current scrolled position by the specified x- and y-pixel offset.
            </summary>
            <param name="x">Value that specifies the horizontal scroll offset, in pixels. Positive values scroll the window right, and negative values scroll it left.</param>
            <param name="y">Value that specifies the vertical scroll offset, in pixels. Positive values scroll the window down, and negative values scroll it up.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ScrollTo(System.Int32,System.Int32)">
            <summary>
            Causes the window to scroll to the specified x- and y-offset at the upper-left corner of the window. 
            </summary>
            <param name="x">Value that specifies the horizontal scroll offset, in pixels.</param>
            <param name="y">Value that specifies the vertical scroll offset, in pixels.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ShowWebPageDialog(System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <overloads/>
            <summary>
            Creates a modeless or modal dialog box that displays the specified HTML document.
            </summary>
            <remarks>See other overloads for additional information.</remarks>
            <param name="fileName"></param>
            <param name="height"></param>
            <param name="modal"></param>
            <param name="width"></param>
            <param name="top"></param>
            <param name="left"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ShowWebPageDialog(System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a modeless or modal dialog box that displays the specified HTML document.
            </summary>
            <remarks>
            The unit used for the properties height, width, top and left is pixels. The property center will be ignoring
            the values for top and left to position the window in the screens center. 
            The minimum height is 100 pixels, any smaller value will be ignored and set to at least 100. Despite that,
            the user can resize to smaller values if resizing is allowed.
            <para>
            This method fails, if the base document has no document loaded or the loaded document is from a different
            domain. That means, that the caller must assure that, if the base fileName property points to a local file,
            the base document must have a local document loaded. 
            </para>
            <para>
            If the dialog is non-modal, it stays still always on top of the host application. The method can be called multiple
            times to produce multiple windows, which exists independently from each other.
            </para>
            <para>
            If the document contains links with targets other than _self, a new Internet Explorer window will open to follow
            the link. This window does not have any conjunction with the host application and can therefore not being controlled
            from NetRix. To avoid this, carefully set the target="_self" attribute for all links. Remember, that the
            dialog opened cannot being controlled from NetRix and therefore does not provide any editing capabilities
            nor fires any events.
            </para>
            <para>
            The title of the dialog box is always the content of the title tag and the string "-- Web Page Dialog". This
            behavior cannot be changed. The dialog has no select, drag 'n drop and other mouse related features. 
            </para>
            </remarks>
            <param name="fileName">Specifies the URL of the document to load and display.</param>
            <param name="modal">If false, creates a modeless dialog box that displays the specified HTML document. If true, creates a modal dialog box that displays the specified HTML document.</param>
            <param name="height">Sets the height of the dialog window (see Remarks for default unit of measure).</param>
            <param name="width">Sets the width of the dialog window (see Remarks for default unit of measure).</param>
            <param name="top">Sets the top position of the dialog window relative to the upper-left corner of the desktop.</param>
            <param name="left">Sets the left position of the dialog window relative to the upper-left corner of the desktop.</param>
            <param name="center">Specifies whether to center the dialog window within the desktop. The default is true.</param>
            <param name="hide">Specifies whether the dialog window is hidden when printing or using print preview.</param>
            <param name="edgeSunken">Specifies the edge style of the dialog window. The value false is raised.</param>
            <param name="helpIcon">Specifies whether the dialog window displays the context-sensitive Help icon.</param>
            <param name="resizable">Specifies whether the dialog window has fixed dimensions.</param>
            <param name="scrollBar">Specifies whether the dialog window displays scrollbars.</param>
            <param name="statusBar">Specifies whether the dialog window displays a status bar.</param>
            <param name="unAdorned">Specifies whether the dialog window displays the border window chrome.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.GetElementFromPoint(System.Drawing.Point)">
            <summary>
            Returns the element for the specified x and y coordinates.
            </summary>
            <remarks>
            Coordinates are supplied in client coordinates. The top left corner of the client area is (0,0). 
            For this method to exhibit expected behavior, the element located at position (x, y) must 
            support and respond to mouse events.
            <para>
            The parameter accepts values directly exposed by Mouse event handlers, such as MouseMove.
            There is no need to convert to Client as well as Screen coordinates or whatever.
            </para>
            <para>
            If element was not found or not recognized, the method returns the Body element. However, it
            returns <c>null</c> (<c>Nothing</c> in Visual Basic) if the element was unknow to the list of registered
            elements. This happens, for instance, for VML elements, which indeed render in MSHTML, but 
            are not supported by NetRix v1. NetRix v2 and newer which have extensible element support
            will return the native element object, then.
            </para>
            </remarks>
            <param name="point">X- and Y-offset, in pixels.</param>
            <returns>Element for the specified x and y coordinates. Returns <c>null</c> (<c>Nothing</c> in Visual Basic) if the element was unknow.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.GetElementFromCaret">
            <summary>
            Returns the element which is directly under the caret.
            </summary>
            <remarks>
            In case of invisible caret this method may return unpredictable results.
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.GetElementFromPoint(System.Drawing.Point)"/>
            </remarks>
            <returns>Returns IElement object from caret.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.GetCaretLocation">
            <summary>
            Return the current location of the caret within the editor.
            </summary>
            <returns>Return the position in client coordinates.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.InternalScriptMessages">
            <summary>
            Suppresses or allows JavaScript messages, including error messages.
            </summary>
            <remarks>
            The purpose of this feature is to control the messages invoked by javascript
            at runtime (non-design mode). One can also hook up into the <see cref="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ScriptMessage"/>
            event to get the internal message data and create it's very own message window instead.
            </remarks>
            <seealso cref="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ScriptMessage"/>
            <seealso cref="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ScriptError"/>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ScriptMessage">
            <summary>
            Fired if scripting invokes a message. 
            </summary>
            <remarks>
            Internal messages can be supressed by setting <see cref="P:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.InternalScriptMessages"/> to <c>false</c>.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Documents.IHtmlWindow.ScriptError">
            <summary>
            Fired if scripting block invoke an error message. Cancellable.
            </summary>
            <remarks>
            <para>
            The usage requires an explicit handling of ready state conditions. This is unfortunately due to internal document handling.
            The error isn’t caught if the event is attached and the browse mode is activated because of the document’s 
            ready state being overwritten by setting the control to browse mode.
            </para>
            <para>
            We suggest using this workaround (assume that <c>editor</c> is the HtmlEditor object):
            <example>
            bool firstTime = true;
             
            void editor_ReadyStateComplete(object sender, EventArgs e)
            {
               if (firstTime)
               {
                   string errFile = @"\scriptwitherror1.html";
                   editor.LoadFile(errFile);
                   firstTime = false;
               }
            }
            </example>
            </para>
            <para>
            This makes the onerror event firing properly and showing error conditions and allows suppressing the internal dialog.
            </para>
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.BreakClearEnum">
            <summary>
            Provides information about how to set the clear attribute
            inserting a break.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.BreakClearEnum.None">
            <summary>
            No clear
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.BreakClearEnum.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.BreakClearEnum.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.BreakClearEnum.All">
            <summary>
            Both sides
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior">
            <summary>
            This class handles attached binary behaviors.
            </summary>
            <remarks>
            Dynamic HTML (DHTML) behaviors can be implemented in script as well as in compiled languages, such as C++. 
            NetRix supports the compiled version and fully supports usage with C#, VB.NET, and other .NET languages.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.#ctor(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Creates an object which holds all behavior information for the specified element object.
            </summary>
            <remarks>
            This creates a 1:1 relation between element and its behaviors, whereas the ElementBehavior class
            can handle an unlimited number of behaviors for the element. This results in the following:
            1:1:n (Element:ElementBehavior:Behaviors).
            </remarks>
            <param name="element"></param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.Count">
            <summary>
            Number of behaviors attached.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.GetEnumerator">
            <summary>
            Get collection of all attached behaviors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.AddBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior,System.Int32,System.Int32)">
            <summary>
            Adds a specific behavior to the element and give them a rectangle measures.
            </summary>
            <remarks>
            This is used because 
            binary behaviors can only get visible for elements having a rectangle format. This is
            done by adding style-width and style-height. Remark: Removing behavior will remove the
            style attributes, but doing not so will remain the attributes in the document after saving.
            If the element has already set the attributes, they will not change, even if they are
            set in a way that makes the element unvisible.
            </remarks>
            <param name="ElementBehavior">The behavior object</param>
            <param name="width">Width in Pixel</param>
            <param name="height">Height in Pixel</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.AddBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)">
            <summary>
            Adds a specific behavior to this element and stores the behavior cookie.
            </summary>
            <remarks>
            To use a binary behavior create a class which inherits directly from 
            <see cref="T:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior">BaseBehavior</see> class. Overwrite the
            Draw method to give
            the behavior a specific graphical context and 
            <see cref="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Name">Name</see> property to have
            unique name if multiple behavior are attached the same time.
            </remarks>
            <param name="elementBehavior"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.HasBehavior">
            <summary>
            Has at least one behavior attached.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.HasBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)">
            <summary>
            The specified behavior is attached to this element.
            </summary>
            <param name="elementBehavior"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.GetBehaviorNames">
            <summary>
            Returns the names of the instances of all attached behaviors.
            </summary>
            <returns>Collection of names of the attched behavior instances.</returns>
            <remarks>
            Behaviors are supposed to have unique names. This methods returns the 
            active instances with unique names. Behaviors which break the rule may not
            appear correctly.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.RemoveBehavior">
            <summary>
            Remove all behaviors from element.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementBehavior.RemoveBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)">
            <summary>
            Remove the given behavior from element.
            </summary>
            <remarks>
            If the behavior has forced setting the width and/or height of the element to beeing displayed
            this method will remove these style attributes. If other parts of the app uses tese values to
            you must assure that the previously set values are reset.
            </remarks>
            <param name="ElementBehavior">The behavior that was previously attached.</param>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.ElementCollection">
            <summary>
            This class holds a collection of elements.
            </summary>
            <remarks>
            ElementCollection is a datasource implementation which holds an 
            array of <see cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement">IElement</see> objects 
            to allow enumerable access from host application. The goal is to have a 
            element collection which can used as a datasource rather than an arraylist, which makes
            copies of elements. Copying elements is not the common way because the element objects are
            really huge.
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement">IElement</seealso>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementCollection.Add(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Adds a new element to the collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementCollection.Add(System.Web.UI.Control)">
            <summary>
            Adds a control to the collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.ElementCollection.Item(System.Int32)">
            <summary>
            Returns an element or a control which implements IElement.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.ElementCollection.GetControlAtIndex(System.Int32)">
            <summary>
            Get a control at the specified index, event if it's not implementing IElement.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.ElementComponent">
            <summary>
            Zusammenfassung für ElementComponent.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ClientArea">
            <summary>
            Component is inside the client area of the object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.Outside">
            <summary>
            Component is outside the bounds of the object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarDown">
            <summary>
            Down scroll arrow is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarHThumb">
            <summary>
            Horizontal scroll thumb or box is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarLeft">
            <summary>
            Left scroll arrow is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarPageDown">
            <summary>
            Page-down scroll bar shaft is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarPageLeft">
            <summary>
            Page-left scroll bar shaft is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarPageRight">
            <summary>
            Page-right scroll bar shaft is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarPageUp">
            <summary>
            Page-up scroll bar shaft is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarRight">
            <summary>
            Right scroll arrow is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarUp">
            <summary>
            Up scroll arrow is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.ScrollbarVThumb">
            <summary>
            Vertical scroll thumb or box is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.HandleBottom">
            <summary>
            Bottom sizing handle is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.HandleBottomLeft">
            <summary>
            Lower-left sizing handle is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.HandleBottomRight">
            <summary>
            Lower-right sizing handle is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.HandleLeft">
            <summary>
            Left sizing handle is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.HandleRight">
            <summary>
            Right sizing handle is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.HandleTop">
            <summary>
            Top sizing handle is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.HandleTopLeft">
            <summary>
            Upper-left sizing handle is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.HandleTopRight">
            <summary>
            Upper-right sizing handle is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.BottomBorder">
            <summary>
            Is on bottom border zone, but not on a handle.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.TopBorder">
            <summary>
            Is on bottom border zone, but not on a handle.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.LeftBorder">
            <summary>
            Is on top top zone, but not on a handle.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.RightBorder">
            <summary>
            Is on bottom right zone, but not on a handle.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ElementComponent.MaxValue">
            <summary>
            Just indicate end of enum. Do not use.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.EventVisibleAttribute">
            <summary>
            Used in a derived element class to tag an event to make the event visible within the PropertyGrid event tab.
            </summary>
            <remarks>
            This attribute supports a design environment and has no effect at runtime.
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.ScriptingVisibleAttribute">
            <summary>
            Used to tag scripting events.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.IElement">
            <summary>
            The base interface for all HTML elements.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.Style">
            <summary>
            Contains the HTML cascading-style sheets (CSS) inline style attributes for a specified HTML server control. This class cannot be inherited.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.LoseCapture">
            <summary>
            Fired if the user clicks on the element loses its mouse capture.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Click">
            <summary>
            Fired if the user clicks on the element in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.DblClick">
            <summary>
            Fired if the user double clicks on the element in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.DragStart">
            <summary>
            Fired if the user starts dragging the in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Focus">
            <summary>
            Fired if the elemens receives the focus.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Drop">
            <summary>
            Fired if the elemens receives the focus.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Blur">
            <summary>
            Fired if the elemens receives the focus.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.DragOver">
            <summary>
            Fired if the elemens receives the focus.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.DragEnter">
            <summary>
            Fired if the elemens receives the focus.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.DragLeave">
            <summary>
            Fired if the elemens receives the focus.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.KeyDown">
            <summary>
            Fired if the user hits a key down on the element in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.KeyPress">
            <summary>
            Fired if the user pressed a key element in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.KeyUp">
            <summary>
            Fired if the user hits and releases a key on the element in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseDown">
            <summary>
            Fired if the user clicks a mouse button on the element in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.ResizeStart">
            <summary>
            Sets or removes an event handler function that fires when the user begins to change the dimensions of the object.
            </summary>
            <remarks>
            This event handler will not suppress the embedded resizing behavior.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.ResizeEnd">
            <summary>
            Sets or removes an event handler function that fires when the user has finished changing the dimensions of the object.
            </summary>
            <remarks>
            This event handler will not suppress the embedded resizing behavior.
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseEnter">
            <summary>
            Sets or removes an event handler function that fires when the user moves the mouse pointer into the object.
            </summary>
            <remarks>
            Unlike the MouseOver event, the MouseEnter event does not bubble. In other words, the MouseEnter 
            event does not fire when the user moves the mouse pointer over elements contained by the object, 
            whereas <see cref="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseOver">MouseOver</see> does fire. 
            </remarks>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseLeave">
            <summary>
            Sets or retrieves a pointer to the event handler function that fires, when the user moves the mouse pointer outside 
            the boundaries of the object.</summary>
            <remarks>Use in correspondence to OnMouseEnter.</remarks>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseMove">
            <summary>
            Fired if the user moves the mouse over the element area in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseOut">
             <summary>
             Fired if the user mouse has left the element area with the mouse in design mode.
             </summary>
             <example>
             To use this event to show the content of a link the mouse pointer is over, use this code:
             <code>
             ArrayList anchors = this.htmlEditor2.DocumentProperties.GetElementCollection("A") as ArrayList;
             if (anchors != null)
             {
                foreach (AnchorElement a in anchors)
                {
                    a.OnMouseOver -= new GuruComponents.Netrix.Events.DocumentEventHandler(a_OnMouseOver);
                    a.OnMouseOver += new GuruComponents.Netrix.Events.DocumentEventHandler(a_OnMouseOver);
                    a.OnMouseOut -= new GuruComponents.Netrix.Events.DocumentEventHandler(a_OnMouseOut);
                    a.OnMouseOut += new GuruComponents.Netrix.Events.DocumentEventHandler(a_OnMouseOut);
                }
             }</code>
             Place this code in the <see cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete">ReadyStateComplete</see> event.
             The handler are now able to do something with the element.
             <code>
            private void a_OnMouseOut(GuruComponents.Netrix.Events.DocumentEventArgs e)
            {
              AnchorElement a = e.SrcElement as AnchorElement;
              if (a != null)
              {
                 this.statusBarPanelLinks.Text = "";
              }
            }</code>
             <code>
            private void a_OnMouseOver(GuruComponents.Netrix.Events.DocumentEventArgs e)
            {
               AnchorElement a = e.SrcElement as AnchorElement;
               if (a != null)
               {
                  this.statusBarPanelLinks.Text = a.href;
               }
            }</code>
             </example>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseOver">
             <summary>
             Fired if the user has entered the element area with the mouse in design mode.
             </summary>
             <example>
             To use this event to show the content of a link the mouse pointer is over, use this code:
             <code>
             ArrayList anchors = this.htmlEditor2.DocumentProperties.GetElementCollection("A") as ArrayList;
             if (anchors != null)
             {
                foreach (AnchorElement a in anchors)
                {
                    a.OnMouseOver -= new GuruComponents.Netrix.Events.DocumentEventHandler(a_OnMouseOver);
                    a.OnMouseOver += new GuruComponents.Netrix.Events.DocumentEventHandler(a_OnMouseOver);
                    a.OnMouseOut -= new GuruComponents.Netrix.Events.DocumentEventHandler(a_OnMouseOut);
                    a.OnMouseOut += new GuruComponents.Netrix.Events.DocumentEventHandler(a_OnMouseOut);
                }
             }</code>
             Place this code in the <see cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete">ReadyStateComplete</see> event.
             The handler are now able to do something with the element.
             <code>
            private void a_OnMouseOut(GuruComponents.Netrix.Events.DocumentEventArgs e)
            {
              AnchorElement a = e.SrcElement as AnchorElement;
              if (a != null)
              {
                 this.statusBarPanelLinks.Text = "";
              }
            }</code>
             <code>
            private void a_OnMouseOver(GuruComponents.Netrix.Events.DocumentEventArgs e)
            {
               AnchorElement a = e.SrcElement as AnchorElement;
               if (a != null)
               {
                  this.statusBarPanelLinks.Text = a.href;
               }
            }</code>
             </example>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseUp">
            <summary>
            Fired if the user releases the mouse button over the element area in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.SelectStart">
            <summary>
            Fired if the user starts selecting the element area in design mode.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.LayoutComplete">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Load">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MouseWheel">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MoveEnd">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.MoveStart">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Activate">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.BeforeActivate">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.BeforeCopy">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.BeforeCut">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.BeforePaste">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.ContextMenu">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Copy">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Cut">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Deactivate">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Drag">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.DragEnd">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.FocusIn">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.FocusOut">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.FilterChange">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Abort">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Change">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Select">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.SelectionChange">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Stop">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.BeforeDeactivate">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.ControlSelect">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.EditFocus">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Error">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Move">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Paste">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.PropertyChange">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Resize">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Scroll">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="E:GuruComponents.Netrix.WebEditing.Elements.IElement.Paged">
            <summary>
            Fired if the underlying event is being received.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.ExtendedProperties">
            <summary>
            Access to several extended properties an element can provide.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.UniqueName">
            <summary>
            Returns the unique name which is used to hold the element in the designer environment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.IsSelectable">
            <summary>
            Returns <c>true</c> if the element is selectable.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.IsAbsolutePositioned">
            <summary>
            Gets true if the element can positioned freely on the surface by using the mouse.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.IsTextEdit">
            <summary>
            Gets <c>true</c> if the element is in text editing mode.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.InsertAdjacentElement(GuruComponents.Netrix.WebEditing.Elements.InsertWhere,GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Inserts an element at the specified location.
            </summary>
            <param name="method">Specifies where to insert the HTML element.</param>
            <param name="element">Element to be inserted adjacent to the object.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.InsertAdjacentHtml(GuruComponents.Netrix.WebEditing.Elements.InsertWhere,System.String)">
            <summary>
            Inserts the given HTML text into the element at the location.
            </summary>
            <param name="method"></param>
            <param name="html"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.InsertAdjacentText(GuruComponents.Netrix.WebEditing.Elements.InsertWhere,System.String)">
            <summary>
            Inserts the given text into the element at the specified location.
            </summary>
            <param name="method">Specifies where to insert the text.</param>
            <param name="text"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetAbsoluteArea">
            <summary>
            Returns the absolute coordinates of the element in pixel.
            </summary>
            <remarks>
            This method works even for non absolute positioned elements. Some elements, which have no rectangle
            dimensions, may fail returning any useful values.
            </remarks>
            <returns>A rectangle which describes the dimensions of the client area of the element.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetBaseElement">
            <summary>
            Returns the base COM element object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.HtmlEditor">
            <summary>
            Reference to the editor that this elements belongs to.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.ContentEditable">
            <summary>
            Gets or sets explicitly the design mode for this element.
            </summary>
            <value>Setting to true will set the attribute "contentEditable", which is visible in the documents DOM.
            Returning the value false means that the mode is not explicitly set but may be inherited. Setting a
            parent to ContentEditable will not change the value for the children, but in fact, they are now editable. 
            </value>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.AtomicSelection">
            <summary>
            The element with this property set to TRUE will be selectable only as a unit.
            </summary>
            <remarks>
            This property is only available 
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.Unselectable">
            <summary>
            Makes the element unselectable, so the user cannot activate it for resizing or moving.
            </summary>
            <remarks>
            The property is ignored if the element is already an unselectable element. Only block elements
            like DIV, TABLE, and IMG can be selectable.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.ElementBehaviors">
            <summary>
            Access to the element's behavior 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.InnerHtml">
            <summary>
            Gets or sets inner html of the element.
            </summary>
            <remarks>
            The inner html is the complete content between the opening and the closing tag.
            If the element is not a container element the property will return <see cref="F:System.String.Empty">String.Empty</see>.
            Any HTML is returned "as is", with the braces and tag names.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.OuterHtml">
            <summary>
            Gets or sets outer html of the element.
            </summary>
            <remarks>
            The outer html is the complete content including the opening and the closing tag and their braces.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.InnerText">
            <summary>
            Gets or sets the inner text of the element.
            </summary>
            <remarks>
            The inner text is the complete content between the opening and the closing tag, with any HTML tags
            stripped out.
            If the element is not a container element the property will return <see cref="F:System.String.Empty">String.Empty</see>.
            Any HTML is returned "as is", with the braces and tag names.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.TagName">
            <summary>
            The name of the element.
            </summary>
            <remarks>
            Used to reference the element if it is still unknown after a insertion operation.
            This property should work even if there is no native class available. It does not work
            reliable if an element is not HTML 4.0 compliant.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.TagElement">
            <summary>
            Gives direct access to the element object from datasource or collection based lists.
            </summary>
            <remarks>
            Used for lists which needs a property to access collection members for displaying purposes. To
            prevent such lists from deleting the object we send only a shallow copy clone. This
            allows the caller to change all properties but deleting does not modify the DOM.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.Alias">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.ElementName">
            <summary>
            
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetChild(System.Int32)">
            <overloads>This method has two overloads.</overloads>
            <summary>
            Returns the child at the give index. </summary>
            <remarks>If a element has 4 children they are indexed zero based.
            </remarks>
            <param name="index">The Number of child in the children collection.</param>
            <returns>Returns the base class of child element or <c>null</c>, if the index was not found.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetChild(System.String)">
            <summary>
            The child of the element or null if it does not have children.
            </summary>
            <remarks>
            This method will return the next child with the given tag name in the collection of children.
            </remarks>
            <param name="name">Tag name of the child we are searching for.</param>
            <returns>Returns the base class of child element or <c>null</c>, if the name was not found.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetChildren">
            <summary>
            Returns the collection of children of the element.
            </summary>
            <remarks>
            The returned collection will always beeing created, but it could be empty if there are
            no children.
            </remarks>
            <returns>Collection of elements of type IElement.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetParent">
            <summary>
            The parent of the current element or null if no parent.
            </summary>
            <returns>Returns the base class of child element or <c>null</c>, if there was no parent element.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.ToString">
            <summary>
            String represention of the element.
            </summary>
            <returns>Tag form of element without attributes</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetStyle">
            <summary>
            This method return the complete CSS inline definition, which the style attribute contains.
            </summary>
            <remarks>
            For easy access to specific styles it is recommended to use the 
            <see cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetStyleAttribute(System.String)">GetStyleAttribute</see> and 
            <see cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.SetStyleAttribute(System.String,System.String)">SetStyleAttribute</see>
            methods. This and both alternative methods will check the content and cannot assign values not
            processed by the Internet Explorer Engine. The final behavior may vary depending on the currently
            installed IE engine.
            </remarks>
            <returns>Returns the complete style text (all rules) as one string.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.SetStyle(System.String)">
            <summary>
            Set the current style by overwriting the complete content of the style attribute.
            </summary>
            <param name="CssText">The style text; should be CSS compliant.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetStyleAttribute(System.String)">
            <summary>
            Gets a specific part of an inline style.
            </summary>
            <param name="styleName">The style attribute to retrieve</param>
            <returns>The string representation of the style. Returns <see cref="F:System.String.Empty"/> if the 
            style does not exists.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.SetStyleAttribute(System.String,System.String)">
            <summary>
            Sets a specific part of an inline style.
            </summary>
            <remarks>
            Setting to <seealso cref="F:System.String.Empty">String.Empty</seealso> does remove
            the style name. For a more intuitive way use <see cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.RemoveStyleAttribute(System.String)">RemoveStyleAttribute</see> instead.
            Setting impossible rule texts will either ignore the command or set unexpected values.
            </remarks>
            <param name="styleName">The name of the style rule beeing set, e.g. "font-family".</param>
            <param name="styleText">The rule content, like "Verdana,Arial" for the "font-family" rule.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.RemoveStyleAttribute(System.String)">
            <summary>
            Removes an style attribute and his content from the inline style string.
            </summary>
            <param name="styleName">Name of style to be removed</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.SetAttribute(System.String,System.Object)">
            <summary>
            Sets an attribute to a specific value.
            </summary>
            <remarks>
            The command may does nothing if the value does not correspond with the attribute. E.g. it
            is almost impossible to write a pixel value if the attribute expects a font name.
            </remarks>
            <param name="attribute">The name of the attribute.</param>
            <param name="value">The value beeing written.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.RemoveAttribute(System.String)">
            <summary>
            Remove the give attribute from element.
            </summary>
            <param name="attribute">The name of the attribute which is about to be removed. Case insensitive.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetAttribute(System.String)">
            <summary>
            Universal access to any attribute.
            </summary>
            <remarks>
            The type returned may vary depended on the internal type.
            </remarks>
            <param name="attribute">The name of the attribute.</param>
            <returns>The object which is the value of the attribute.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.ElementDom">
            <summary>
            Returns the DOM access to the element.
            </summary>
            <returns>The DOM representation of the element.</returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.EffectiveStyle">
            <summary>
            Gets the current effective style, including styles defines internally, in linked sheets as well as through HTML.
            </summary>
            <remarks>
            This property shows the effective style if this element as a cascade of the global
            and inline styles defined elsewhere. Readonly.
            <para>        
            The property returns <c>null</c> (<c>Nothing</c> in VB.NET) if the effective style can not be retrieved.
            <para>See implementing classes for details</para> 
            </para>
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Elements.IElement.RuntimeStyle"/>        
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Elements.IElement.CurrentStyle"/>        
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.RuntimeStyle">
            <summary>
            Gets the current element's runtime style definition and allows interactive access.
            </summary>
            <remarks>
            This property allows access to styles not being persistent within the document. They affect only at runtime
            and can change the current appearance of an object. One can use this to add specific effects during user
            operation of to customize elements in particular situations.
            <para>See implementing classes for details</para>
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Elements.IElement.EffectiveStyle"/>
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Elements.IElement.CurrentStyle"/>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.SetStyleAttribute(System.String,System.String)"/>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.RemoveStyleAttribute(System.String)"/>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetStyleAttribute(System.String)"/>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElement.CurrentStyle">
            <summary>
            Access to the style attribute in an object form.
            </summary>
            <para>See implementing classes for details</para>
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Elements.IElement.EffectiveStyle"/>
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Elements.IElement.RuntimeStyle"/>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.SetStyleAttribute(System.String,System.String)"/>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.RemoveStyleAttribute(System.String)"/>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Elements.IElement.GetStyleAttribute(System.String)"/>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior">
            <summary>
            This interfaces handles attached binary behaviors.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.Count">
            <summary>
            Number of behaviors attached
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.GetEnumerator">
            <summary>
            Get behaviors
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.AddBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior,System.Int32,System.Int32)">
            <summary>
            Adds a specific behavior to the element and give them a rectangle measures.
            </summary>
            <remarks>
            This is used because 
            binary behaviors can only get visible for elements having a rectangle format. This is
            done by adding style-width and style-height. Remark: Removing behavior will remove the
            style attributes, but doing not so will remain the attributes in the document after saving.
            If the element has already set the attributes, they will not change, even if they are
            set in a way that makes the element unvisible.
            </remarks>
            <param name="ElementBehavior">The behavior object</param>
            <param name="width">Width in Pixel</param>
            <param name="height">Height in Pixel</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.AddBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)">
            <summary>
            Adds a specific behavior to this element and stores the behavior cookie.
            </summary>
            <remarks>
            To use a binary behavior create a class which inherits directly from 
            <see cref="T:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior"/> class. Overwrite the
            <see cref="M:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Draw(System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">Draw</see> method to give
            the behavior a specific graphical context and 
            <see cref="P:GuruComponents.Netrix.WebEditing.Behaviors.BaseBehavior.Name">Name</see> property to have
            unique name if multiple behavior are attached the same time.
            </remarks>
            <param name="elementBehavior"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.HasBehavior">
            <summary>
            Has at least one behavior attached.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.HasBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)">
            <summary>
            The specified behavior is attached to this element.
            </summary>
            <param name="elementBehavior"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.GetBehaviorNames">
            <summary>
            Returns the names of the instances of all attached behaviors.
            </summary>
            <returns>Collection of names of the attched behavior instances.</returns>
            <remarks>
            Behaviors are supposed to have unique names. This methods returns the 
            active instances with unique names. Behaviors which break the rule may not
            appear correctly.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.RemoveBehavior">
            <summary>
            Remove all behaviors from element.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementBehavior.RemoveBehavior(GuruComponents.Netrix.WebEditing.Behaviors.IBaseBehavior)">
            <summary>
            Remove the given behavior from element.
            </summary>
            <remarks>
            If the behavior has forced setting the width and/or height of the element to beeing displayed
            this method will remove these style attributes. If other parts of the app uses tese values to
            you must assure that the previously set values are reset.
            </remarks>
            <param name="ElementBehavior">The behavior that was previously attached.</param>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.IElementDom">
            <summary>
            Gives direct access to the underlying DOM of any element.  
            </summary>
            <remarks>
            To access the object model of an element just query the <see cref="P:GuruComponents.Netrix.WebEditing.Elements.IElement.ElementDom"/> property from element.
            To access the object model of the whole document's body just query the <see cref="P:GuruComponents.Netrix.WebEditing.Elements.IElement.ElementDom"/> property from body element,
            available from <see cref="M:GuruComponents.Netrix.IHtmlEditor.GetBodyElement"/> method.
            To access the object model of the complete document just query IElementDom property from editor class,
            available through <see cref="P:GuruComponents.Netrix.IHtmlEditor.DocumentDom"/> method.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.SwapNode(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Exchanges the location of two objects in the document hierarchy.
            </summary>
            <remarks>If elements are removed at run time, before the closing tag is parsed, areas of the document might not render.</remarks>
            <param name="node">Object that specifies the existing element.</param>
            <returns>Returns a reference to the object that invoked the method.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.GetChildNodes">
            <summary>
            Returns the direct descendent children elements.
            </summary>
            <remarks>
            Doe snot returns any text nodes between the elements.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.GetParent">
            <summary>
            Returns the parent if there is any, or <c>null</c> otherwise.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.GetChildNodes(System.Boolean)">
            <overloads/>
            <summary>
            Returns the direct descendent children elements, including text nodes.
            </summary>
            <remarks>
            This method returns text portions as TextNodeElement objects.
            </remarks>
            <param name="includeTextNodes">If <c>True</c> the collection will include text parts as TextNodeElement objects.</param>
            <returns></returns>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElementDom.LastChild">
            <summary>
            Returns the last child of the current element.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElementDom.FirstChild">
            <summary>
            Returns the first child of the current element.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElementDom.HasChildNodes">
            <summary>
            Gets <c>true</c>, if the element has child elements.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElementDom.NextSibling">
            <summary>
            Return the next sibling of this element.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IElementDom.PreviousSibling">
            <summary>
            Return the previous sibling of the element.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.InsertBefore(GuruComponents.Netrix.WebEditing.Elements.IElement,GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Insert a child before the given element.
            </summary>
            <param name="newChild"></param>
            <param name="refChild"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.ReplaceChild(GuruComponents.Netrix.WebEditing.Elements.IElement,GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Replace the element with another one.
            </summary>
            <param name="newChild"></param>
            <param name="oldChild"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.RemoveChild(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Removes the element from the collection.
            </summary>
            <param name="oldChild"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.AppendChild(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Appends a new child to the children collection.
            </summary>
            <param name="newChild"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementDom.RemoveElement(System.Boolean)">
            <summary>
            Removes the current element from document
            </summary>
            <param name="deep">If <c>true</c>, all child element will be removed too. Otherwise the children will be preserved.</param>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.IElementFactory">
            <summary>
            Factory to create native element objects based on legacy ones.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementFactory.CreateElement(GuruComponents.Netrix.ComInterop.Interop.IHTMLElement)">
            <summary>
            Makes a association between an element and a native element class.
            </summary><remarks>
            In case of an already created object 
            this object is returned instead of creating a new one.
            </remarks>
            <param name="el">The element for that a native object is needed.</param>
            <returns>IElement if creating or retrieving was successful, null else. The caller is responsible to cast to the right class type.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementFactory.ResetElementCache">
            <summary>
            Reset the cache and attached designer collections.
            </summary>
            <remarks>
            The LoadXX methods and InnerHtml call this method implicitly, to under normal circumestances it isn't 
            required to call this from user code.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementFactory.UnRegisterElement(System.String)">
            <summary>
            Removes an element from the list of registered types.
            </summary>
            <remarks>
            The element is recognized by alias and name, divided by colon (asp:button, html:img). The basic
            HTML elements have the alias html, even if the document loaded is not XHTML conform. For
            a HTML comment the name is "!" without an alias. Plug-Ins may define different name schemas.
            </remarks>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.Elements.IElementFactory.CreateElement(GuruComponents.Netrix.ComInterop.Interop.IHTMLElement)"/>
            <param name="elementName">The name of the element type, including the alias (see remarks).</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IElementFactory.GetElementType(System.String)">
            <summary>
            Returns the type of an element.
            </summary>
            <param name="elementName">Name, must be written with alias. Use "html" for standard elements: "html:p".</param>
            <returns>Type of element, if registered, or <c>null</c> otherwise.</returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties">
            <summary>
            Extended properties IElement could provide.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ScrollLeft">
            <summary>
            Current left scroll position.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ScrollTop">
            <summary>
            Current top scroll position.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ScrollHeight">
            <summary>
            Current scroll height.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ScrollWidth">
            <summary>
            Current scroll width.
            </summary>        
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ClientArea">
            <summary>
            Client area the element needs to render completely.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.Normalize">
            <summary>
            Merges adjacent text node objects to produce a normalized document object model.
            </summary>
            <remarks>
            Calling Normalize before manipulating the subelements of an object ensures that the document object model has a consistent structure. The normal form is useful for operations that require a consistent document tree structure, and it ensures that the document object model view is identical when saved and reloaded.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.DoScroll(GuruComponents.Netrix.WebEditing.Elements.ScrollAction)">
            <summary>
            Simulates a click on a scroll-bar component.
            </summary>
            <remarks>
            Cascading Style Sheets (CSS) allow you to scroll on all objects through the IHTMLStyle::overflow property.
            <para>When the content of an element changes and causes scroll bars to display, the IHTMLElement2::doScroll method might not work correctly immediately following the content update. When this happens, you can use the IHTMLWindow2::setTimeout method to enable the browser to recognize the dynamic changes that affect scrolling.</para>
            </remarks>
            <param name="scroll"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ComponentFromPoint(System.Drawing.Point)">
            <summary>
            Returns the component located at the specified coordinates via certain events. 
            </summary>
            <remarks>
            A component is a part of the element, which acts as an specific interaction point. Typically these
            are the scrollbars as well as parts of the scrollbar, and the resizing handles. The property can
            be used to determine such an element at a specific client location.
            <para>The ComponentFromPoint method, available as of MSHTML 5, is applicable to any object that can be given scroll bars through Cascading Style Sheets (CSS).</para> 
            <para>The ComponentFromPoint method may not consistently return the same object when used with the onmouseover event. Because a user's mouse speed and entry point can vary, different components of an element can fire the onmouseover event. For example, when a user moves the cursor over a textArea object with scroll bars, the event might fire when the mouse enters the component border, the scroll bars, or the client region. Once the event fires, the expected element may not be returned unless the scroll bars were the point of entry for the mouse. In this case, the onmousemove event can be used to provide more consistent results.</para>
            </remarks>
            <param name="loc">Location in client coordinates of the point for which the component is retrieved.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ScrollIntoView">
            <overloads/>
            <summary>
            Causes the object to scroll into view, aligning at the top of the window.
            </summary>
            <remarks>
            The ScrollIntoView method is useful for immediately showing the user the result of some action without requiring the user to manually scroll through the document to find the result.
            <para>Depending on the size of the given object and the current window, this method might not be able to put the item at the very top or very bottom, but will position the object as close to the requested position as possible.</para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ScrollIntoView(System.Boolean)">
            <summary>
            Causes the object to scroll into view, aligning it either at the top or bottom of the window.
            </summary>
            <remarks>
            The ScrollIntoView method is useful for immediately showing the user the result of some action without requiring the user to manually scroll through the document to find the result.
            <para>Depending on the size of the given object and the current window, this method might not be able to put the item at the very top or very bottom, but will position the object as close to the requested position as possible.</para>
            </remarks>
            <param name="top">Specifies where to scroll to. If <c>true</c> the element is scrolled to top position.</param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.DOMIndex">
            <summary>
            Retrieves the ordinal position of the object, in source order, as the object appears in the document's all collection.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.SetActive">
            <summary>
            Sets the element as active without setting focus to the element.
            </summary>
            <remarks>The setActive method does not cause the document to scroll to the active object in the current page.</remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.SetCapture(System.Boolean)">
            <summary>
            Set the ability to capture the focus.
            </summary>
            <param name="containerCapture"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.ReleaseCapture">
            <summary>
            Release the ability to capture the focus.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Elements.IExtendedProperties.HideFocus">
            <summary>
            Sets or retrieves the value indicating whether the object visibly indicates that it has focus.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.InsertWhere">
            <summary>
            specifies where to insert the HTML text.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.InsertWhere.BeforeBegin">
            <summary>
            Inserts text immediately before the object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.InsertWhere.AfterBegin">
            <summary>
            Inserts text after the start of the object but before all other content in the object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.InsertWhere.BeforeEnd">
            <summary>
            Inserts text immediately before the end of the object but after all other content in the object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.InsertWhere.AfterEnd">
            <summary>
            Inserts text immediately after the end of the object.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Elements.ScrollAction">
            <summary>
            Defines an action that simulates a click on a scroll-bar component.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarDown">
            <summary>
            Default. Down scroll arrow is at the specified location. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarHThumb">
            <summary>
            Horizontal scroll thumb or box is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarLeft">
            <summary>
            Left scroll arrow is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarPageDown">
            <summary>
            Page-down scroll bar shaft is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarPageLeft">
            <summary>
            Page-left scroll bar shaft is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarPageRight">
            <summary>
            Page-right scroll bar shaft is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarPageUp">
            <summary>
            Page-up scroll bar shaft is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarRight">
            <summary>
            Right scroll arrow is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarUp">
            <summary>
            Up scroll arrow is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.ScrollbarVThumb">
            <summary>
            Vertical scroll thumb or box is at the specified location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.Down">
            <summary>
            Composite reference to scrollbarDown.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.Left">
            <summary>
            Composite reference to scrollbarLeft.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.PageDown">
            <summary>
            Composite reference to scrollbarPageDown.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.PageLeft">
            <summary>
            Composite reference to scrollbarPageLeft.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.PageRight">
            <summary>
            Composite reference to scrollbarPageRight.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.PageUp">
            <summary>
            Composite reference to scrollbarPageUp.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.Right">
            <summary>
            Composite reference to scrollbarRight.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Elements.ScrollAction.Up">
            <summary>
            Composite reference to scrollbarUp.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs">
            <summary>
            Build the glyph string to load user defined resources.
            </summary>
            <remarks>
            This class covers the building of glyph resources internally and holds the corresponding
            properties. By default, NetRix comes with two flavers of glyphs: Standard, similar to 
            former WebMatrix or FrontPage, and colored onces similar to InfoPath/WordXML.
            For proper usage the resource assembly must be present, <i>GuruComponents.Netrix.Resources.dll</i>.
            This assembly contains only image resources, most of them are glyphs, but also contains several
            others.
            <para>
            Note: Changing properties at runtime requires the control to stay in ready state (e.g. <see cref="P:GuruComponents.Netrix.IHtmlEditor.IsReady">IsReady</see> is <c>true</c>).
            We recommend using the ReadyStateComplete event to get informed when the controls turns into ready state.
            </para> 
            </remarks>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.Glyphs"/>
            <seealso cref="E:GuruComponents.Netrix.IHtmlEditor.ReadyStateComplete"/>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.IsReady"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.GlyphKind">
            <summary>
            Gets or sets the kind of glyph shown in the document.
            </summary>
            <remarks>
            This property one should set before activating glyphs by calling GlyphVisible.
            </remarks>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.Glyphs"/>
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.GlyphVariant"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.GlyphVariant">
            <summary>
            Type of glyph we use.
            </summary>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.Glyphs"/>
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.GlyphKind"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.GlyphsVisible">
            <summary>
            Shows or Hides custom glyphs.
            </summary>
            <remarks>
            Glyphs are images representing tags in design view.
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.Glyphs"/>
            <seealso cref="P:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.GlyphKind"/>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.GetDefinitionString(GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind,GuruComponents.Netrix.WebEditing.Glyphs.GlyphVariant)">
            <summary>
            Return the glyphs definition string used internally.
            </summary>
            <param name="glyphsKind"></param>
            <param name="glyphVariant"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.#ctor(GuruComponents.Netrix.IHtmlEditor)">
            <summary>
            Ctor which creates an instance of the glyph build and management class.
            </summary>
            <param name="htmlEditor">Reference to attached editor.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Glyphs.BuildGlyphs.ToString">
            <summary>
            Support for design time.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Glyphs.GlyphVariant">
            <summary>
            Defines the variant in which the selected glyph appears.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.GlyphVariant.Standard">
            <summary>
            NetRix standard glyphs, mimic vs.net or web matrix.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.GlyphVariant.Colored">
            <summary>
            Colored glyphs, mimic Office Word/InfoPath 2003.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.GlyphVariant.Custom">
            <summary>
            Calls an external resource file with custom glyphs. Not yet implemented.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs">
            <summary>
            Holds information about one glyph and it's current state.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.DefinitionString">
            <summary>
            Returns the current definition string, used by resources which show glyphs.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.Height">
            <summary>
            Height of glyph.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.ImageUrl">
            <summary>
            URL of glyph within the resource file.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.Key">
            <summary>
            Key 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.Tag">
            <summary>
            Tag name.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.Type">
            <summary>
            Glyph type
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.Visible">
            <summary>
            Visible or not (only recognized during copy operation, not interactive).
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.Width">
            <summary>
            Width of glyph.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.#ctor">
            <summary>
            Default ctor for glyph information class.
            </summary>
            <remarks>
            The default settings are:
            <list type="bullet">
                <item>Tag: Empty</item>
                <item>Url: Empty</item>
                <item>Type: BothTags</item>
                <item>Width: 32</item>
                <item>Height: 16</item>
                <item>Visible: False</item>
            </list>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.#ctor(System.String,GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsType,System.String,System.Int32,System.Int32)">
            <summary>
            Internally used ctor for glyph information class.
            </summary>
            <remarks>
            The default settings are:
            <list type="bullet">
                <item>Tag: Parameter</item>
                <item>Url: Parameter</item>
                <item>Type: Parameter</item>
                <item>Width: Parameter</item>
                <item>Height: Parameter</item>
                <item>Visible: True</item>
            </list>
            </remarks>
            <param name="tag">Tag this definition refers to.</param>
            <param name="type">Type of glyph.</param>
            <param name="imageUrl">URL of resource</param>
            <param name="width">Width in pixel (will bend image to fit into given value).</param>
            <param name="height">Height in pixel (will bend image to fit into given value).</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.#ctor(System.String,GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsType,System.String,System.String)">
            <summary>
            Internally used ctor for glyph information class.
            </summary>
            <param name="tag"></param>
            <param name="type"></param>
            <param name="imageUrl"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphs.ToString">
            <summary>
            Overriden to support PropertyGrid if publicitly editable.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind">
            <summary>
            Type of glyphs displayed in the document.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.None">
            <summary>
            No glyphs shown.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.AllTags">
            <summary>
            All tags get a glyph sign.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.AlignedSite">
            <summary>
            Tags with align attributes only. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.ScriptTags">
            <summary>
            Script tags only. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.StyleTags">
            <summary>
            Style tags only. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.CommentTags">
            <summary>
            Only comments are presented as glyphs. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.AreaTags">
            <summary>
            Only area tags. Currently not implemented.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.InvisibleTags">
            <summary>
            Only insisible tags are shown. Use to replace the not implemented options.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.TableTags">
            <summary>
            Table tags only. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.MiscTags">
            <summary>
            Only other tags. Currently not implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.WordPara">
            <summary>
            Shows the word like 'P' sign as the one and only glyph.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsKind.WordParaDivBr">
            <summary>
            Shows the word like 'P' sign as glyph for &lt;p&gt; and &lt;div&gt; on closing tag, as well as the small arrow for &lt;br&gt; tags.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsType">
            <summary>
            The type of glyph we use to for a specific tag.
            </summary>
            <remarks>
            Most tags support opening and closing glyph. Some which don't appear as containers, like BR,
            do support opening tag only. Some others, which do cover mostly a rectangle region, like TABLE or IMG,
            may accept both options, but still display the opening tag only.
            However, for some inline tags like STRONG or EM, both glyphs are supported and makes perfectly sense.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsType.OpenTag">
            <summary>
            Glyph appears for opening tag only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsType.CloseTag">
            <summary>
            Glyph appears for closing tag only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Glyphs.HtmlGlyphsType.BothTags">
            <summary>
            Glyph appear for both tags.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.ColorType">
            <summary>
            Type of Color in HighLightColor object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ColorType.Color">
            <summary>
            Any color value.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ColorType.Inherit">
            <summary>
            Color of the parent object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ColorType.Auto">
            <summary>
            Color of the text is determined by the browser; for example, by default or inheritance. Default.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ColorType.Transparent">
            <summary>
            Sets the color to transparent color.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.CompareUnit">
            <summary>
            Compares the end point of a text range with the end point of another range.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.CompareUnit.StartToEnd">
            <summary>
            Compares the position of the start with the end of the other range.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.CompareUnit.StartToStart">
            <summary>
            Compares the position of the start with the start of the other range.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.CompareUnit.EndToStart">
            <summary>
            Compares the position of the end with the start of the other range.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.CompareUnit.EndToEnd">
            <summary>
            Compares the position of the end with the end of the other range.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.ContextType">
            <summary>
            An enumerated type that contains the different options for the Pointer behavior.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.None">
            <summary>
            There is no markup content next to the markup pointer in the specified direction.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.Text">
            <summary>
            The markup content next to the markup pointer in the specified direction is text.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.EnterScope">
            <summary>
            An element's opening tag is next to the markup pointer in the specified direction.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.ExitScope">
            <summary>
            An element's closing tag is next to the markup pointer in the specified direction.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.NoScope">
            <summary>
            A element that doesn't have a closing tag, like a br, is next to the markup pointer in the specified direction.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.IHighlightColor">
            <summary>
            Defines a color with additional properties.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighlightColor.ColorName">
            <summary>
            Color name
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighlightColor.ColorValue">
            <summary>
            Color value
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighlightColor.Type">
            <summary>
            Color type.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightSegment">
            <summary>
            HighLightSegment holds a highlighting object and provides a remove method to remove the decoration
            at a later time.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightSegment.RemoveSegment">
            <summary>
            This method removes the highlight decoration from the segment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle">
            <summary>
            Defines a style for customized HighLighting.
            </summary>
            <remarks>
            This used as a parameter for the HighLight services, 
            which add specific styles to elements or text selections without changing the document or DOM
            during design time. The style type depends on the constructor used to instantiate the object.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle.Priority">
            <summary>
            Defines the property of the style.
            </summary>
            <remarks>
            Properties with higher priority override properties with lower priority. The default value is 0, 
            and the higher the number, the higher the priority. The rendering priority has a limit of 9.
            <para>
            If two properties of the IHTMLRenderStyle interface are applied to the same text selection, 
            the property with higher rendering priority overrides the property with lower rendering priority. 
            If you allow two properties of the IHTMLRenderStyle interface to have the same rendering priority, 
            the control will not be able to determine which property will override the other.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle.TextColor">
            <summary>
            Sets or retrieves the color of the text in the object.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle.TextBackgroundColor">
            <summary>
            Sets or retrieves the color behind the text in the object.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle.UnderlineStyle">
            <summary>
            Sets or retrieves the appearance of the underline decoration of the object.
            </summary>
            <remarks>
            This property supports the thick-dash value as of Internet Explorer 6.
            <seealso cref="T:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle">UnderlineStyle</seealso>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle.LineThroughStyle">
            <summary>
            Sets or retrieves the appearance of the line-through decoration of the object.
            </summary>
            <remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.HighLighting.LineThroughStyle">LineThroughStyle</seealso>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle.LineColor">
            <summary>
            Sets or retrieves the color of the line-through, overline, or underline decorations of the object.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle.LineType">
            <summary>
            Sets or retrieves whether the text in the object renders with a line-through, overline, or underline decoration.
            </summary>
            <remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.HighLighting.LineType">LineType</seealso>
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector">
            <summary>
            Interface allows access to text selection features.
            </summary>
            <remarks>
            Retrieve an instance by accessing the <see cref="P:GuruComponents.Netrix.IHtmlEditor.TextSelector">TextSelector</see> property of base control.
            </remarks>
            <seealso cref="P:GuruComponents.Netrix.IHtmlEditor.TextSelector"/>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetSelectionPosition(GuruComponents.Netrix.WebEditing.Elements.IElement,System.Int64@,System.Int64@)">
            <summary>
            Returns the current selection positions, based on markup pointers, within a given element.
            </summary>
            <remarks>
            The values ignore all HTML formatting and count just characters. Returns -1 for both if there is no selection.
            <para>
            The method expects an element object. See other overload to retrieve within the body.
            </para>
            <para>
            This method does not interfer other method in this class. It's deterministic in any way.
            </para>
            </remarks>
            <param name="withinElement">Element within the selection is searched.</param>
            <param name="posStart">Returns the start position within the body range, in characters, zero based.</param>
            <param name="posEnd">Returns the start position within the body range, in characters, zero based.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetSelectionPosition(System.Int64@,System.Int64@)">
            <summary>
            Returns the current selection positions, based on markup pointers.
            </summary>
            <remarks>
            The values ignore all HTML formatting and count just characters. Returns -1 for both if there is no selection.
            <para>
            This method does not interfer other method in this class. It's deterministic in any way.
            </para>
            </remarks>
            <param name="posStart">Returns the start position within the body range, in characters, zero based.</param>
            <param name="posEnd">Returns the start position within the body range, in characters, zero based.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SetPointerGravity(GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection,GuruComponents.Netrix.WebEditing.HighLighting.PointerGravity)">
            <summary>
            Sets the gravity attribute of this pointer.
            </summary>
            <param name="pointer">The Pointer which gravity is to set.</param>
            <param name="gravity">The gravity which is to set.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetPointerInformation(System.Boolean)">
            <overloads/>
            <summary>
            Returns a collection of information about both pointers.
            </summary>
            <remarks>
            The number of character the information method retrieves is set to 1.
            <seealso cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetPointerInformation(System.Boolean,System.Int32)"/>
            </remarks>
            <param name="Move">Value that specifies TRUE if the pointer is to move past the content to the left (right respectively), or FALSE otherwise. If TRUE, the pointer will move either to the other side of the tag to its left, or up to the number of characters specified by parameter tryChars, depending on the <see cref="T:GuruComponents.Netrix.WebEditing.HighLighting.ContextType"/> to the pointer's left (right respectively).</param>
            <returns>Returns a structure with basic pointer informations.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetPointerInformation(System.Boolean,System.Int32)">
            <summary>
            Returns a collection of information about both pointers.
            </summary>
            <remarks>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetPointerInformation(System.Boolean)"/>
            </remarks>
            <param name="Move">Value that specifies TRUE if the pointer is to move past the content to the left (right respectively), or FALSE otherwise. If TRUE, the pointer will move either to the other side of the tag to its left, or up to the number of characters specified by parameter tryChars, depending on the <see cref="T:GuruComponents.Netrix.WebEditing.HighLighting.ContextType"/> to the pointer's left (right respectively).</param>
            <param name="tryChars">Variable that specifies the number of characters to retrieve to XXXRetrieveChars property, if <see cref="T:GuruComponents.Netrix.WebEditing.HighLighting.ContextType"/> is <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.Text"/>, 
            and receives the actual number of characters the method was able to retrieve. It can be set to -1, 
            indicating that the method should retrieve an arbitrary amount of text, up to the next no-scope element 
            or element scope transition.</param>
            <returns>Returns a structure with basic pointer informations.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetMarkupPosition(GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection)">
            <summary>
            Retrieves the position of a markup pointer. 
            </summary>
            <remarks>As long as the pointer's positioned, the method can be used to retrieve the carets position at line.</remarks>
            <returns>Returns markup pointer's position</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.IsAtWordBreak(GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection)">
            <summary>
            Determines if the markup pointer is positioned at a word break.
            </summary>
            <param name="pointer">If <c>False</c> the first Pointer is checked, the second otherwise.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.IsInsideURL(GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection)">
            <summary>
            Determines if a markup pointer is located inside of, at the beginning of, or at the end of text that is formatted as a URL. 
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveToElementContent(GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection,GuruComponents.Netrix.WebEditing.Elements.IElement,System.Boolean)">
            <summary>
            Moves a markup pointer to a particular element in a markup container.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveUnitBounded(GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection,GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit)">
            <summary>
            Moves a markup pointer to a specified location in a specified direction, but not past the other markup pointer. 
            </summary>
            <remarks>
            This method can simplify the usage of pointers, because it avoids an frequently mistake which results
            in some loss of functionality; the positioning of the second pointer before the first one.  
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SetHighLightStyle(GuruComponents.Netrix.WebEditing.HighLighting.IHighLightStyle)">
            <summary>
            Set the default highlight style.
            </summary>
            <remarks>
            This methiod pre-sets the highlight style. The current selection will not be changeds.
            </remarks>
            <param name="HighLightStyle">The highlight style object which is used from now on.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.HighLightRange">
            <summary>
            Highlights the current range.
            </summary>
            <remarks>
            This method cannot work if no text fragment was selected before call. The highlight style should be set
            before first call.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.DeleteRangeText">
            <summary>
            This method deletes the content of the current base range.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.ResetRangePointers">
            <summary>
            Reset the range pointer to the beginning of the document. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.LastSegment">
            <summary>
            Returns the last added highlight segment.
            </summary>
            <remarks>
            This segment contains a method which can be used to remove the segment later.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.RemoveHighLighting">
            <summary>
            Remove all highlighted fragments.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SelectPointerRange">
            <overloads>This method has two overloads.</overloads>
            <summary>
            Select the current range between two pointers.
            </summary>
            <remarks>
            This method does not scroll into view if the fragment selected was outside the designer surface.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SelectPointerRange(System.Boolean)">
            <summary>
            Select the current range between two pointers.
            </summary>
            <remarks>
            Assure to set the text pointers before calling this method.
            </remarks>
            <param name="ScrollIntoView">If set to <c>true</c> the control tries to scroll the selected range into the visible area.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SelectRange(System.String)">
            <overloads>This method has two overloads.</overloads>
            <summary>
            Selects a previously selected and stored fragment.
            </summary>
            <remarks>
            This method does not scroll into view if the fragment selected was outside the designer surface.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SelectRange(System.String,System.Boolean)">
            <summary>
            Selects a previously selected and stored fragment.
            </summary>
            <param name="key">The name of the stored fragment.</param>
            <param name="ScrollIntoView">If set to <c>true</c> the control tries to scroll the selected range into the visible area.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetTextBetweenPointers">
            <summary>
            Returns the text between two valid pointers.
            </summary>
            <returns>The text between the pointers. HTML tags are stripped out.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetHtmlBetweenPointers">
            <summary>
            Returns the HTML between two valid pointers.
            </summary>
            <returns>The text between the pointers. HTML tags are preserved.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SetTextBetweenPointers(System.String)">
            <summary>
            Set (overwrite) all text between current pointers.
            </summary>
            <param name="text">Text to be written.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SetHtmlBetweenPointers(System.String)">
            <summary>
            Set (overwrite) all text between current pointers with HTML.
            </summary>
            <param name="html">Html to be written.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.DeleteTextBetweenPointers">
            <summary>
            Deletes the text between the pointers. 
            </summary>
            <remarks>If the selection is fragmented HTML a valid structure will be rebuild.</remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.FindTextBetweenPointers(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Searches a text between the pointers.
            </summary>
            <remarks>
            This is a nice enhancement of the regular find function to narrow a search. It searches the whole document,
            but starts searching using the current pointer position. So in case you want to restart search from the
            beginning, just set the pointers back by calling <see cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MovePointersToElement(GuruComponents.Netrix.WebEditing.Elements.IElement,System.Boolean)"/>, <see cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveFirstPointer(GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer)"/>,
            or <see cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveSecondPointer(GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer)"/>.
            </remarks>
            <param name="searchString">A string to search for.</param>
            <param name="upWards">Search upwards.</param>
            <param name="matchCase">Must be set to <c>true</c> if match case is required.</param>
            <param name="wholeWord">Must set to <c>true</c> if only whole words should be found.</param>
            <returns>Returns <c>true</c> if something was found, <c>false</c> otherwise. Also returns <c>false</c> in case document ends.</returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.ResetFindWordPointer">
            <summary>
            Call this to reset the pointers to catch the whole document.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveFirstPointer(GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer)">
            <summary>
            Move the first pointer.
            </summary>
            <remarks>
            The pointers can be used to create a range. The range can be moved too, using the
            <see cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveCurrentRange(GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit,System.Int32)">MoveCurrentRange</see>
            method.
            </remarks>
            <param name="Move">The first pointer will be moved to the given destination.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MovePointersToCaret">
            <summary>
            Move the pointers to the caret to start next positioning around the caret.
            </summary>
            <remarks>
            It is recommended to set the pointers actively before any caret related move operation starts.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveSecondPointer(GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer)">
            <summary>
            Move the second pointer.
            </summary>
            <remarks>
            The pointers can be used to create a range. The range can be moved too, using the
            <see cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveCurrentRange(GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit,System.Int32)">MoveCurrentRange</see>
            method.
            </remarks>
            <param name="Move">The second pointer will be moved to the given destination.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveCurrentRange(GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit,System.Int32)">
            <summary>
            Move the current range completely.
            </summary>
            <param name="Move"></param>
            <param name="Count"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveCurrentRangeStart(GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit,System.Int32)">
            <summary>
            Moves the current range start point.
            </summary>
            <remarks>
            This method may fail if the start point is beyond the end point.
            </remarks>
            <param name="Move"></param>
            <param name="Count"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveCurrentRangeEnd(GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit,System.Int32)">
            <summary>
            Moves the current range end point.
            </summary>
            <remarks>
            This method may fail if the end point is before the start point.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SaveCurrentRange(System.String)">
            <summary>
            Stores the current range for later access.
            </summary>
            <remarks>
            This method can be used with the highlighting feature to highlight a prepared range later.
            </remarks>
            <param name="key"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.ClearRangeStore">
            <summary>
            Clears all stored ranges.
            </summary>
            <remarks>
            This removes highlighting and stored range pointers, but preserves the text selected with the range.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.IsInCurrentRange(System.String)">
            <summary>
            This method checks if a stored range is inside the current range.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.EqualsCurrentRange(System.String)">
            <summary>
            This method checks if a stored range equals the current range.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.CompareEndPoints(GuruComponents.Netrix.WebEditing.HighLighting.CompareUnit,System.String)">
            <summary>
            This method compares the endpoints.
            </summary>
            <param name="compare"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.ScrollIntoView(System.Boolean)">
            <summary>
            Causes the object to scroll into view, aligning either to top or bottom of the window.
            </summary>
            <remarks>
            Depending on the size of the given range the control may not be able to scroll exactly to the very top or 
            very bottom of the window, but will position the object as close to the requested position as possible.
            </remarks>
            <param name="atStart"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveCaretToPointer(System.Boolean)">
            <summary>
            Moves the caret (insertion point) to the beginning or end of the current range.
            </summary>
            <param name="atStart"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.ExpandRange(GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit)">
            <summary>
            Expand the current range to that partial units are completely contained.
            </summary>
            <param name="ExpandTo"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SelectElementText(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Selects the whole text of the given element.
            </summary>
            <remarks>
            This is a mixed mode command, uses internally Pointers and Ranges. The command will move both 
            pointers to the elements boundaries. Then the current base range is set to these pointers and finally
            used to set the elements content. After all the changed content is selected and scrolled into view.
            </remarks>
            <param name="element">Any element object that implements <see cref="T:GuruComponents.Netrix.WebEditing.Elements.IElement">IElement</see> and that does contain selectable text.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MovePointersToElement(GuruComponents.Netrix.WebEditing.Elements.IElement,System.Boolean)">
            <summary>
            Set the pointers to the inner border of the tag.
            </summary>
            <param name="element">The tag from which the content should be highlighted. </param>
            <param name="withRange">Whether or not the current base range should follow the pointers immediataly.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.MoveRangeToPointers">
            <summary>
            Move the range to current pointers.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetTextInRange">
            <summary>
            Returns the text available in the current range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetHtmlInRange">
            <summary>
            Returns the HTML available in the current range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SetTextInRange(System.String)">
            <summary>
            Overwrite all text in range.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetTextInStoredRange(System.String)">
            <summary>
            Return text of a stored range.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.GetHtmlInStoredRange(System.String)">
            <summary>
            Return HTML of the stored range.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SelectRange">
            <summary>
            Select the current range.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.PasteHtml(GuruComponents.Netrix.WebEditing.Elements.IElement,System.String)">
            <summary>
            Paste the HTML text into the element.
            </summary>
            <remarks>
            Element must be of type container. The HTML must be valid after pasting.
            </remarks>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.Paste(GuruComponents.Netrix.WebEditing.Elements.IElement)"/>
            <param name="element">The element in which the HTML has to be pasted.</param>
            <param name="html">Any valid HTML text.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.Paste(GuruComponents.Netrix.WebEditing.Elements.IElement)">
            <summary>
            Paste the Clipboard text into the element.
            </summary>
            <remarks>
            Element must be of type container. The HTML must be valid after pasting.
            </remarks>
            <seealso cref="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.PasteHtml(GuruComponents.Netrix.WebEditing.Elements.IElement,System.String)"/>
            <exception cref="T:System.ArgumentException">Thrown if the clipboard has no valid data. Expected formats are HTML and Text.</exception>
            <param name="element">The element in which the HTML has to be pasted.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.Paste">
            <summary>
            Paste the current content of clipboard at current caret position and let pointers and range follow the insertion point.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.HighLighting.ITextSelector.SyncRangeWithSelection">
            <summary>
            Take the current selection and set the pointer to stay in sync with that selection.
            </summary>
            <returns>Returns <c>true</c> if successful (selection exists).</returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.LineThroughStyle">
            <summary>
            Defines the available Styles for underlining. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.LineThroughStyle.Undefined">
            <summary>
            Text decoration has no specified style. The value is set automatically; for example, by default or inheritance. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.LineThroughStyle.Single">
            <summary>
            Text has one line drawn through it. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.LineThroughStyle.Double">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.LineType">
            <summary>
            Defines the available Styles for underlining. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.LineType.None">
            <summary>
            Text decoration has no specified style. The value is set automatically; for example, by default or inheritance. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.LineType.Auto">
            <summary>
            Text has one line drawn below it. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.LineType.Overline">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.LineType.Underline">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.LineType.LineThrough">
            <summary>
            Text has a dotted line drawn below it. 
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer">
            <summary>
            Controls the movement of text pointers.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevChar">
            <summary>
            Move the pointer one character backwards.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextChar">
            <summary>
            Move the pointer one character forward.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevClusterBegin">
            <summary>
            Move the pointer to the beginning of the previous cluster.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextClusterBegin">
            <summary>
            Move the pointer to the beginning of the next cluster.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevClusterEnd">
            <summary>
            Move the pointer to the end of the previous cluster.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextClusterEnd">
            <summary>
            Move the pointer to the end of the next cluster.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevWordBegin">
            <summary>
            Move the pointer to the beginning of the previous word.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextWordBegin">
            <summary>
            Move the pointer to the beginning of the next word.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevWordEnd">
            <summary>
            Move the pointer to the end of the previous word.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextWordEnd">
            <summary>
            Move the pointer to the end of the next word.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevProofWord">
            <summary>
            Move the pointer to the previous word to proof.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextProofWord">
            <summary>
            Move the pointer to next word to proof.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextUrlBegin">
            <summary>
            Move the pointer to the beginning of the next URL.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevUrlBegin">
            <summary>
            Move the pointer to the beginning of the previous URL.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextUrlEnd">
            <summary>
            Move the pointer to the end of the next URL.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevUrlEnd">
            <summary>
            Move the pointer to the end of the previous URL.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevSentence">
            <summary>
            Move the pointer to the previous sentence.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextSentence">
            <summary>
            Move the pointer to the next sentence.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.PrevBlock">
            <summary>
            Move the pointer to the previous block.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveTextPointer.NextBlock">
            <summary>
            Move the pointer to the next block.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit">
            <summary>
            To move a pointer a given number of units this enumeration indication the kind of unit.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit.Character">
            <summary>
            Move the give number of characters.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit.Word">
            <summary>
            Move the give number of words.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit.Sentence">
            <summary>
            Move the give number of sentences.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.MoveUnit.TextEdit">
            <summary>
            Move back to the original pointer locations.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.PointerGravity">
            <summary>
            An enumerated type that indicates whether a markup pointer will stay with the markup to its right or left when markup is inserted at the pointer's location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerGravity.Left">
            <summary>
            The pointer will stay with the markup to its left.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerGravity.Right">
            <summary>
            The pointer will stay with the markup to its right.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation">
            <summary>
            Returns some useful information about the underlying pointer.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.IsPositioned">
            <summary>
            Checks the position of the pointer.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstIsRightOfSecond">
            <summary>
            Checks to see whether first pointer's position is to the right of second pointer's position.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.PointersAreEqual">
            <summary>
            The first and the second pointer have the same location.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerCling">
            <summary>
            The cling attribute determines whether a markup pointer will move or be deleted with the markup around it when the markup is moved or deleted.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerCling">
            <summary>
            The cling attribute determines whether a markup pointer will move or be deleted with the markup around it when the markup is moved or deleted.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerLeftElementScope">
            <summary>
            An IElement interface for the element, if any, that is coming into scope, is exiting scope, 
            or is a no-scope element (such as a br element), as specified by ContextType.
            </summary>
            <remarks>
            Applies to the first pointer and its left scope.
            See <see cref="T:GuruComponents.Netrix.WebEditing.HighLighting.ContextType"/> for more information about the scope behavior.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerRightElementScope">
            <summary>
            An IElement interface for the element, if any, that is coming into scope, is exiting scope, 
            or is a no-scope element (such as a br element), as specified by ContextType.
            </summary>
            <remarks>
            Applies to the first pointer and its right scope.
            See <see cref="T:GuruComponents.Netrix.WebEditing.HighLighting.ContextType"/> for more information about the scope behavior.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerLeftElementScope">
            <summary>
            An IElement interface for the element, if any, that is coming into scope, is exiting scope, 
            or is a no-scope element (such as a br element), as specified by ContextType.
            </summary>
            <remarks>
            Applies to the second pointer and its left scope.
            See <see cref="T:GuruComponents.Netrix.WebEditing.HighLighting.ContextType"/> for more information about the scope behavior.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerRightElementScope">
            <summary>
            An IElement interface for the element, if any, that is coming into scope, is exiting scope, 
            or is a no-scope element (such as a br element), as specified by ContextType.
            </summary>
            <remarks>
            Applies to the second pointer and its right scope.
            See <see cref="T:GuruComponents.Netrix.WebEditing.HighLighting.ContextType"/> for more information about the scope behavior.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerLeftRetrievedLength">
            <summary>
            Property that specifies the number of characters to retrieve.
            </summary>
            <remarks>
            Property that specifies the number of characters to retrieve to <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerLeftRetrievedChars"/>, 
            if <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerLeftContext"/> is <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.Text"/>, and receives the actual 
            number of characters the method was able to retrieve. It can be set to -1, indicating that 
            the method should retrieve an arbitrary amount of text, up to the next no-scope element or element 
            scope transition.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerRightRetrievedLength">
            <summary>
            Property that specifies the number of characters to retrieve.
            </summary>
            <remarks>
            Property that specifies the number of characters to retrieve to <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerRightRetrievedChars"/>, 
            if <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerRightContext"/> is <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.Text"/>, and receives the actual 
            number of characters the method was able to retrieve. It can be set to -1, indicating that 
            the method should retrieve an arbitrary amount of text, up to the next no-scope element or element 
            scope transition.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerLeftRetrievedLength">
            <summary>
            Property that specifies the number of characters to retrieve.
            </summary>
            <remarks>
            Property that specifies the number of characters to retrieve to <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerLeftRetrievedChars"/>, 
            if <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerLeftContext"/> is <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.Text"/>, and receives the actual 
            number of characters the method was able to retrieve. It can be set to -1, indicating that 
            the method should retrieve an arbitrary amount of text, up to the next no-scope element or element 
            scope transition.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerRightRetrievedLength">
            <summary>
            Property that specifies the number of characters to retrieve.
            </summary>
            <remarks>
            Property that specifies the number of characters to retrieve to <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerRightRetrievedChars"/>, 
            if <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerRightContext"/> is <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.ContextType.Text"/>, and receives the actual 
            number of characters the method was able to retrieve. It can be set to -1, indicating that 
            the method should retrieve an arbitrary amount of text, up to the next no-scope element or element 
            scope transition.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerLeftRetrievedChars">
            <summary>
            String that receives the text specified, by <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerLeftRetrievedLength"/>.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerRightRetrievedChars">
            <summary>
            String that receives the text specified, by <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.FirstPointerRightRetrievedLength"/>.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerLeftRetrievedChars">
            <summary>
            String that receives the text specified, by <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerLeftRetrievedLength"/>.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerRightRetrievedChars">
            <summary>
            String that receives the text specified, by <see cref="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerInformation.SecondPointerRightRetrievedLength"/>.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection">
            <summary>
            Selects a Pointer for operations which relates to one pointer only.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection.First">
            <summary>
            Use the first pointer (mostly the left one).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.PointerSelection.Second">
            <summary>
            Use the second pointer (mostly the right one).
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle">
            <summary>
            Defines the available Styles for underlining. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.Undefined">
            <summary>
            Text decoration has no specified style. The value is set automatically; for example, by default or inheritance. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.Single">
            <summary>
            Text has one line drawn below it. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.Double">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.Words">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.Dotted">
            <summary>
            Text has a dotted line drawn below it. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.Thick">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.Dash">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.DotDash">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.DotDotDash">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.Wave">
            <summary>
            Text has a wavy line drawn below it. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.SingleAccounting">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.DoubleAccounting">
            <summary>
            Not currently implemented. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.HighLighting.UnderlineStyle.ThickDash">
            <summary>
            Text has a dashed line drawn below it that has thicker width. 
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.FontUnit">
            <summary>
            This enumeration returns the names and values of the possible
            values used for the "size" attribute of "font" tag.
            </summary>
            <remarks>
            If a dialog
            applies to CSS "font-size" and HTML font tag with size attribute
            you must think about the relation between the named parameters.
            The x-small in CSS does not correspond exactly to the value 2 in 
            HTML, whereas HTML parameter "7" has no direct counterpart in CSS.
            <para>
            A full description about the implementation details can be found
            here: 
            <link>http://style.cleverchimp.com/font_size_intervals/altintervals.html</link>.
            </para>
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.Empty">
            <summary>
            Remove size attribute
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.XXSmall">
            <summary>
            Set the size attribute to the value 1.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.XSmall">
            <summary>
            Set the size attribute to the value 2.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.Small">
            <summary>
            Set the size attribute to the value 3.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.Medium">
            <summary>
            Set the size attribute to the value 4.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.Large">
            <summary>
            Set the size attribute to the value 5.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.XLarge">
            <summary>
            Set the size attribute to the value 6.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.XXLarge">
            <summary>
            Set the size attribute to the value 7.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.Smaller">
            <summary>
            Set the size attribute to the value -1.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.FontUnit.Larger">
            <summary>
            Set the size attribute to the value +1.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.ReadyState">
            <summary>
            Current loader state.
            </summary>
            <remarks>
            If parsing fails for some reason the "Ready" state is never reached.
            When using this state a time out value is required.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.ReadyState.Loading">
            <summary>
            Is in loading state, e.g. it's loading, but not yet parsed.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.ReadyState.Interactive">
            <summary>
            Is in interactive state, e.g. it's loaded and control is now parsing.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.ReadyState.Complete">
            <summary>
            Is ready, e.g. parsing is done successfully.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.BackgroundRepeat">
            <summary>
            Controls how the backgroundImage property of the object is tiled.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundRepeat.Repeat">
            <summary>
            Default. Image is repeated horizontally and vertically.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundRepeat.NoRepeat">
            <summary>
            Image is not repeated. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundRepeat.RepeatX">
            <summary>
            Image is repeated horizontally. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundRepeat.RepeatY">
            <summary>
            Image is repeated vertically. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundRepeat.NotSet">
            <summary>
            The value is not set. If assigned as value the attribute is being removed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.BackgroundStyles">
            <summary>
            Background Styles.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundStyles.Color">
            <summary>
            Any of the range of color values available to the backgroundColor property.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundStyles.Image">
            <summary>
            Any of the range of image values available to the backgroundImage property. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundStyles.Repeat">
            <summary>
            Any of the range of repeat values available to the backgroundRepeat property. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundStyles.Attachment">
            <summary>
            Any of the range of attachment values available to the backgroundAttachment property. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundStyles.Position">
            <summary>
            Any of the range of position values available to the backgroundPosition property. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundStyles.None">
            <summary>
            Not defined.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.BackgroundStyles.NotSet">
            <summary>
            The value is not set. If assigned as value the attribute is being removed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.ClearStyles">
            <summary>
            Defines whether the object allows floating objects on its left side, right side, or both, so that the next text displays past the floating objects.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ClearStyles.None">
            <summary>
            Default. Floating objects are allowed on both sides. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ClearStyles.Left">
            <summary>
            Object is moved below any floating object on the left side. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ClearStyles.Right">
            <summary>
            Object is moved below any floating object on the right side. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ClearStyles.Both">
            <summary>
            Object is moved below any floating object. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ClearStyles.NotSet">
            <summary>
            The value is not set. If assigned as value the attribute is being removed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.ClipFormat">
            <summary>
            Defines the type of clip style.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ClipFormat.Auto">
            <summary>
            The clip format is auto detected.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ClipFormat.Rectangle">
            <summary>
            The clip format is a rectangle.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ClipFormat.NotSet">
            <summary>
            The value is not set. If assigned as value the attribute is being removed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.ClipStyle">
            <summary>
            Defines which part of a positioned object is visible.</summary>
            <remarks>
            Top, right, bottom, and left specify length values, any of which can be replaced by auto, leaving that side not clipped. The value of top specifies that everything above this value on the Y axis (with 0 at the top) is clipped. The value of right specifies that everything above this value on the X axis (with 0 at the left) is clipped. The value of bottom specifies that everything below this value on the Y axis (with 0 at the top) is clipped. The value of left specifies that everything to the left of this value on the X axis (with 0 at the left) is clipped.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.ClipStyle.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ClipStyle.Left">
            <summary>
            The left value of the clip area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ClipStyle.Right">
            <summary>
            The right value of the clip area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ClipStyle.Top">
            <summary>
            The top value of the clip area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ClipStyle.Bottom">
            <summary>
            The bottom value of the clip area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ClipStyle.ClipType">
            <summary>
            The clip type.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ClipStyle.ClipString">
            <summary>
            Gets or sets the string value representation of the clip area.
            </summary>
            <remarks>
            The clip format is "auto" or "rect(top right bottom left)" where the values are given in
            typical style sheet measures (px, pt, ...).
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IBackground">
            <summary>
            Background style information.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.background">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundPositionHorizontalAlign">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundPositionUnit">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundPositionVerticalAlign">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundPositionX">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundPositionY">
            <summary>
            
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackground.backgroundRepeat">
            <summary>
            
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IElementStyle">
            <summary>
            IStyle gives interactive access to each property of a style rule.
            </summary>
            <remarks>
            CssStyle class implements IStyle interface.
            A style definition is either an inline style (attribute style of any stylable element) or the
            definition part of a style rule. A rule is a combination of a descriptor and a style.
            <para>
            The purpose of this class is to have an isolated store for CSS definitions. This behaves slightly
            different from the styles defined as part of the elements. The native class CssStyle allows access
            to style definitions using the <see cref="T:System.Windows.Forms.PropertyGrid">PropertyGrid</see> and
            not the NetRix StyleEditor. 
            </para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.BackgroundStyle">
            <summary>
            Access the background styles.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.BorderStyle">
            <summary>
            Access the border styles.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.FontStyle">
            <summary>
            Access the font styles.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.MarginStyle">
            <summary>
            Access the margin styles.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.PaddingStyle">
            <summary>
            Access the padding styles.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.TextDecorationStyle">
            <summary>
            Access the text decoration styles.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.clear">
            <summary>
            Sets or retrieves whether the object allows floating objects on its left side, right side, or both, so that the next text displays past the floating objects. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.color">
            <summary>
            Sets or retrieves the color of the text of the object.  
            </summary>
            <remarks>
            Some browsers do not recognize color names, but all browsers should 
            recognize RGB color values and display them correctly.
            Therefore the property returns always RGB values, even if the value 
            was previously set using names. This is a different behavior compared to the original MSHTML.
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.cssText">
            <summary>
            Sets or retrieves the persisted representation of the style rule. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.cursor">
            <summary>
            Sets or retrieves the type of cursor to display as the mouse pointer moves over the object.  
            </summary>
            <remarks>
            <list type="table">
            <listheader><item>Cursor String</item><item>Definition</item></listheader>
            <item>all-scroll</item><item> Internet Explorer 6 and later. Arrows pointing up, down, left, and right with a dot in the middle, indicating that the page can be scrolled in any direction. </item>
            <item>auto</item><item>Default. Browser determines which cursor to display based on the current context. </item>
            <item>col-resize</item><item>Internet Explorer 6 and later. Arrows pointing left and right with a vertical bar separating them, indicating that the item/column can be resized horizontally. </item>
            <item>crosshair</item><item>Simple cross hair. </item>
            <item>default</item><item>Platform-dependent default cursor; usually an arrow. </item>
            <item>hand</item><item>Hand with the first finger pointing up, as when the user moves the pointer over a link. </item>
            <item>help</item><item>Arrow with question mark, indicating help is available. </item>
            <item>move</item><item>Crossed arrows, indicating something is to be moved.           </item>
            <item>no-drop</item><item>Internet Explorer 6 and later. Hand with a small circle with a line through it, indicating that the dragged item cannot be dropped at the current cursor location. </item>
            <item>not-allowed</item><item>Internet Explorer 6 and later. Circle with a line through it, indicating that the requested action will not be carried out. </item>
            <item>pointer</item><item>Internet Explorer 6 and later. Hand with the first finger pointing up, as when the user moves the pointer over a link. Identical to hand. </item>
            <item>progress</item><item>Internet Explorer 6 and later. Arrow with an hourglass next to it, indicating that a process is running in the background. User interaction with the page is unaffected. </item>
            <item>row-resize</item><item>Internet Explorer 6 and later. Arrows pointing up and down with a horizontal bar separating them, indicating that the item/row can be resized vertically. </item>
            <item>text</item><item>Editable text; usually an I-bar. </item>
            <item>url(uri)</item><item>Internet Explorer 6 and later. Cursor is defined by the author, using a custom Uniform Resource Identifier (URI), such as url('mycursor.cur'). Cursors of type .CUR and .ANI are the only supported cursor types. </item>
            <item>vertical-text</item><item>Internet Explorer 6 and later. Editable vertical text, indicated by a horizontal I-bar. </item>
            <item>wait</item><item>Hourglass or watch, indicating that the program is busy and the user should wait. </item>
            <item>*-resize</item><item>Arrows, indicating an edge is to be moved; the asterisk (*) can be N, NE, NW, S, SE, SW, E, or W—each representing a compass direction. </item>
            </list>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.display">
            <summary>
            Sets or retrieves whether the object is rendered. 
            </summary>
            <remarks>
            In Internet Explorer 4.0, the block, inline, and list-item values are not supported explicitly, but do render the element. 
            <para>The block and inline values are supported explicitly as of Internet Explorer 5.</para>
            <para>In Internet Explorer 5.5 and earlier, the default value of this property for LI elements is block.</para>
            <para>The inline-block value is supported as of Internet Explorer 5.5. You can use this value to give an object a layout without specifying the object's height or width.</para>
            <para>All visible HTML objects are block or inline. For example, a div object is a block element, and a span object is an inline element. Block elements typically start a new line and can contain other block elements and inline elements. Inline elements do not typically start a new line and can contain other inline elements or data. Changing the values for the display property affects the layout of the surrounding content by:
            <list type="bullet">
            <item>Adding a new line after the element with the value block.</item> 
            <item>Removing a line from the element with the value inline. </item>
            <item>Hiding the data for the element with the value none. </item>
            </list>
            </para>
            <para>
            In contrast to the visibility property, display = none reserves no space for the object on the screen.
            </para>
            <para>
            The table-header-group and table-footer-group values can be used to specify that the contents of the tHead and tFoot objects are displayed on every page for a table that spans multiple pages.
            </para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.filter">
            <summary>
            Sets or retrieves the filter or collection of filters applied to the object.  
            </summary>
            <remarks>
            <para>An object must have layout for the filter to render. A simple way to 
            accomplish this is to give the element a specified height and/or width. 
            However, there are several other properties that can give an element layout. 
            For more information on these other properties, see the hasLayout property.</para>
            <para>The shadow filter can be applied to the img object by setting the filter 
            on the image's parent container.</para>
            <para>The filter mechanism is extensible and enables you to develop and add 
            additional filters later. For more information about filters, see 
            <see href="http://msdn.microsoft.com/workshop/author/filter/filters.asp">Introduction to Filters and Transitions</see> 
            on MSDN (online connection required).</para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.height">
            <summary>
            Sets or retrieves the height of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.left">
            <summary>
            Sets or retrieves the position of the object relative to the left edge of the next 
            positioned object in the document hierarchy.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.letterSpacing">
            <summary>
            Sets or retrieves the amount of additional space between letters in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.letterSpacingNormal">
            <summary>
            Sets or retrieves the amount of additional space between letters in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.lineHeight">
            <summary>
            Sets or retrieves the distance between lines in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.listStyle">
            <summary>
            Sets or retrieves up to three separate IHTMLStyle::listStyle properties of the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.listStyleImage">
            <summary>
            Sets or retrieves a value that indicates which image to use as a list-item marker for the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.listStylePosition">
            <summary>
            Sets or retrieves a variable that indicates how the list-item marker is drawn relative to the content of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.listStyleType">
            <summary>
            Sets or retrieves the predefined type of the line-item marker for the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.overflow">
            <summary>
            Sets or retrieves a value indicating how to manage the content of the object 
            when the content exceeds the height or width of the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.pageBreakAfter">
            <summary>
            Sets or retrieves a value indicating whether a page break occurs after the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.pageBreakBefore">
            <summary>
            Sets or retrieves a string indicating whether a page break occurs before the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.pixelBottom">
            <summary>
            Sets or retrieves the bottom position of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.pixelRight">
            <summary>
            Sets or retrieves the right position of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.position">
            <summary>
            Retrieves the type of positioning used for the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.posBottom">
            <summary>
            Sets or retrieves the bottom position of the object in the units specified by the IHTMLStyle::left attribute.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.posRight">
            <summary>
            Sets or retrieves the right position of the object in the units specified by the IHTMLStyle::top attribute.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.RemoveAttribute(System.String)">
            <summary>
            Removes the given attribute from the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
            <param name="attribute">Specifies the attribute name.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.GetAttribute(System.String)">
            <summary>
            Get the given attribute from the object. 
            </summary>
            <remarks>
            The caller is supposed to convert to appropriate type.
            </remarks>
            <param name="attribute">Specifies the attribute name.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.SetAttribute(System.String,System.Object)">
            <summary>
            Sets the value of the specified attribute. 
            </summary>
            <remarks>
            If the attribute not exists the value wil be created and placed at the first 
            position in the collection.
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
            <param name="attribute">Specifies the name of the attribute.</param>
            <param name="value">Variant that specifies the string, number, or Boolean to assign to the attribute. </param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.styleFloat">
            <summary>
            Sets or retrieves on which side of the object the text will flow. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.textAlign">
            <summary>
            Sets or retrieves whether the text in the object is left-aligned, 
            right-aligned, centered, or justified.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.textIndent">
            <summary>
            Sets or retrieves the indentation of the first line of text in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.textTransform">
            <summary>
            Sets or retrieves the rendering of the text in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.top">
            <summary>
            Sets or retrieves the position of the object relative to the top of the 
            next positioned object in the document hierarchy.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.verticalAlign">
            <summary>
            Sets or retrieves the vertical alignment of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.visibility">
            <summary>
            Sets or retrieves whether the content of the object is displayed.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.whiteSpace">
            <summary>
            Sets or retrieves a value that indicates whether lines are automatically broken inside the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.width">
            <summary>
            Sets or retrieves the width of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.wordSpacing">
            <summary>
            Sets or retrieves the amount of additional space between words in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.wordSpacingNormal">
            <summary>
            Sets or retrieves the amount of additional space between words in the object to the default value.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.zIndex">
            <summary>
            Sets or retrieves the stacking order of positioned objects as integer value.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.zIndexAuto">
            <summary>
            Sets or retrieves the stacking order of positioned objects as auto value.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IElementStyle.Zoom">
            <summary>
            Sets or retrieves the documents zoom level.  
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">
            <summary>
            This class represents the effective style definition.
            </summary>
            <remarks>
            A style definition is either an inline style (attribute style of any stylable element) or the
            definition part of a style rule. A rule is a combination of a descriptor and a style.
            <para>
            The purpose of this class is to have an isolated store for the effective CSS definitions. 
            This behaves slightly different from the styles defined as part of the elements. The native class CssStyle allows access
            to style definitions using the <see cref="T:System.Windows.Forms.PropertyGrid">PropertyGrid</see> and
            not the NetRix StyleEditor. 
            </para>
            <para>
            The effective Style is readonly and presents the cascaded styles including all global or external
            definition as well as the inline styles at the selected node.
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.#ctor(GuruComponents.Netrix.ComInterop.Interop.IHTMLCurrentStyle)">
            <summary>
            Ctor
            </summary>
            <param name="hs"></param>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundStyles">
            <summary>
            Holds one background style definition.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundStyles.#ctor(System.String,System.Drawing.Color,System.String,GuruComponents.Netrix.WebEditing.Styles.BackgroundRepeat,GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundPosition)">
            <summary>
            Ctor
            </summary>
            <param name="a"></param>
            <param name="c"></param>
            <param name="i"></param>
            <param name="r"></param>
            <param name="p"></param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundStyles.Attachment">
            <summary>
            Attachment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundStyles.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundStyles.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundStyles.Repeat">
            <summary>
            Repeat
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundStyles.Position">
            <summary>
            Retrieves the x-coordinate and y-coordinate of the backgroundPosition property.  
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundStyles.ToString">
            <summary>
            Not implemented.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundPosition">
            <summary>
            Holds one background position definition.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundPosition.#ctor(System.Web.UI.WebControls.Unit,System.Web.UI.WebControls.Unit)">
            <summary>
            Ctor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundPosition.X">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundPosition.Y">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.BackgroundPosition.ToString">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border">
            <summary>
            Holds one border property definition.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.BorderProperties">
            <summary>
            Holds the properties of a border definition.
            </summary>
            <remarks>
            The properties are built using Color, Style and Width values.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.BorderProperties.#ctor(System.Drawing.Color,System.Web.UI.WebControls.BorderStyle,System.String)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.BorderProperties.BorderColor">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.BorderProperties.BorderStyle">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.BorderProperties.BorderWidth">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.BorderProperties.ToString">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Web.UI.WebControls.BorderStyle,System.Web.UI.WebControls.BorderStyle,System.Web.UI.WebControls.BorderStyle,System.Web.UI.WebControls.BorderStyle,System.String,System.String,System.String,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="lc"></param>
            <param name="rc"></param>
            <param name="tc"></param>
            <param name="bc"></param>
            <param name="ls"></param>
            <param name="rs"></param>
            <param name="ts"></param>
            <param name="bs"></param>
            <param name="lw"></param>
            <param name="rw"></param>
            <param name="tw"></param>
            <param name="bw"></param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.Left">
            <summary>
            Left border style property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.Right">
            <summary>
            Right border style property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.Top">
            <summary>
            Top border style property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.Bottom">
            <summary>
            Bottom border style property.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Border.ToString">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Clip">
            <summary>
            Holds the style clip definition. 
            </summary>
            <remarks>
            The clip is a rectangle, which is defined using a left, right, top and bottom value. 
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Clip.Left">
            <summary>
            Left clip style property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Clip.Top">
            <summary>
            Top clip style property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Clip.Right">
            <summary>
            Right clip style property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Clip.Bottom">
            <summary>
            Bottom clip style property.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Clip.ToString">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Font">
            <summary>
            Holds a font definition.
            </summary>
            <remarks>
            The font is defined using Font Family, Size, Style, Variant and Weight.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Font.#ctor(System.String,System.Web.UI.WebControls.Unit,System.String,System.String,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="ff"></param>
            <param name="fs"></param>
            <param name="fst"></param>
            <param name="fv"></param>
            <param name="fw"></param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Font.FontFamily">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Font.FontSize">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Font.FontStyle">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Font.FontVariant">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Font.FontWeight">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.Font.ToString">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.FourProperties">
            <summary>
            Used to handle properties build with four values.
            </summary>
            <remarks>
            This class is used to hold the values for left, right, top, and bottom used by the
            effective style definition.
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.FourProperties.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.FourProperties.Left">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.FourProperties.Right">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.FourProperties.Top">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.FourProperties.Bottom">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.FourProperties.ToString">
            <summary>
            TODO: Add comment.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.background">
            <summary>
            Retrieves how the background is built. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.border">
            <summary>
            Retrieves the border properties of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.clear">
            <summary>
            Retrieves whether the object allows floating objects on its left side, right side, or both, so that the next text displays past the floating objects. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.clip">
            <summary>
            Retrieves which part of a positioned object is visible.  
            </summary>
            <remarks>
            <para>
            This property defines the shape and size of the positioned object that is visible. The Horizontalposition must be set to absolute. Any part of the object that is outside the clipping region is transparent. Any coordinate can be replaced by the value auto, which exposes the respective side (that is, the side is not clipped).
            </para>
            <para>
            The order of the values rect(0 0 50 50) renders the object invisible because it sets the top and right positions of the clipping region to 0. To achieve a 50-by-50 view port, use rect(0 50 50 0).
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.color">
            <summary>
            Retrieves the color of the text of the object.  
            </summary>
            <remarks>
            Some browsers do not recognize color names, but all browsers should recognize RGB color values and display them correctly.
            Therefore the property returns always RGB values, even if the value was previously set using names. This is a different behavior compared to the original MSHTML.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.cursor">
            <summary>
            Retrieves the type of cursor to display as the mouse pointer moves over the object.  
            </summary>
            <remarks>
            <list type="table">
            <listheader><item>Cursor String</item><item>Definition</item></listheader>
            <item>all-scroll</item><item> Internet Explorer 6 and later. Arrows pointing up, down, left, and right with a dot in the middle, indicating that the page can be scrolled in any direction. </item>
            <item>auto</item><item>Default. Browser determines which cursor to display based on the current context. </item>
            <item>col-resize</item><item>Internet Explorer 6 and later. Arrows pointing left and right with a vertical bar separating them, indicating that the item/column can be resized horizontally. </item>
            <item>crosshair</item><item>Simple cross hair. </item>
            <item>default</item><item>Platform-dependent default cursor; usually an arrow. </item>
            <item>hand</item><item>Hand with the first finger pointing up, as when the user moves the pointer over a link. </item>
            <item>help</item><item>Arrow with question mark, indicating help is available. </item>
            <item>move</item><item>Crossed arrows, indicating something is to be moved.           </item>
            <item>no-drop</item><item>Internet Explorer 6 and later. Hand with a small circle with a line through it, indicating that the dragged item cannot be dropped at the current cursor location. </item>
            <item>not-allowed</item><item>Internet Explorer 6 and later. Circle with a line through it, indicating that the requested action will not be carried out. </item>
            <item>pointer</item><item>Internet Explorer 6 and later. Hand with the first finger pointing up, as when the user moves the pointer over a link. Identical to hand. </item>
            <item>progress</item><item>Internet Explorer 6 and later. Arrow with an hourglass next to it, indicating that a process is running in the background. User interaction with the page is unaffected. </item>
            <item>row-resize</item><item>Internet Explorer 6 and later. Arrows pointing up and down with a horizontal bar separating them, indicating that the item/row can be resized vertically. </item>
            <item>text</item><item>Editable text; usually an I-bar. </item>
            <item>url(uri)</item><item>Internet Explorer 6 and later. Cursor is defined by the author, using a custom Uniform Resource Identifier (URI), such as url('mycursor.cur'). Cursors of type .CUR and .ANI are the only supported cursor types. </item>
            <item>vertical-text</item><item>Internet Explorer 6 and later. Editable vertical text, indicated by a horizontal I-bar. </item>
            <item>wait</item><item>Hourglass or watch, indicating that the program is busy and the user should wait. </item>
            <item>*-resize</item><item>Arrows, indicating an edge is to be moved; the asterisk (*) can be N, NE, NW, S, SE, SW, E, or W—each representing a compass direction. </item>
            </list>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.display">
            <summary>
            Retrieves whether the object is rendered. 
            </summary>
            <remarks>
            In Internet Explorer 4.0, the block, inline, and list-item values are not supported explicitly, but do render the element. 
            <para>The block and inline values are supported explicitly as of Internet Explorer 5.</para>
            <para>In Internet Explorer 5.5 and earlier, the default value of this property for LI elements is block.</para>
            <para>The inline-block value is supported as of Internet Explorer 5.5. You can use this value to give an object a layout without specifying the object's height or width.</para>
            <para>All visible HTML objects are block or inline. For example, a div object is a block element, and a span object is an inline element. Block elements typically start a new line and can contain other block elements and inline elements. Inline elements do not typically start a new line and can contain other inline elements or data. Changing the values for the display property affects the layout of the surrounding content by:
            <list type="bullet">
            <item>Adding a new line after the element with the value block.</item> 
            <item>Removing a line from the element with the value inline. </item>
            <item>Hiding the data for the element with the value none. </item>
            </list>
            </para>
            <para>
            In contrast to the visibility property, display = none reserves no space for the object on the screen.
            </para>
            <para>
            The table-header-group and table-footer-group values can be used to specify that the contents of the tHead and tFoot objects are displayed on every page for a table that spans multiple pages.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.font">
            <summary>
            Retrieves the font and various font options used for text in the object.  
            </summary>
            <remarks>
            <para>The value is a prioritized list of font family names and generic family names. List items are separated by commas to minimize confusion between multiple-word font family names. If the font family name contains white space, it should appear in single or double quotation marks; generic font family names are values and cannot appear in quotation marks. </para>
            <para>Because you do not know which fonts users have installed, you should provide a list of alternatives with a generic font family at the end of the list. This list can include embedded fonts. For more information about embedding fonts, see the @font-face rule.</para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.height">
            <summary>
            Retrieves the height of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.left">
            <summary>
            Retrieves the position of the object relative to the left edge of the next positioned object in the document hierarchy.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.letterSpacing">
            <summary>
            Retrieves the amount of additional space between letters in the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.lineHeight">
            <summary>
            Retrieves the distance between lines in the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.listStyleImage">
            <summary>
            Retrieves a value that indicates which image to use as a list-item marker for the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.listStylePosition">
            <summary>
            Retrieves a variable that indicates how the list-item marker is drawn relative to the content of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.listStyleType">
            <summary>
            Retrieves the predefined type of the line-item marker for the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.margin">
            <summary>
            Retrieves the margins of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.overflow">
            <summary>
            Retrieves a value indicating how to manage the content of the object when the content exceeds the height or width of the object. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.padding">
            <summary>
            Retrieves the amount of space to insert between the border of the object and the content.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.pageBreakAfter">
            <summary>
            Retrieves a value indicating whether a page break occurs after the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.pageBreakBefore">
            <summary>
            Retrieves a string indicating whether a page break occurs before the object. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.position">
            <summary>
            Retrieves the type of positioning used for the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.styleFloat">
            <summary>
            Retrieves on which side of the object the text will flow. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.textAlign">
            <summary>
            Retrieves whether the text in the object is left-aligned, right-aligned, centered, or justified.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.textDecoration">
            <summary>
            Retrieves a value that indicates whether the text in the object has blink, line-through, overline, or underline decorations.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.textIndent">
            <summary>
            Retrieves the indentation of the first line of text in the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.top">
            <summary>
            Retrieves the position of the object relative to the top of the next positioned object in the document hierarchy.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.verticalAlign">
            <summary>
            Retrieves the vertical alignment of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.visibility">
            <summary>
            Retrieves whether the content of the object is displayed.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.width">
            <summary>
            Retrieves the width of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.zIndex">
            <summary>
            Retrieves the stacking order of positioned objects.  
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.ConvertEnumeration(System.Type,System.String)">
            <summary>
            Replaces upper chars from enum names into minus signs, ignoring the leading character.
            </summary>
            <param name="enumType"></param>
            <param name="enumString"></param>
            <returns></returns>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle.ToString">
            <summary>
            Design time support
            </summary>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.DisplayStyles">
            <summary>
            Controls how the object is rendered.
            </summary>
            <remarks>
            In Internet Explorer 4.0, the block, inline, and list-item values are not supported explicitly, but do render the element. 
            <para>The block and inline values are supported explicitly as of Internet Explorer 5.</para>
            <para>In Internet Explorer 5.5 and earlier, the default value of this property for li elements is block.</para>
            <para>The inline-block value is supported as of Internet Explorer 5.5. You can use this value to give an object a layout without specifying the object's height or width.</para>
            <para>All visible HTML objects are block or inline. For example, a div object is a block element, and a span object is an inline element. Block elements typically start a new line and can contain other block elements and inline elements. Inline elements do not typically start a new line and can contain other inline elements or data. Changing the values for the IHTMLStyle::display property affects the layout of the surrounding content by: </para>
            <list type="bullet">
                <item>Adding a new line after the element with the value block. </item>
                <item>Removing a line from the element with the value inline.   </item>
                <item>Hiding the data for the element with the value none.             </item>
                </list>
            <para>In contrast to the IHTMLStyle::visibility property, IHTMLStyle::display = none reserves no space for the object on the screen.</para>
            <para>The table-header-group and table-footer-group values can be used to specify that the contents of the tHead and tFoot objects are displayed on every page for a table that spans multiple pages.</para>
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.DisplayStyles.Block">
            <summary>
            Object is rendered as a block element. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.DisplayStyles.None">
            <summary>
            Object is not rendered. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.DisplayStyles.Inline">
            <summary>
            Default. Object is rendered as an inline element sized by the dimensions of the content. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.DisplayStyles.InlineBlock">
            <summary>
            Object is rendered inline, but the contents of the object are rendered as a block element. Adjacent inline elements are rendered on the same line, space permitting. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.DisplayStyles.ListItem">
            <summary>
            Internet Explorer 6 and later. Object is rendered as a block element, and a list-item marker is added. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.DisplayStyles.TableHeaderGroup">
            <summary>
            Table header is always displayed before all other rows and row groups, and after any top captions. The header is displayed on each page spanned by a table.  
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.DisplayStyles.TableFooterGroup">
            <summary>
            Table footer is always displayed after all other rows and row groups, and before any bottom captions. The footer is displayed on each page spanned by a table.  
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IClipStyle">
            <summary>
            Interface for clip style attribute.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipStyle.Left">
            <summary>
            The left value of the clip area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipStyle.Right">
            <summary>
            The right value of the clip area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipStyle.Top">
            <summary>
            The top value of the clip area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipStyle.Bottom">
            <summary>
            The bottom value of the clip area.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipStyle.ClipType">
            <summary>
            The clip type.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipStyle.ClipString">
            <summary>
            Gets or sets the string value representation of the clip area.
            </summary>
            <remarks>
            The clip format is "auto" or "rect(top right bottom left)" where the values are given in
            typical style sheet measures (px, pt, ...).
            </remarks>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle">
            <summary>
            Base Interface for current styles
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.background">
            <summary>
            Sets or retrieves how the background is styled to the object within the document. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.border">
            <summary>
            Sets or retrieves the color of the bottom border of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.clear">
            <summary>
            Sets or retrieves whether the object allows floating objects on its left side, right side, or both, so that the next text displays past the floating objects. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.clip">
            <summary>
            Sets or retrieves which part of a positioned object is visible.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.color">
            <summary>
            Sets or retrieves the color of the text of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.cursor">
            <summary>
            Sets or retrieves the type of cursor to display as the mouse pointer moves over the object.  
            </summary>
            <remarks>
            <list type="table">
            <listheader><item>Cursor String</item><item>Definition</item></listheader>
            <item>all-scroll</item><item> Internet Explorer 6 and later. Arrows pointing up, down, left, and right with a dot in the middle, indicating that the page can be scrolled in any direction. </item>
            <item>auto</item><item>Default. Browser determines which cursor to display based on the current context. </item>
            <item>col-resize</item><item>Internet Explorer 6 and later. Arrows pointing left and right with a vertical bar separating them, indicating that the item/column can be resized horizontally. </item>
            <item>crosshair</item><item>Simple cross hair. </item>
            <item>default</item><item>Platform-dependent default cursor; usually an arrow. </item>
            <item>hand</item><item>Hand with the first finger pointing up, as when the user moves the pointer over a link. </item>
            <item>help</item><item>Arrow with question mark, indicating help is available. </item>
            <item>move</item><item>Crossed arrows, indicating something is to be moved.           </item>
            <item>no-drop</item><item>Internet Explorer 6 and later. Hand with a small circle with a line through it, indicating that the dragged item cannot be dropped at the current cursor location. </item>
            <item>not-allowed</item><item>Internet Explorer 6 and later. Circle with a line through it, indicating that the requested action will not be carried out. </item>
            <item>pointer</item><item>Internet Explorer 6 and later. Hand with the first finger pointing up, as when the user moves the pointer over a link. Identical to hand. </item>
            <item>progress</item><item>Internet Explorer 6 and later. Arrow with an hourglass next to it, indicating that a process is running in the background. User interaction with the page is unaffected. </item>
            <item>row-resize</item><item>Internet Explorer 6 and later. Arrows pointing up and down with a horizontal bar separating them, indicating that the item/row can be resized vertically. </item>
            <item>text</item><item>Editable text; usually an I-bar. </item>
            <item>url(uri)</item><item>Internet Explorer 6 and later. Cursor is defined by the author, using a custom Uniform Resource Identifier (URI), such as url('mycursor.cur'). Cursors of type .CUR and .ANI are the only supported cursor types. </item>
            <item>vertical-text</item><item>Internet Explorer 6 and later. Editable vertical text, indicated by a horizontal I-bar. </item>
            <item>wait</item><item>Hourglass or watch, indicating that the program is busy and the user should wait. </item>
            <item>*-resize</item><item>Arrows, indicating an edge is to be moved; the asterisk (*) can be N, NE, NW, S, SE, SW, E, or W—each representing a compass direction. </item>
            </list>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.display">
            <summary>
            Sets or retrieves whether the object is rendered. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.font">
            <summary>
            Sets or retrieves the font used for text in the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.height">
            <summary>
            Sets or retrieves the height of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.left">
            <summary>
            Sets or retrieves the position of the object relative to the left edge of the next positioned object in the document hierarchy.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.letterSpacing">
            <summary>
            Sets or retrieves the amount of additional space between letters in the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.lineHeight">
            <summary>
            Sets or retrieves the distance between lines in the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.listStyleImage">
            <summary>
            Sets or retrieves a value that indicates which image to use as a list-item marker for the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.listStylePosition">
            <summary>
            Sets or retrieves a variable that indicates how the list-item marker is drawn relative to the content of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.listStyleType">
            <summary>
            Sets or retrieves the predefined type of the line-item marker for the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.margin">
            <summary>
            Sets or retrieves the margin of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.overflow">
            <summary>
            Sets or retrieves a value indicating how to manage the content of the object when the content exceeds the height or width of the object. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.padding">
            <summary>
            Sets or retrieves the amount of space to insert between the border of the object and the content.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.pageBreakAfter">
            <summary>
            Sets or retrieves a value indicating whether a page break occurs after the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.pageBreakBefore">
            <summary>
            Sets or retrieves a string indicating whether a page break occurs before the object. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.position">
            <summary>
            Retrieves the type of positioning used for the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.styleFloat">
            <summary>
            Sets or retrieves on which side of the object the text will flow. 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.textAlign">
            <summary>
            Sets or retrieves whether the text in the object is left-aligned, right-aligned, centered, or justified.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.textDecoration">
            <summary>
            Sets or retrieves a value that indicates whether the text in the object has blink, line-through, overline, or underline decorations.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.textIndent">
            <summary>
            Sets or retrieves the indentation of the first line of text in the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.top">
            <summary>
            Sets or retrieves the position of the object relative to the top of the next positioned object in the document hierarchy.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.verticalAlign">
            <summary>
            Sets or retrieves the vertical alignment of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.visibility">
            <summary>
            Sets or retrieves whether the content of the object is displayed.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.width">
            <summary>
            Sets or retrieves the width of the object.  
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IEffectiveStyle.zIndex">
            <summary>
            Sets or retrieves the stacking order of positioned objects as integer value.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IBackgroundStyles">
            <summary>
            Holds one background style definition.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackgroundStyles.Attachment">
            <summary>
            Attachment name (usually, an URL).
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackgroundStyles.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackgroundStyles.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackgroundStyles.Repeat">
            <summary>
            Repeat information.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackgroundStyles.Position">
            <summary>
            Retrieves the x-coordinate and y-coordinate of the backgroundPosition property.  
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IBackgroundPosition">
            <summary>
            Holds one background position definition.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackgroundPosition.X">
            <summary>
            X position
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBackgroundPosition.Y">
            <summary>
            Y position
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IBorderEffective">
            <summary>
            Holds one border property definition.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBorderEffective.Left">
            <summary>
            Left border property definition.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBorderEffective.Right">
            <summary>
            Right border property definition.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBorderEffective.Top">
            <summary>
            Top border property definition.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBorderEffective.Bottom">
            <summary>
            Bottom border property definition.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IClipEffective">
            <summary>
            Holds the style clip definition. 
            </summary>
            <remarks>
            The clip is a rectangle, which is defined using a left, right, top and bottom value. 
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipEffective.Left">
            <summary>
            Clip on left side.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipEffective.Top">
            <summary>
            Clip on top side.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipEffective.Right">
            <summary>
            Clip on right side.
            </summary>        
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IClipEffective.Bottom">
            <summary>
            Clip on bottom side.
            </summary>    
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IFontEffective">
            <summary>
            Holds a font definition.
            </summary>
            <remarks>
            The font is defined using Font Family, Size, Style, Variant and Weight.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFontEffective.FontFamily">
            <summary>
            Font family
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFontEffective.FontSize">
            <summary>
            Font size
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFontEffective.FontStyle">
            <summary>
            Style
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFontEffective.FontVariant">
            <summary>
            Variant
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFontEffective.FontWeight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IFourProperties">
            <summary>
            Used to handle properties build with four values.
            </summary>
            <remarks>
            This class is used to hold the values for left, right, top, and bottom used by the
            effective style definition.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFourProperties.Left">
            <summary>
            Left property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFourProperties.Right">
            <summary>
            Right property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFourProperties.Top">
            <summary>
            Top property.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFourProperties.Bottom">
            <summary>
            Bottom property.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IBorderProperties">
            <summary>
            Border properties.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBorderProperties.BorderColor">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBorderProperties.BorderStyle">
            <summary>
            Style
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IBorderProperties.BorderWidth">
            <summary>
            Width
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IFont">
            <summary>
            Store font styles.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFont.font">
            <summary>
            Font name
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFont.fontFamily">
            <summary>
            Fotn family name.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFont.fontSize">
            <summary>
            Size
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFont.fontStyle">
            <summary>
            Style
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFont.fontVariant">
            <summary>
            Variant (italic, ...)
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IFont.fontWeight">
            <summary>
            Weight (bold, ...)
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IMargin">
            <summary>
            CSS margin 
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.margin">
            <summary>
            Margin for all sides.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.marginBottom">
            <summary>
            Nottom margin
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.marginBottomAuto">
            <summary>
            Is set to auto
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.marginLeft">
            <summary>
            Left margin
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.marginLeftAuto">
            <summary>
            Left is set to auto
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.marginRight">
            <summary>
            Right margin
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.marginRightAuto">
            <summary>
            Right is set to auto
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.marginTop">
            <summary>
            Top margin
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IMargin.marginTopAuto">
            <summary>
            Top is set to auto
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IPadding">
            <summary>
            Stores padding style information.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.padding">
            <summary>
            Padding in unit measures for all sides.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.paddingBottom">
            <summary>
            Padding in unit measures for bottom side.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.paddingBottomAuto">
            <summary>
            True if bottom padding is not set.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.paddingLeft">
            <summary>
            Padding in unit measures for left side.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.paddingLeftAuto">
            <summary>
            True if left padding is not set.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.paddingRight">
            <summary>
            Padding in unit measures for right side.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.paddingRightAuto">
            <summary>
            True if right padding is not set.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.paddingTop">
            <summary>
            Padding in unit measures for top side.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IPadding.paddingTopAuto">
            <summary>
            True if top padding is not set.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IStyle">
            <summary>
            IStyle gives interactive access to each property of a style rule.
            </summary>
            <remarks>
            CssStyle class implements IStyle interface.
            A style definition is either an inline style (attribute style of any stylable element) or the
            definition part of a style rule. A rule is a combination of a descriptor and a style.
            <para>
            The purpose of this class is to have an isolated store for CSS definitions. This behaves slightly
            different from the styles defined as part of the elements. The native class CssStyle allows access
            to style definitions using the <see cref="T:System.Windows.Forms.PropertyGrid">PropertyGrid</see> and
            not the NetRix StyleEditor. 
            </para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.background">
            <summary>
            Sets or retrieves up to five separate background properties of the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundAttachment">
            <summary>
            Sets or retrieves how the background image is attached to the object within the document. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundColor">
            <summary>
            Sets or retrieves the color behind the content of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundImage">
            <summary>
            Sets or retrieves the background image of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundPositionUnit">
            <summary>
            Sets or retrieves the position of the background of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundPositionVerticalAlign">
            <summary>
            Sets or retrieves the position of the background of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundPositionHorizontalAlign">
            <summary>
            Sets or retrieves the position of the background of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundPositionX">
            <summary>
            Sets or retrieves the x-coordinate of the IHTMLStyle::backgroundPosition property.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundPositionY">
            <summary>
            Sets or retrieves the y-coordinate of the IHTMLStyle::backgroundPosition property.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.backgroundRepeat">
            <summary>
            Sets or retrieves how the backgroundImage property of the object is tiled. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.border">
            <summary>
            Sets or retrieves the properties to draw around the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderBottom">
            <summary>
            Sets or retrieves the properties of the bottom border of the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderBottomColor">
            <summary>
            Sets or retrieves the color of the bottom border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderBottomStyle">
            <summary>
            Sets or retrieves the style of the bottom border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderBottomWidth">
            <summary>
            Sets or retrieves the width of the bottom border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderColor">
            <summary>
            Sets or retrieves the border color of the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderLeft">
            <summary>
            Sets or retrieves the properties of the left border of the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderLeftColor">
            <summary>
            Sets or retrieves the color of the left border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderLeftStyle">
            <summary>
            Sets or retrieves the style of the left border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderLeftWidth">
            <summary>
            Sets or retrieves the width of the left border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderRight">
            <summary>
            Sets or retrieves the properties of the right border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderRightColor">
            <summary>
            Sets or retrieves the color of the right border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderRightStyle">
            <summary>
            Sets or retrieves the style of the right border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderRightWidth">
            <summary>
            Sets or retrieves the width of the right border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderStyle">
            <summary>
            Sets or retrieves the style of the left, right, top, and bottom borders of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderTop">
            <summary>
            Sets or retrieves the properties of the top border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderTopColor">
            <summary>
            Sets or retrieves the color of the top border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderTopStyle">
            <summary>
            Sets or retrieves the style of the top border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderTopWidth">
            <summary>
            Sets or retrieves the width of the top border of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.borderWidth">
            <summary>
            Sets or retrieves the width of the left, right, top, and bottom borders of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.clear">
            <summary>
            Sets or retrieves whether the object allows floating objects on its left side, right side, or both, so that the next text displays past the floating objects. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.clip">
            <summary>
            Sets or retrieves which part of a positioned object is visible.  
            </summary>
            <remarks>
            <para>
            This property defines the shape and size of the positioned object 
            that is visible. The Horizontalposition must be set to absolute. 
            Any part of the object that is outside the clipping region is transparent. 
            Any coordinate can be replaced by the value auto, which exposes the 
            respective side (that is, the side is not clipped).
            </para>
            <para>
            The order of the values rect(0 0 50 50) renders the object invisible 
            because it sets the top and right positions of the clipping region to 0. 
            To achieve a 50-by-50 view port, use rect(0 50 50 0).
            </para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.color">
            <summary>
            Sets or retrieves the color of the text of the object.  
            </summary>
            <remarks>
            Some browsers do not recognize color names, but all browsers should 
            recognize RGB color values and display them correctly.
            Therefore the property returns always RGB values, even if the value 
            was previously set using names. This is a different behavior compared to the original MSHTML.
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.cssText">
            <summary>
            Sets or retrieves the persisted representation of the style rule. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.cursor">
            <summary>
            Sets or retrieves the type of cursor to display as the mouse pointer moves over the object.  
            </summary>
            <remarks>
            <list type="table">
            <listheader><item>Cursor String</item><item>Definition</item></listheader>
            <item>all-scroll</item><item> Internet Explorer 6 and later. Arrows pointing up, down, left, and right with a dot in the middle, indicating that the page can be scrolled in any direction. </item>
            <item>auto</item><item>Default. Browser determines which cursor to display based on the current context. </item>
            <item>col-resize</item><item>Internet Explorer 6 and later. Arrows pointing left and right with a vertical bar separating them, indicating that the item/column can be resized horizontally. </item>
            <item>crosshair</item><item>Simple cross hair. </item>
            <item>default</item><item>Platform-dependent default cursor; usually an arrow. </item>
            <item>hand</item><item>Hand with the first finger pointing up, as when the user moves the pointer over a link. </item>
            <item>help</item><item>Arrow with question mark, indicating help is available. </item>
            <item>move</item><item>Crossed arrows, indicating something is to be moved.           </item>
            <item>no-drop</item><item>Internet Explorer 6 and later. Hand with a small circle with a line through it, indicating that the dragged item cannot be dropped at the current cursor location. </item>
            <item>not-allowed</item><item>Internet Explorer 6 and later. Circle with a line through it, indicating that the requested action will not be carried out. </item>
            <item>pointer</item><item>Internet Explorer 6 and later. Hand with the first finger pointing up, as when the user moves the pointer over a link. Identical to hand. </item>
            <item>progress</item><item>Internet Explorer 6 and later. Arrow with an hourglass next to it, indicating that a process is running in the background. User interaction with the page is unaffected. </item>
            <item>row-resize</item><item>Internet Explorer 6 and later. Arrows pointing up and down with a horizontal bar separating them, indicating that the item/row can be resized vertically. </item>
            <item>text</item><item>Editable text; usually an I-bar. </item>
            <item>url(uri)</item><item>Internet Explorer 6 and later. Cursor is defined by the author, using a custom Uniform Resource Identifier (URI), such as url('mycursor.cur'). Cursors of type .CUR and .ANI are the only supported cursor types. </item>
            <item>vertical-text</item><item>Internet Explorer 6 and later. Editable vertical text, indicated by a horizontal I-bar. </item>
            <item>wait</item><item>Hourglass or watch, indicating that the program is busy and the user should wait. </item>
            <item>*-resize</item><item>Arrows, indicating an edge is to be moved; the asterisk (*) can be N, NE, NW, S, SE, SW, E, or W—each representing a compass direction. </item>
            </list>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.display">
            <summary>
            Sets or retrieves whether the object is rendered. 
            </summary>
            <remarks>
            In Internet Explorer 4.0, the block, inline, and list-item values are not supported explicitly, but do render the element. 
            <para>The block and inline values are supported explicitly as of Internet Explorer 5.</para>
            <para>In Internet Explorer 5.5 and earlier, the default value of this property for LI elements is block.</para>
            <para>The inline-block value is supported as of Internet Explorer 5.5. You can use this value to give an object a layout without specifying the object's height or width.</para>
            <para>All visible HTML objects are block or inline. For example, a div object is a block element, and a span object is an inline element. Block elements typically start a new line and can contain other block elements and inline elements. Inline elements do not typically start a new line and can contain other inline elements or data. Changing the values for the display property affects the layout of the surrounding content by:
            <list type="bullet">
            <item>Adding a new line after the element with the value block.</item> 
            <item>Removing a line from the element with the value inline. </item>
            <item>Hiding the data for the element with the value none. </item>
            </list>
            </para>
            <para>
            In contrast to the visibility property, display = none reserves no space for the object on the screen.
            </para>
            <para>
            The table-header-group and table-footer-group values can be used to specify that the contents of the tHead and tFoot objects are displayed on every page for a table that spans multiple pages.
            </para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.filter">
            <summary>
            Sets or retrieves the filter or collection of filters applied to the object.  
            </summary>
            <remarks>
            <para>An object must have layout for the filter to render. A simple way to 
            accomplish this is to give the element a specified height and/or width. 
            However, there are several other properties that can give an element layout. 
            For more information on these other properties, see the hasLayout property.</para>
            <para>The shadow filter can be applied to the img object by setting the filter 
            on the image's parent container.</para>
            <para>The filter mechanism is extensible and enables you to develop and add 
            additional filters later. For more information about filters, see 
            <see href="http://msdn.microsoft.com/workshop/author/filter/filters.asp">Introduction to Filters and Transitions</see> 
            on MSDN (online connection required).</para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.font">
            <summary>
            Sets or retrieves a combination of separate IHTMLStyle::font properties of the object. Alternatively, sets or retrieves one or more of six user-preference fonts. 
            </summary>
            <remarks>
            <para>This is a composite property that specifies up to six font values. The font-style, font-variant, and font-weight values may appear in any order before font-size. However, the font-size, line-height, and font-family properties must appear in the order listed. Setting the IHTMLStyle::font property also sets the component properties. In this case, the string must be a combination of valid values for the component properties; only font-family may have more than one value. If the string does not contain a value for a component property, that property is set to its default, regardless of prior settings for that component property.</para>
            <para>As of Internet Explorer 6, when you use the !DOCTYPE declaration to specify standards-compliant mode, the following conditions apply to this property. </para>
            <para>The font-size and font-family values must be declared. If font-size and font-family are not declared, or are not in the correct order, the IHTMLStyle::font property is ignored.</para>
            <para>All specified values must appear in the correct order. Otherwise, the IHTMLStyle::font property is ignored.</para>
            <para>In standards-compliant mode, the default font-size is small, not medium. If not explicitly set, font-size returns a point value.</para>
            <para>For more information about standards-compliant parsing and the !DOCTYPE declaration, see CSS Enhancements in Internet Explorer 6.</para>
            <para>When specifying the user preferences caption, icon, menu, message-box, small-caption, or status-bar for this property, do not set other values for the font property on the same element. If you do, the other values might render, but the user preference value is ignored.</para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.fontFamily">
            <summary>
            Sets or retrieves the name of the font used for text in the object.  
            </summary>
            <remarks>
            <para>The value is a prioritized list of font family names and generic family names. 
            List items are separated by commas to minimize confusion between multiple-word font 
            family names. If the font family name contains white space, it should appear in 
            single or double quotation marks; generic font family names are values and cannot 
            appear in quotation marks. </para>
            <para>Because you do not know which fonts users have installed, you should provide 
            a list of alternatives with a generic font family at the end of the list. This list 
            can include embedded fonts. For more information about embedding fonts, see the at font-face rule.
            </para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.fontSize">
            <summary>
            Sets or retrieves a value that indicates the font size used for text in the object.  
            </summary>
            <remarks>
            <para>As of Internet Explorer 6, when you use the !DOCTYPE declaration to specify standards-compliant mode, the default value for this property is small, not medium.</para>
            <para>Negative values are not allowed. Font sizes using the proportional "em" measure are based on the font size of the parent object.</para>
            <para>Possible length values specified in a relative measurement, using the height of the element's font (em) or the height of the letter "x" (ex), are supported in Internet Explorer 4.0 and later.</para>
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.fontStyle">
            <summary>
            Sets or retrieves the font style of the object as italic, normal, or oblique.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.fontVariant">
            <summary>
            Sets or retrieves whether the text of the object is in small capital letters. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.fontWeight">
            <summary>
            Sets or retrieves the weight of the font of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.height">
            <summary>
            Sets or retrieves the height of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.left">
            <summary>
            Sets or retrieves the position of the object relative to the left edge of the next 
            positioned object in the document hierarchy.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.letterSpacing">
            <summary>
            Sets or retrieves the amount of additional space between letters in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.letterSpacingNormal">
            <summary>
            Sets or retrieves the amount of additional space between letters in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.lineHeight">
            <summary>
            Sets or retrieves the distance between lines in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.listStyle">
            <summary>
            Sets or retrieves up to three separate IHTMLStyle::listStyle properties of the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.listStyleImage">
            <summary>
            Sets or retrieves a value that indicates which image to use as a list-item marker for the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.listStylePosition">
            <summary>
            Sets or retrieves a variable that indicates how the list-item marker is drawn relative to the content of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.listStyleType">
            <summary>
            Sets or retrieves the predefined type of the line-item marker for the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.margin">
            <summary>
            Sets or retrieves the width of the top, right, bottom, and left margins of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.marginBottom">
            <summary>
            Sets or retrieves the height of the bottom margin of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.marginLeft">
            <summary>
            Sets or retrieves the width of the left margin of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.marginRight">
            <summary>
            Sets or retrieves the width of the right margin of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.marginTop">
            <summary>
            Sets or retrieves the height of the top margin of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.overflow">
            <summary>
            Sets or retrieves a value indicating how to manage the content of the object 
            when the content exceeds the height or width of the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.padding">
            <summary>
            Sets or retrieves the amount of space to insert between the object and its margin or, 
            if there is a border, between the object and its border.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.paddingBottom">
            <summary>
            Sets or retrieves the amount of space to insert between the bottom border of 
            the object and the content.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.paddingLeft">
            <summary>
            Sets or retrieves the amount of space to insert between the left border of the object and the content.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.paddingRight">
            <summary>
            Sets or retrieves the amount of space to insert between the right border of the object and the content.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.paddingTop">
            <summary>
            Sets or retrieves the amount of space to insert between the top border of the object and the content.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.pageBreakAfter">
            <summary>
            Sets or retrieves a value indicating whether a page break occurs after the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.pageBreakBefore">
            <summary>
            Sets or retrieves a string indicating whether a page break occurs before the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.pixelBottom">
            <summary>
            Sets or retrieves the bottom position of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.pixelRight">
            <summary>
            Sets or retrieves the right position of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.position">
            <summary>
            Retrieves the type of positioning used for the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.posBottom">
            <summary>
            Sets or retrieves the bottom position of the object in the units specified by the IHTMLStyle::left attribute.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.posRight">
            <summary>
            Sets or retrieves the right position of the object in the units specified by the IHTMLStyle::top attribute.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.IStyle.RemoveAttribute(System.String)">
            <summary>
            Removes the given attribute from the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
            <param name="attribute">Specifies the attribute name.</param>
        </member>
        <member name="M:GuruComponents.Netrix.WebEditing.Styles.IStyle.SetAttribute(System.String,System.Object)">
            <summary>
            Sets the value of the specified attribute. 
            </summary>
            <remarks>
            If the attribute not exists the value wil be created and placed at the first 
            position in the collection.
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
            <param name="attribute">Specifies the name of the attribute.</param>
            <param name="value">Variant that specifies the string, number, or Boolean to assign to the attribute. </param>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.styleFloat">
            <summary>
            Sets or retrieves on which side of the object the text will flow. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textAlign">
            <summary>
            Sets or retrieves whether the text in the object is left-aligned, 
            right-aligned, centered, or justified.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textDecoration">
            <summary>
            Sets or retrieves a value that indicates whether the text in the object 
            has blink, line-through, overline, or underline decorations.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textDecorationBlink">
            <summary>
            Sets or retrieves a Boolean value that indicates whether the object's 
            IHTMLStyle::textDecoration property has a value of "blink." 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textDecorationLineThrough">
            <summary>
            Sets or retrieves a Boolean value indicating whether the text in the object has a 
            line drawn through it.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textDecorationNone">
            <summary>
            Sets or retrieves the Boolean value indicating whether the IHTMLStyle::textDecoration 
            property for the object has been set to none.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textDecorationOverline">
            <summary>
            Sets or retrieves a Boolean value indicating whether the text in the object 
            has a line drawn over it.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textDecorationUnderline">
            <summary>
            Sets or retrieves whether the text in the object is underlined.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textIndent">
            <summary>
            Sets or retrieves the indentation of the first line of text in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.textTransform">
            <summary>
            Sets or retrieves the rendering of the text in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.top">
            <summary>
            Sets or retrieves the position of the object relative to the top of the 
            next positioned object in the document hierarchy.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.verticalAlign">
            <summary>
            Sets or retrieves the vertical alignment of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.visibility">
            <summary>
            Sets or retrieves whether the content of the object is displayed.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.whiteSpace">
            <summary>
            Sets or retrieves a value that indicates whether lines are automatically broken inside the object. 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.width">
            <summary>
            Sets or retrieves the width of the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.wordSpacing">
            <summary>
            Sets or retrieves the amount of additional space between words in the object.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.wordSpacingNormal">
            <summary>
            Sets or retrieves the amount of additional space between words in the object to the default value.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.zIndex">
            <summary>
            Sets or retrieves the stacking order of positioned objects as integer value.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.zIndexAuto">
            <summary>
            Sets or retrieves the stacking order of positioned objects as auto value.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.scrollbarArrowColor">
            <summary>
            Sets or retrieves the color of the top and left edges of the scroll box and 
            scroll arrows of a scroll bar.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.scrollbarBaseColor">
            <summary>
            Sets or retrieves the color of the main elements of a scroll bar, 
            which include the scroll box, track, and scroll arrows.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.scrollbarDarkShadowColor">
            <summary>
            Sets or retrieves the color of the gutter of a scroll bar.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.scrollbarFaceColor">
            <summary>
            Sets or retrieves the color of the scroll box and scroll arrows of a scroll bar.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.scrollbarHighlightColor">
            <summary>
            Sets or retrieves the color of the top and left edges of the scroll box and 
            scroll arrows of a scroll bar.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.scrollbarShadowColor">
            <summary>
            Sets or retrieves the color of the bottom and right edges of the scroll box and 
            scroll arrows of a scroll bar.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.scrollbarTrackColor">
            <summary>
            Sets or retrieves the color of the track element of a scroll bar.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </remarks>
            
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyle.wordWrap">
            <summary>
            Sets or retrieves whether to break words when the content exceeds the boundaries of its container.
            </summary>
            <remarks>
            This property applies to elements that have layout. An element has layout when 
            it is absolutely positioned, is a block element, or is an inline element with a 
            specified height or width.
            <para>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.CssEffectiveStyle">CssEffectiveStyle</see> 
            class for more details.
            </para>
            </remarks>
            
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.IStyleRule">
            <summary>
            Allows access to the specific style rule and there definition.
            </summary>
            <remarks>
            StyleRule class implements IStyleRule interface.
            <para>
            See StyleRule class for more details.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyleRule.RuleName">
            <summary>
            Gets or sets the name of the rule, including the preceding type sign.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.IStyleRule.StyleDefinition">
            <summary>
            Gives access to the style definition.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.ITextDecoration">
            <summary>
            Text decoration style definition.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ITextDecoration.textDecoration">
            <summary>
            Sets or retrieves a value that indicates whether the text in the object 
            has blink, line-through, overline, or underline decorations.
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle">IStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ITextDecoration.textDecorationBlink">
            <summary>
            Sets or retrieves a Boolean value that indicates whether the object's 
            IHTMLStyle::textDecoration property has a value of "blink." 
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle">IStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ITextDecoration.textDecorationLineThrough">
            <summary>
            Sets or retrieves a Boolean value indicating whether the text in the object has a 
            line drawn through it.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle">IStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ITextDecoration.textDecorationNone">
            <summary>
            Sets or retrieves the Boolean value indicating whether the IHTMLStyle::textDecoration 
            property for the object has been set to none.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle">IStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ITextDecoration.textDecorationOverline">
            <summary>
            Sets or retrieves a Boolean value indicating whether the text in the object 
            has a line drawn over it.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle">IStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="P:GuruComponents.Netrix.WebEditing.Styles.ITextDecoration.textDecorationUnderline">
            <summary>
            Sets or retrieves whether the text in the object is underlined.  
            </summary>
            <remarks>
            See <see cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle">IStyle</see> 
            class for more details.
            </remarks>
            <seealso cref="T:GuruComponents.Netrix.WebEditing.Styles.IStyle"/>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.ListStylePosition">
            <summary>
            Defines a variable that indicates how the list-item marker is drawn relative to the content of the object. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStylePosition.Outside">
            <summary>
            Default. Marker is placed outside the text, and any wrapping text is not aligned under the marker.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStylePosition.Inside">
            <summary>
            Marker is placed inside the text, and any wrapping text is aligned under the marker. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStylePosition.NotSet">
            <summary>
            The value is not set. If assigned as value the attribute is being removed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.ListStyleType">
            <summary>
            Defines a variable that indicates how the list-item marker is drawn relative to the content of the object. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.disc">
            <summary>
            Default. Solid circles.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.Circle">
            <summary>
            Outlined circles.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.Square">
            <summary>
            Solid squares.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.Decimal">
            <summary>
            1, 2, 3, 4, and so on. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.LowerRoman">
            <summary>
            i, ii, iii, iv, and so on. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.UpperRoman">
            <summary>
            I, II, III, IV, and so on.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.LowerAlpha">
            <summary>
            a, b, c, d, and so on.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.UpperAlpha">
            <summary>
            A, B, C, D, and so on. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.None">
            <summary>
            No marker is shown. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.ListStyleType.NotSet">
            <summary>
            The value is not set. If assigned as value the attribute is being removed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.PageBreakStyles">
            <summary>
            Defines a value indicating whether a page break occurs before or after the object.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.PageBreakStyles.Always">
            <summary>
            Always insert a page break after the object. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.PageBreakStyles.Auto">
            <summary>
            Default. Neither force nor forbid a page break after the object. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.PageBreakStyles.Empty">
            <summary>
            string Do not insert a page break. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.PageBreakStyles.Left">
            <summary>
            Currently works the same as always. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.PageBreakStyles.Right">
            <summary>
            Currently works the same as always. 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.PageBreakStyles.NotSet">
            <summary>
            The value is not set. If assigned as value the attribute is being removed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.StyleType">
            <summary>
            Type of style rule.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.StyleType.Class">
            <summary>
            Rule defines a class.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.StyleType.Id">
            <summary>
            Rule defines an ID.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.StyleType.Pseudo">
            <summary>
            Rule defines a pseudo class.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.TextAlign">
            <summary>
            Alignment of text on the line or within a container.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.TextAlign.Left">
            <summary>
            Left alignment (default it not set).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.TextAlign.Right">
            <summary>
            Right alignment.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.TextAlign.Center">
            <summary>
            Center within container or page body.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.TextAlign.Justify">
            <summary>
            Justify (full align).
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.TextAlign.NotSet">
            <summary>
            The value is not set. If assigned as value the attribute is being removed.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.WebEditing.Styles.WordWrap">
            <summary>
            Sets or retrieves whether to break words when the content exceeds the boundaries of its container.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.WordWrap.Normal">
            <summary>
            Default. Content exceeds the boundaries of its container.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.WebEditing.Styles.WordWrap.BreakWord">
            <summary>
            Content wraps to next line, and a word-break occurs when necessary.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormatting.Elements.ElementType">
            <summary>
            What kind of element this is.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.ElementType.Other">
            <summary>
            Not specified
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.ElementType.Block">
            <summary>
            BLock
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.ElementType.Inline">
            <summary>
            Inline 
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.ElementType.Any">
            <summary>
            Any element without rendering information
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags">
            <summary>
            Determines how to format this kind of element.
            </summary>
            <remarks>
            These elements can be combined in any way.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags.None">
            <summary>
            No information present.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags.Inline">
            <summary>
            It's an inline element, like &lt;b&gt;, which is rendered in line.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags.NoIndent">
            <summary>
            This renders the element on its own line, but does not indent it.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags.NoEndTag">
            <summary>
            This renders the element without expecting an end element.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags.PreserveContent">
            <summary>
            The content of the element has to be preserved.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags.Xml">
            <summary>
            The element is supposed to render always as XML.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags.Comment">
            <summary>
            Treat as a Comment.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.FormattingFlags.AllowPartialTags">
            <summary>
            The element can be build as partial tag.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo">
            <summary>
            This class is used to store information about the kind of element.
            </summary>
            <remarks>
            It is used internally to
            control the formatting behavior. Externally it is used to provide such information for plug-in modules.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.Flags">
            <summary>
            Flags
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.FollowingWhiteSpaceType">
            <summary>
            Following WhiteSpace Type
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.InnerWhiteSpaceType">
            <summary>
            Inner WhiteSpace Type
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.IsComment">
            <summary>
            Is comment
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.IsInline">
            <summary>
            Is inline
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.IsXml">
            <summary>
            Is XML
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.NoEndTag">
            <summary>
            Has no end tag
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.NoIndent">
            <summary>
            Cannot indent
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.PreserveContent">
            <summary>
            Preserve content
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.TagName">
            <summary>
            Tag's name
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo.CanContainTag(GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo)">
            <summary>
            Can have other tags in it.
            </summary>
            <param name="info">Which one?</param>
            <returns></returns>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormatting.Elements.WhiteSpaceType">
            <summary>
            Determines how significant are whitespaces within this element.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.WhiteSpaceType.Significant">
            <summary>
            Preserve Whitespaces in any case.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.WhiteSpaceType.NotSignificant">
            <summary>
            Treat whitespaces as non significant.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.Elements.WhiteSpaceType.CarryThrough">
            <summary>
            Let whitespaces as they are, but add when formatting requires one.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormatting.EntityFormat">
            <summary>
            The MSHTML DLL internally codes all enhanced characters in the coding of the document
            and replaces all entities with there values in the current codepage. To avoid conflict
            with other systems expecting entities, the formatter can replace all enhanced characters
            with entities. This enumeration determines if and how this replacement will go.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.EntityFormat.Named">
            <summary>
            Using named entities, like &amp;name;.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.EntityFormat.Numeric">
            <summary>
            using numeric entities, like &amp;#123;.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.EntityFormat.NoEntity">
            <summary>
            Do not replace any enhanced characters.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormatting.HtmlFormatterCase">
            <summary>
            An enumaration to control the case folding option the formatter uses during the
            rewriting of tagnames and attributes.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.HtmlFormatterCase.PreserveCase">
            <summary>
            The case found in the MSHTML source will not changed.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.HtmlFormatterCase.UpperCase">
            <summary>
            The content will changed to upper case.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlFormatting.HtmlFormatterCase.LowerCase">
            <summary>
            The content will changed to lower case.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatter">
            <summary>
            The HtmlFormatter formats a HTML stream into XHTML format and indent the element in a functional
            related way, e.g. it recognizes tables and can distinguish between inline and block tags.
            </summary>
        </member>
        <member name="M:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatter.AddCustomElement(GuruComponents.Netrix.HtmlFormatting.Elements.ITagInfo)">
            <summary>
            This method adds a new TagInfo object to the collection of TagInfos. These collection is used to format
            any registered tag correctly. All tag known in HTML 4.0 are predefined. The Plug-In module uses this method to 
            enhance the know tags.
            </summary>
            <param name="ti"></param>
        </member>
        <member name="M:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatter.Format(System.String,System.IO.TextWriter,GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions)">
            <summary>
            Starts the beautifier and returns the resulting code in the TextWriter.
            </summary>
            <param name="input">The string to be beautified.</param>
            <param name="output">A TextWriter derived pointer to the result.</param>
            <param name="options">The formatting options used to handle the content.</param>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions">
            <summary>
            Formatter options used to determine the overall behavior of the formatter class.
            </summary>
            <remarks>
            The formatter will analyse and refresh the content to beeing HTML 4/XHTML compliant.
            This changes the indentation, quotes and newlines. The formatter does not allow
            any code preservation.
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.FakeEmptyParaTag">
            <summary>
            Empty P Tags do not render properly in MSHTML. To fix this option adds &amp;nbsp; between.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.PreserveWhitespace">
            <summary>
            Indicates whether whitespaces (space, newline, tab) should be preserved, if possible. Default is false.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.CommentCDATA">
            <summary>
            Gets or sets the ability to add JavaScript comments before CDATA token.
            </summary>
            <remarks>
            The XHTML module wraps JavaScript code into &lt;![CDATA[ ]]&gt; sections. Some
            script processors have problems reading this. To avoid any scripting issues this
            option can set to <c>true</c> and the formatter will add // sign in front of &lt;![CDATA[ ]]&gt;:
            <para>
            &lt;script>
            //&lt;![CDATA[ 
            	Script goes here
            //]]&gt;
            &lt;/script>
            </para>
            <para>
            Default setting is <c>false</c> (option not being used).
            </para>						
            The used string for comment signs defaults to "//". The value can be changed using <see cref="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.CommentCDATAString"/>.
            <seealso cref="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.CommentCDATAString"/>		
            <seealso cref="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.CommentCDATAAddsNewline"/>
            </remarks>		
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.CommentCDATAString">
            <summary>
            The string value used if the formatter needs to add comments before CDATA tokens.
            </summary>
            <remarks>
            <seealso cref="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.CommentCDATA"/>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.CommentCDATAAddsNewline">
            <summary>
            After CDATA and before ending a newline is added autoamtically.
            </summary>
            <seealso cref="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.CommentCDATA"/>
            <remarks>By default there is no newline added.</remarks>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.WordClean">
            <summary>
            Gets or sets the ability to clean MS Word styles.
            </summary>
            <remarks>
            MS Word produces some weird output when content was saved as HTML. If such
            content was loaded or dropped this formatting feature can strip out the
            most of the non HTML 4/XHTML 1 compliant code.
            <para>
            The value defaults to <c>false</c> and must set explicitly.
            </para>
            </remarks>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.AttributeCasing">
            <summary>
            Set the case of attributes. If <code>true</code> all attribute names are upper case.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.Entities">
            <summary>
            If true (default) the entities are built as &amp;name; variant, if any known
            entity exists. Otherwise any enhanced ASCII or unicode character will be
            replaced by the numeric expression &amp;#NNN;.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.ElementCasing">
            <summary>
            Set the case of element names. If <code>true</code> all element names are upper case.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.IndentChar">
            <summary>
            Determines the char used to build indentation.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.IndentSize">
            <summary>
            Determines the number of chars used for each indentation level. Use 1 for tabs and 4 to 8 for whitespace.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.MakeXhtml">
            <summary>
            If <code>true</code> the output conforms to XHTML 1.0, otherwise to HTML 4.0
            If input is XHTML compliant the output will never changed back to HTML 4.0 regardless this option.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.MaxLineLength">
            <summary>
            Forces a line break after leaving the given number of columns per line.
            </summary>
        </member>
        <member name="P:GuruComponents.Netrix.HtmlFormatting.IHtmlFormatterOptions.ReformatStyles">
            <summary>
            Reformats the CSS in attributes and style tags to remove unneccessary spaces. Default is false.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.HtmlSelectionType">
            <summary>
            Declares the type of selection currently made by user.
            </summary>
            <remarks>
            This enumeration is used by the <see cref="T:GuruComponents.Netrix.ISelection"/> interface.
            The Flags attribute was added in v2.0 (2010) to support elements, which are selectable and contain selectable text, such as SPAN. In those case
            the selection class returns the element as part of the elements' collection and the selected text that the element contains.
            </remarks>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlSelectionType.Empty">
            <summary>
            No selection.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlSelectionType.TextSelection">
            <summary>
            Text selection or elements with texts are selected.
            </summary>
        </member>
        <member name="F:GuruComponents.Netrix.HtmlSelectionType.ElementSelection">
            <summary>
            Block elements only selected.
            </summary>
        </member>
        <member name="T:GuruComponents.Netrix.UserInterface.TypeConverters.DropAttribute">
            <summary>
            This attribute is used to sign a method, which can return a list, which in turn is used to
            fill a dropdown element of the corresponding PropertyGrid's property item. 
            </summary>
            <remarks>
            Implementers of Plug-Ins who wish to implement XML elements, can extend their design
            time support by adding this attribute to exact one method. Each property, which has the
            <c>UITypeConverterDropSelection</c> (in UI assembly) type converter attribute attached, will use
            that method as a callback to fill the appropriate list.
            <para>
            The behavior can be extended by inheriting from this and the <c>UITypeConverterDropSelection</c>
            class and implementing additional constructor overloads, which the derived classes can use to
            start different action apart from default one.
            </para>
            </remarks>
        </member>
        <member name="M:GuruComponents.Netrix.UserInterface.TypeConverters.DropAttribute.#ctor">
            <summary>
            Ctor for Drop attribute.
            </summary>
        </member>
    </members>
</doc>
